[
	{
		"assignees":[
			
		],
		"created_at":"2022-12-12T20:23:49Z",
		"title":"Expose DisconnectReason as part of public API",
		"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen you define a listener function for the socket [disconnect event](https://socket.io/docs/v4/server-api/#event-disconnect) in-line, TypeScript correctly infers the type of the `reason` argument to be [DisconnectReason](https://github.com/socketio/socket.io/blob/3b7ced7af7e0a2a66392577f94af1ee5ed190ab1/lib/socket.ts#L28-L40):\r\n\r\n```typescript\r\nsocket.on('disconnect', (reason) => {\r\n  // Type of  'reason' is 'DisconnectReason'\r\n  console.log(`reason: ${reason}`);\r\n});\r\n```\r\n\r\nHowever, I want to create a listener function for the `socket.on('disconnect')` event ahead of time (so that I can later call [removeListener](https://socket.io/docs/v4/server-api/#socketremovelistenereventname-listener) to remove it). But when I do that, the compiler cannot infer that the type of `reason` is `DisconnectReason`:\r\n\r\n```typescript\r\nconst listener = (reason) => {\r\n  // Type of 'reason' is 'any'\r\n  console.log(`reason: ${reason}`);\r\n};\r\nsocket.on('disconnect', listener);\r\n\r\n// Later...\r\nsocket.removeListener('disconnect', listener);\r\n```\r\n\r\nI can import `DisconnectReason` from `socket.io/dist/socket` and create my listener with `reason: DisconnectReason`, but it would be ideal if `DisconnectReason` was exposed as part of the public API, so that I could import it from `socket.io` directly.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI would like to be able to import `DisconnectReason` from `socket.io` directly, instead of from `socket.io/dist/socket`, like so:\r\n\r\n```typescript\r\nimport { DisconnectReason } from 'socket.io';\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\nI considered trying to determine the type of the listener function via some clever TypeScript, like so:\r\n\r\n```typescript\r\nconst listener: Parameters<typeof socket.on<'disconnect'>>[1] = (reason) => {\r\n  // Type of 'reason' is 'DisconnectReason'\r\n  console.log(`reason: ${reason}`);\r\n};\r\n```\r\n\r\nThat _kind of_ worked, but I was running into eslint/prettier errors about the syntax, and I don't actually think it's more readable/clear than just using `DisconnectReason` directly:\r\n\r\n```typescript\r\nconst listener = (reason: DisconnectReason) => {\r\n  // Type of 'reason' is 'DisconnectReason'\r\n  console.log(`reason: ${reason}`);\r\n};\r\n```\r\n\r\nThanks!",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4556/labels{/name}",
		"author_association":"NONE",
		"number":4556,
		"updated_at":"2022-12-12T20:24:25Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4556/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1492690292,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4556/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4556",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4556/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4556",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4556/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/nathanjcochran/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/nathanjcochran/repos",
			"following_url":"https://api.github.com/users/nathanjcochran/following{/other_user}",
			"starred_url":"https://api.github.com/users/nathanjcochran/starred{/owner}{/repo}",
			"login":"nathanjcochran",
			"followers_url":"https://api.github.com/users/nathanjcochran/followers",
			"type":"User",
			"url":"https://api.github.com/users/nathanjcochran",
			"subscriptions_url":"https://api.github.com/users/nathanjcochran/subscriptions",
			"received_events_url":"https://api.github.com/users/nathanjcochran/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/3749079?v=4",
			"events_url":"https://api.github.com/users/nathanjcochran/events{/privacy}",
			"html_url":"https://github.com/nathanjcochran",
			"site_admin":false,
			"id":3749079,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjM3NDkwNzk=",
			"organizations_url":"https://api.github.com/users/nathanjcochran/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Y-KV0"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-12-12T14:47:29Z",
		"title":"Incorrect types of Server",
		"body":"**Describe the bug**\r\n\r\nWhile using method `.on()` of socket.io server the returning type of this method is Server, but in fact this method returns node's EventEmitter\r\n\r\n**To Reproduce**\r\n\r\nSocket.IO server version: `4.5.1`\r\n\r\n*Server*\r\n\r\n```js\r\nimport { Server } from \"socket.io\";\r\nimport { EventEmitter } from 'node:events';\r\n\r\nconst io = new Server(3000, {});\r\n\r\nconst server = io.on(\"connection\", (socket) => {\r\n  console.log(`connect ${socket.id}`);\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(`disconnect ${socket.id}`);\r\n  });\r\n});\r\n\r\nconsole.log(server instanceof Server)  // false, but hovering over server variable shows Server<ServerToClientEvents, ServerToClientEvents, DefaultEventsMap, any>\r\nconsole.log(server instanceof EventEmitter)  // true\r\n```\r\n\r\n**Expected behavior**\r\nEither it should return instance of server, either return type should be EventEmitter\r\n\r\n**Platform:**\r\n - Device: Desktop\r\n - OS: Windows 11\r\n\r\n**Additional context**\r\n\r\nConsider the following snippet:\r\n\r\n```ts\r\nclass EventEmitter {\r\n    on(): this {\r\n        return this\r\n    };\r\n}\r\n\r\nconst emitter = new EventEmitter().on();  // type is EventEmitter\r\n\r\nclass Server extends EventEmitter{};\r\n\r\nconst server = new Bar().on();  // type is Server, but in reality it's EventEmitter\r\n```",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4555/labels{/name}",
		"author_association":"NONE",
		"number":4555,
		"updated_at":"2022-12-12T14:47:29Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4555/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1492055712,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4555/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4555",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4555/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4555",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4555/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Niks218/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Niks218/repos",
			"following_url":"https://api.github.com/users/Niks218/following{/other_user}",
			"starred_url":"https://api.github.com/users/Niks218/starred{/owner}{/repo}",
			"login":"Niks218",
			"followers_url":"https://api.github.com/users/Niks218/followers",
			"type":"User",
			"url":"https://api.github.com/users/Niks218",
			"subscriptions_url":"https://api.github.com/users/Niks218/subscriptions",
			"received_events_url":"https://api.github.com/users/Niks218/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/22540642?v=4",
			"events_url":"https://api.github.com/users/Niks218/events{/privacy}",
			"html_url":"https://github.com/Niks218",
			"site_admin":false,
			"id":22540642,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjIyNTQwNjQy",
			"organizations_url":"https://api.github.com/users/Niks218/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Y7vag"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-12-11T14:33:04Z",
		"title":"Update the source to examples/chat",
		"body":"Using the code provided in the directory does not include the Chatbot shwon on https://socketio-chat-h9jt.herokuapp.com/",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4553/labels{/name}",
		"author_association":"NONE",
		"number":4553,
		"updated_at":"2022-12-11T14:33:04Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4553/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1490060516,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4553/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4553",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4553/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4553",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4553/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/3kh0/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/3kh0/repos",
			"following_url":"https://api.github.com/users/3kh0/following{/other_user}",
			"starred_url":"https://api.github.com/users/3kh0/starred{/owner}{/repo}",
			"login":"3kh0",
			"followers_url":"https://api.github.com/users/3kh0/followers",
			"type":"User",
			"url":"https://api.github.com/users/3kh0",
			"subscriptions_url":"https://api.github.com/users/3kh0/subscriptions",
			"received_events_url":"https://api.github.com/users/3kh0/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/58097612?v=4",
			"events_url":"https://api.github.com/users/3kh0/events{/privacy}",
			"html_url":"https://github.com/3kh0",
			"site_admin":false,
			"id":58097612,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjU4MDk3NjEy",
			"organizations_url":"https://api.github.com/users/3kh0/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Y0ITk"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-12-08T07:56:00Z",
		"title":"[Bug] user can still emit to room even if server kick user from room",
		"body":"If I create a room and the server remote user from the room using the socket id the user can still emit message to the room \r\n\r\n\r\n````\r\nio.in(socketId).socketsLeave(roomId);\r\n````\r\n\r\nAfter running this code I notice that the user can still emit to the room",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4550/labels{/name}",
		"author_association":"NONE",
		"number":4550,
		"updated_at":"2022-12-14T07:01:09Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4550/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1483984463,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4550/timeline",
		"comments":4,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4550",
		"labels":[
			{
				"default":true,
				"color":"d876e3",
				"name":"question",
				"description":"Further information is requested",
				"id":2111669362,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/question",
				"node_id":"MDU6TGFiZWwyMTExNjY5MzYy"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4550/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4550",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4550/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/elmcapp/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/elmcapp/repos",
			"following_url":"https://api.github.com/users/elmcapp/following{/other_user}",
			"starred_url":"https://api.github.com/users/elmcapp/starred{/owner}{/repo}",
			"login":"elmcapp",
			"followers_url":"https://api.github.com/users/elmcapp/followers",
			"type":"User",
			"url":"https://api.github.com/users/elmcapp",
			"subscriptions_url":"https://api.github.com/users/elmcapp/subscriptions",
			"received_events_url":"https://api.github.com/users/elmcapp/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/64275658?v=4",
			"events_url":"https://api.github.com/users/elmcapp/events{/privacy}",
			"html_url":"https://github.com/elmcapp",
			"site_admin":false,
			"id":64275658,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjY0Mjc1NjU4",
			"organizations_url":"https://api.github.com/users/elmcapp/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Yc85P"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-12-07T12:19:33Z",
		"title":"Socket server tries to close external http server, causing `ERR_SERVER_NOT_RUNNING` error",
		"body":"**Describe the bug**\r\n\r\nWhen you initialize socket server, you can either give it an external instance of `HTTPServer`, or let socket.io create its own internal instance.\r\n\r\nHowever, in either case, SocketIO tries to close the server when shutting down:\r\n\r\nhttps://github.com/socketio/socket.io/blob/3b7ced7af7e0a2a66392577f94af1ee5ed190ab1/lib/index.ts#L685\r\n\r\nIn my case, I have my own shutdown procedure elsewhere, and it causes server to throw `ERR_SERVER_NOT_RUNNING` error, because server.close() was called twice.\r\n\r\nThis might be appearing now due to new stricter behavior in node.js, I am not sure. This is running on `v14.17.3`.\r\n\r\n**Expected behavior**\r\n\r\nIMO socket.io should only close HTTP server if it's its own instance. If an instance is provided, it's someone else's responsibility to close that server. Socket.IO shouldn't interfere.\r\n\r\n**Mitigation**\r\n\r\nI am currently using this hack to prevent the uncaught exception:\r\n\r\n```\r\nioServer['httpServer'] = null;\r\nioServer.close();\r\n```",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4546/labels{/name}",
		"author_association":"NONE",
		"number":4546,
		"updated_at":"2022-12-08T06:27:50Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4546/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1481785893,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4546/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4546",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"milestone":{
			"creator":{
				"gists_url":"https://api.github.com/users/darrachequesne/gists{/gist_id}",
				"repos_url":"https://api.github.com/users/darrachequesne/repos",
				"following_url":"https://api.github.com/users/darrachequesne/following{/other_user}",
				"starred_url":"https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
				"login":"darrachequesne",
				"followers_url":"https://api.github.com/users/darrachequesne/followers",
				"type":"User",
				"url":"https://api.github.com/users/darrachequesne",
				"subscriptions_url":"https://api.github.com/users/darrachequesne/subscriptions",
				"received_events_url":"https://api.github.com/users/darrachequesne/received_events",
				"avatar_url":"https://avatars.githubusercontent.com/u/13031701?v=4",
				"events_url":"https://api.github.com/users/darrachequesne/events{/privacy}",
				"html_url":"https://github.com/darrachequesne",
				"site_admin":false,
				"id":13031701,
				"gravatar_id":"",
				"node_id":"MDQ6VXNlcjEzMDMxNzAx",
				"organizations_url":"https://api.github.com/users/darrachequesne/orgs"
			},
			"created_at":"2022-05-12T09:49:19Z",
			"title":"5.0.0",
			"closed_issues":0,
			"url":"https://api.github.com/repos/socketio/socket.io/milestones/39",
			"labels_url":"https://api.github.com/repos/socketio/socket.io/milestones/39/labels",
			"number":39,
			"updated_at":"2022-12-08T06:27:50Z",
			"html_url":"https://github.com/socketio/socket.io/milestone/39",
			"id":7972363,
			"state":"open",
			"open_issues":4,
			"node_id":"MI_kwDOAAiDnM4AeaYL"
		},
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4546/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4546",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4546/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/panta82/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/panta82/repos",
			"following_url":"https://api.github.com/users/panta82/following{/other_user}",
			"starred_url":"https://api.github.com/users/panta82/starred{/owner}{/repo}",
			"login":"panta82",
			"followers_url":"https://api.github.com/users/panta82/followers",
			"type":"User",
			"url":"https://api.github.com/users/panta82",
			"subscriptions_url":"https://api.github.com/users/panta82/subscriptions",
			"received_events_url":"https://api.github.com/users/panta82/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/4291324?v=4",
			"events_url":"https://api.github.com/users/panta82/events{/privacy}",
			"html_url":"https://github.com/panta82",
			"site_admin":false,
			"id":4291324,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQyOTEzMjQ=",
			"organizations_url":"https://api.github.com/users/panta82/orgs"
		},
		"node_id":"I_kwDOAAiDnM5YUkIl"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-12-04T15:30:08Z",
		"title":"Error occurred when use uWebSocket.",
		"body":"**Describe the bug**\r\n\r\nError occurred when use uWebSocket.\r\n\r\nIt runs successfully, but when trying to establish a connection I get the error below.\r\n\r\n```\r\nTypeError: websocket.subscribe is not a function\r\n    at subscribe (C:\\Projects\\ext-service\\.yarn\\__virtual__\\socket.io-virtual-75b1662c1f\\0\\cache\\socket.io-npm-4.5.4-888fc15f6d-b5456d361b.zip\\node_modules\\socket.io\\dist\\uws.js:87:19)\r\n    at Adapter.socket_io_adapter_1.Adapter.addAll (C:\\Projects\\ext-service\\.yarn\\__virtual__\\socket.io-virtual-75b1662c1f\\0\\cache\\socket.io-npm-4.5.4-888fc15f6d-b5456d361b.zip\\node_modules\\socket.io\\dist\\uws.js:22:13)\r\n    at Socket.join (C:\\Projects\\ext-service\\.yarn\\__virtual__\\socket.io-virtual-75b1662c1f\\0\\cache\\socket.io-npm-4.5.4-888fc15f6d-b5456d361b.zip\\node_modules\\socket.io\\dist\\socket.js:298:29)\r\n    at Socket._onconnect (C:\\Projects\\ext-service\\.yarn\\__virtual__\\socket.io-virtual-75b1662c1f\\0\\cache\\socket.io-npm-4.5.4-888fc15f6d-b5456d361b.zip\\node_modules\\socket.io\\dist\\socket.js:338:14)\r\n    at C:\\Projects\\ext-service\\.yarn\\__virtual__\\socket.io-virtual-75b1662c1f\\0\\cache\\socket.io-npm-4.5.4-888fc15f6d-b5456d361b.zip\\node_modules\\socket.io\\dist\\namespace.js:229:24\r\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)\r\n```\r\n\r\n\r\n**To Reproduce**\r\n\r\n*Server*\r\n\r\n```typescript\r\n\r\nimport { Server } from \"socket.io\";\r\nimport { App } from \"uWebSockets.js\";\r\n\r\n(async () => {\r\n    const io = new Server(80);\r\n    io.attachApp(App());\r\n\r\n    io.on('connection', (socket) => {\r\n        console.log('connection');\r\n    });\r\n})();\r\n```\r\n\r\nSocket.IO server version: `^4.5.4`\r\nuWebsocket.js version : `uNetworking/uWebSockets.js#v20.15.0`\r\n\r\n**Expected behavior**\r\n\r\nShould work normally with uWebsocket.\r\n\r\n**Platform:**\r\n - OS: windows 10\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4542/labels{/name}",
		"author_association":"NONE",
		"number":4542,
		"updated_at":"2022-12-08T06:51:27Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4542/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1474919014,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4542/timeline",
		"comments":3,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4542",
		"labels":[
			{
				"default":false,
				"color":"B9DDCE",
				"name":"needs investigation",
				"description":"",
				"id":2833344293,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/needs%20investigation",
				"node_id":"MDU6TGFiZWwyODMzMzQ0Mjkz"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4542/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4542",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4542/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/ChoSeoHwan/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/ChoSeoHwan/repos",
			"following_url":"https://api.github.com/users/ChoSeoHwan/following{/other_user}",
			"starred_url":"https://api.github.com/users/ChoSeoHwan/starred{/owner}{/repo}",
			"login":"ChoSeoHwan",
			"followers_url":"https://api.github.com/users/ChoSeoHwan/followers",
			"type":"User",
			"url":"https://api.github.com/users/ChoSeoHwan",
			"subscriptions_url":"https://api.github.com/users/ChoSeoHwan/subscriptions",
			"received_events_url":"https://api.github.com/users/ChoSeoHwan/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/20502624?v=4",
			"events_url":"https://api.github.com/users/ChoSeoHwan/events{/privacy}",
			"html_url":"https://github.com/ChoSeoHwan",
			"site_admin":false,
			"id":20502624,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjIwNTAyNjI0",
			"organizations_url":"https://api.github.com/users/ChoSeoHwan/orgs"
		},
		"node_id":"I_kwDOAAiDnM5X6Xpm"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-12-03T15:38:04Z",
		"title":"`socket.io` `Socket` class lacks covariance on generic `ListenEvents` and `EmitEvents` types",
		"body":"**Describe the bug**\r\n\r\n`socket.io` `Socket` class is not covariant on either `ListenEvents` or  `EmitEvents`. Its typings are too lax, causing TS to allow variable substitutions that should be forbidden. This bug _does not_ happen for `socket.io-client` `Socket` instance.\r\n\r\n**To Reproduce**\r\n\r\nIt's a type-only bug. Easy to reproduce\r\n\r\n### With socket.io, expectation fails\r\n\r\n_This is a reproduction for `EmitEvents`, it's trivial to reproduce it for `ListenEvents`_\r\n\r\nSocket.IO version: `4.5.4`\r\n\r\n```ts\r\nimport { Socket as ServerSocket } from \"socket.io\";\r\n\r\ntype EmptyRecord = Record<never, never>;\r\ntype Foo = { foo: string };\r\ntype Bar = { bar: string };\r\ntype FooEvents = {\r\n  event: (arg: Foo) => void;\r\n};\r\ntype BarEvents = {\r\n  event: (arg: Bar) => void;\r\n};\r\n\r\ndeclare const foo: FooEvents;\r\n\r\n// @ts-expect-error - BarEvents is not a base type for FooEvents\r\nconst fooBis: FooEvents = foo satisfies BarEvents;\r\n\r\n// EXPECTATION FAILS WITH socket.io\r\n\r\ntype ServerSocketEmitFoo = ServerSocket<EmptyRecord, FooEvents, EmptyRecord, never>;\r\ntype ServerSocketEmitBar = ServerSocket<EmptyRecord, BarEvents, EmptyRecord, never>;\r\n\r\ndeclare const socketFoo: ServerSocket<EmptyRecord, FooEvents, EmptyRecord, never>;\r\n\r\n// @ts-expect-error - ServerSocketEmitBar should not be a base type for ServerSocketEmitFoo\r\nconst socketFooBis: ServerSocketEmitFoo = socketFoo satisfies ServerSocketEmitBar\r\n```\r\n\r\n[See reproduction in TypeScript playground](https://www.typescriptlang.org/play?ts=4.9.3#code/PTAEAEGcBcCcEsDG0Bco4FcCmBYAUPALYAOA9rNKAN6gDKpiA1lpQIaR1awBuX9TLUAF9QAM1ilCoAESQGzaADp4paQG58+aAE9iWUAFESOgEpZE5ACagAvKDMXYlgDwA7LL1gAaUO88A+DTwdPVAAMVJSW2oxSLQYBFcAc2EgkP0AIVZYaJoAI2z4uHhk1K1dfQjSA15XaA47KnxQUA8sOrQACmyktCqASlt-UG5SeEsgoTSK0CzYGvb63ObW2tRQbthe2ezBm2HR8cmg-EtzABts-QtXGFjSPsiFusgTvBAIeoBaLAAPPWQP1gEhyXx28zWHHgHFcpDYoAKkH06ViOSqz3q+Bud1EkQy0Me1Uh0VxUUgrGg0NE8CwHDmGNemneYAMAA0AAoGADCABUAII8gCSAHkAHLhPmCgAytFAAHVBTyABKgOQCJQqJko2hcTz8BRGeDQKrRHU8PjyFjOIzEUzmKw+dGQnw2u2OSw+PxcQLlUJmvWW6CG6BzU26i3q63GbQOB3ghku6OxpyetqwH14U4XK6gbGUNUKKpof0RhRR20x+0p8JPZ2GJNVj2+NMZ-AfcDfP4A6BAkGgMEl2D6ljB0OQAAWpAw52ssMoeX0rAR7GRM1xOUHw6DhCNVSxpFu+cDVXxkGL4aHgeDJrsBZYJvJlMg1NpnHNl-Vo+yQA).\r\n\r\n\r\n### With socket.io-client, expectation succeeds\r\n\r\nSocket.IO client version: `4.5.4`\r\n\r\nThis code compiles fine:\r\n\r\n```ts\r\nimport { Socket as ClientSocket } from \"socket.io-client\";\r\n\r\ntype EmptyRecord = Record<never, never>;\r\ntype Foo = { foo: string };\r\ntype Bar = { bar: string };\r\ntype FooEvents = {\r\n  event: (arg: Foo) => void;\r\n};\r\ntype BarEvents = {\r\n  event: (arg: Bar) => void;\r\n};\r\n\r\ndeclare const foo: FooEvents;\r\n\r\n// @ts-expect-error - BarEvents is not a base type for FooEvents \r\nconst fooBis: FooEvents = foo satisfies BarEvents;\r\n\r\n// EXPECTATION SUCCEEDS WITH socket.io-client\r\n\r\ntype ClientSocketEmitFoo = ClientSocket<EmptyRecord, FooEvents>;\r\ntype ClientSocketEmitBar = ClientSocket<EmptyRecord, BarEvents>;\r\n\r\ndeclare const clientSocketFoo: ClientSocket<EmptyRecord, FooEvents>;\r\n\r\n// @ts-expect-error - ClientSocketEmitBar is not a base type for ClientSocketEmitFoo\r\nconst clientSocketFooBis: ClientSocketEmitFoo = socketFoo satisfies ClientSocketEmitBar\r\n```\r\n\r\n[See reproduction in TypeScript playground](https://www.typescriptlang.org/play?ts=4.9.3#code/PTAEAEGcBcCcEsDG0Bco4FcCmBYAUPALYAOA9rNKAN6gDKpiA1lpQIaSgDCANvFgHbR6TFqAC+oAGaxShUACJIDZtAB08UgFpEvAdHkBufPmgBPYllABREmYBKWROQAmoALygHT2M4A8-LAA3LFgAGlAA4NgAPiM8MwtQADFSUndqKVS0GAR+AHNxOITLACFWWHSaACNy7Lh4fMKTc0sU0itgwQ4PKnxQUCC9NAAKcry0NoBKd2jQQNJ4ZzixIpbQMtgOvW7qPoHO1FBR2HH18um3WfnF5bj8Z0ducssnfhhM0gnUra67vBAINBIJosAAPCzIEGwGQVTRnTYHDjwDj8UhsUA1SCWYqZCptH5A0D4V7vSSpErIr7tRHpMlpSCsaDIyR8DgbAmQP4AqwADQAClZOAAVACCQoAkgB5ABydAAqpxOFYrAARWigADq4qFAAlQEoRGoNNpdIJjPE1jw+IJhCobPBoG10la9LaWL4bMR7I4XOF8YjYs1Ei6bcoWPboBtnaahGHoB7bKYvL74RzA3h7o9nqASZQdNbY4a2mgQ4WVAmvUmfT4-d8A1ywOAgSDwY5oFCYaA4aW3dAI1HkRE0aBWBj2Ni1mSKj24xG2sTSG88zHe20KZASyvZ4QHU6PAaVE6GUzICysBwZ4b++UgA).\r\n\r\n**Expected behavior**\r\n\r\n`socket.io` `Socket` class should be [covariant](https://dmitripavlutin.com/typescript-covariance-contravariance/) on `EmitListeners`. \r\n\r\n**Additional context**\r\n\r\nI suggest implementing typings tests with [`expect-type` library](https://github.com/mmkal/expect-type).\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4541/labels{/name}",
		"author_association":"NONE",
		"number":4541,
		"updated_at":"2022-12-08T14:08:13Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4541/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1474129413,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4541/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4541",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4541/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4541",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4541/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/jsamr/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/jsamr/repos",
			"following_url":"https://api.github.com/users/jsamr/following{/other_user}",
			"starred_url":"https://api.github.com/users/jsamr/starred{/owner}{/repo}",
			"login":"jsamr",
			"followers_url":"https://api.github.com/users/jsamr/followers",
			"type":"User",
			"url":"https://api.github.com/users/jsamr",
			"subscriptions_url":"https://api.github.com/users/jsamr/subscriptions",
			"received_events_url":"https://api.github.com/users/jsamr/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/3646758?v=4",
			"events_url":"https://api.github.com/users/jsamr/events{/privacy}",
			"html_url":"https://github.com/jsamr",
			"site_admin":false,
			"id":3646758,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjM2NDY3NTg=",
			"organizations_url":"https://api.github.com/users/jsamr/orgs"
		},
		"node_id":"I_kwDOAAiDnM5X3W4F"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-11-30T10:08:03Z",
		"title":"`SocketData` being wrapped with `Partial` can create the need to use non-null assertions",
		"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nSocket.IO allows to add arbitrary data to Socket instance with `Socket.data` which is very nice and handy. the problem arises when using this data in a type-safe manner.\r\nPlease take a look at the example below:\r\n\r\nIn this example, the middleware ensures that the socket connection is authenticated and if it is, it adds some data to socket instance for later usage.\r\nAs you can see, the Server object is typed with ISocketData which looks like this :\r\n```ts\r\nexport interface ISocketData {\r\n        userID: string;\r\n        userName: string;\r\n        isEmailVerified: boolean;\r\n        joinedRoomUUID: string | null;\r\n        joinedRoomInviteCode: string | null;\r\n    }\r\n```\r\n![image](https://user-images.githubusercontent.com/46371349/204761185-0b3f649a-2e9f-4906-bca3-728cb4207f54.png)\r\n  \r\nBut since Socket.data type is internally wrapped with `Partial`, undefined type will be added to all of the properties.\r\nThis can causes the need to use non-null assertion or any type of TypeAssertion when using any of the properties in `Socket.data`, since of course Typescript wouldn't know the logical context.\r\n\r\n![image](https://user-images.githubusercontent.com/46371349/204763206-fd2935d1-4d35-473f-8d91-f0495c2fa3aa.png)\r\n  \r\n\r\n**Describe the solution you'd like**\r\n\r\nNot wrapping SocketData with `Partial` internally. Current codebases will work fine and properties can still have the undefined type by just adding it in type of the value passed to SocketData like below if the business logic or anything requires them to have the `undefined` type.\r\n\r\n![image](https://user-images.githubusercontent.com/46371349/204766757-f7aae5d2-efbb-4985-b62d-1300c2974473.png)\r\n\r\n\r\n\r\n**Describe alternatives you've considered**\r\nUsing manual assertions introduced in TS 3.7. please check the links below with the first one being the same example said here.\r\n\r\nhttps://twitter.com/NavidMafi/status/1597884685551513600\r\nhttps://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#assertion-functions\r\n\r\n**Additional context**\r\n![image](https://user-images.githubusercontent.com/46371349/204767888-7eed04fe-3586-475d-bffb-478a66883729.png)\r\n\r\n![image](https://user-images.githubusercontent.com/46371349/204765040-5b66fc9e-1a0e-4957-8ce5-68689fa87a19.png)\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4537/labels{/name}",
		"author_association":"NONE",
		"number":4537,
		"updated_at":"2022-11-30T10:08:03Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4537/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1469371913,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4537/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4537",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4537/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4537",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4537/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/navidmafi/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/navidmafi/repos",
			"following_url":"https://api.github.com/users/navidmafi/following{/other_user}",
			"starred_url":"https://api.github.com/users/navidmafi/starred{/owner}{/repo}",
			"login":"navidmafi",
			"followers_url":"https://api.github.com/users/navidmafi/followers",
			"type":"User",
			"url":"https://api.github.com/users/navidmafi",
			"subscriptions_url":"https://api.github.com/users/navidmafi/subscriptions",
			"received_events_url":"https://api.github.com/users/navidmafi/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/46371349?v=4",
			"events_url":"https://api.github.com/users/navidmafi/events{/privacy}",
			"html_url":"https://github.com/navidmafi",
			"site_admin":false,
			"id":46371349,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ2MzcxMzQ5",
			"organizations_url":"https://api.github.com/users/navidmafi/orgs"
		},
		"node_id":"I_kwDOAAiDnM5XlNYJ"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-11-28T10:42:00Z",
		"title":"Tests not work when use Timer Mocks like `jest.useFakeTimers()`",
		"body":"Hello, when I use `jest.useFakeTimers()`, I don't know how long I have to advance the timers or what method to call so that the internal code that sends and receives socket.io events will be executed\r\n\r\nI want to know what I should do, because I want to increase the execution time of the tests, and since I have to write tests for some features that use setTimeouts, and some RxJs methods like debounce, throttle, this is essential for me.\r\n\r\nThis is a minimal example of jest with typescript.\r\n\r\n\r\n```ts\r\njest.useRealTimers();\r\n\r\nconst {createServer} = require('http');\r\nimport {Server, Socket} from 'socket.io';\r\nimport {Socket as ClientSocket, io as ioc} from 'socket.io-client';\r\n\r\ndescribe('my awesome project', () => {\r\n  let io: Server;\r\n\r\n  let serverSocket: Socket;\r\n  let clientSocket: ClientSocket;\r\n\r\n  beforeAll(done => {\r\n    const httpServer = createServer();\r\n    io = new Server(httpServer);\r\n    httpServer.listen(() => {\r\n      const port = httpServer.address().port;\r\n      clientSocket = ioc(`http://localhost:${port}`);\r\n      io.on('connection', socket => {\r\n        serverSocket = socket;\r\n      });\r\n      clientSocket.on('connect', done);\r\n    });\r\n  });\r\n\r\n  afterAll(() => {\r\n    jest.useRealTimers();\r\n    io.close();\r\n    clientSocket.close();\r\n  });\r\n\r\n  test('should work', async () => {\r\n    jest.useFakeTimers();\r\n\r\n    const onHello = jest.fn();\r\n\r\n    clientSocket.on('hello', onHello);\r\n\r\n    serverSocket.emit('hello', 'world');\r\n\r\n    jest.advanceTimersByTime(10000);\r\n    jest.runAllTicks();\r\n    await new Promise(jest.requireActual('timers').setImmediate);\r\n    expect(onHello).toBeCalledTimes(1);\r\n    // Error\r\n    // Expected number of calls: 1\r\n    // Received number of calls: 0\r\n  });\r\n});\r\n```\r\n\r\nAnd this is the way how I write test currently `without Timer Mocks`, but I need to await a `setTimeout` promise with N milliseconds, to make it work, the problem is this time is variable, for example if I set 4 milliseconds, sometimes the test pass and other times fail, I think is based on my pc resources and the amount of tests that are running.\r\nBut without fake timers this increment the total execution time, and I can't calculate how long to wait for when I want to wait for other methods to execute, for example from rxjs `debounceTime` or `throttleTime`\r\n\r\n\r\n```ts\r\njest.useRealTimers();\r\n\r\nconst {createServer} = require('http');\r\nimport {Server, Socket} from 'socket.io';\r\nimport {Socket as ClientSocket, io as ioc} from 'socket.io-client';\r\n\r\ndescribe('my awesome project', () => {\r\n  let io: Server;\r\n\r\n  let serverSocket: Socket;\r\n  let clientSocket: ClientSocket;\r\n\r\n  beforeAll(done => {\r\n    const httpServer = createServer();\r\n    io = new Server(httpServer);\r\n    httpServer.listen(() => {\r\n      const port = httpServer.address().port;\r\n      clientSocket = ioc(`http://localhost:${port}`);\r\n      io.on('connection', socket => {\r\n        serverSocket = socket;\r\n      });\r\n      clientSocket.on('connect', done);\r\n    });\r\n  });\r\n\r\n  afterAll(() => {\r\n    io.close();\r\n    clientSocket.close();\r\n  });\r\n\r\n  test('should work', async () => {\r\n    const onHello = jest.fn();\r\n\r\n    clientSocket.on('hello', onHello);\r\n\r\n    serverSocket.emit('hello', 'world');\r\n\r\n    await sleep(4);\r\n    // sometimes pass and sometimes fail\r\n    // with 4 milliseconds because this time is not enough time.\r\n    //\r\n    // So how many time should I wait?\r\n    //\r\n    // But without fake timers this increment total execution time,\r\n    // and I can't calculate how long to wait for\r\n    // when I want to wait for other methods to execute,\r\n    // for example from rxjs debounceTime or throttleTime\r\n    expect(onHello).toBeCalledTimes(1);\r\n  });\r\n});\r\n\r\nfunction sleep(ms: number) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n}\r\n\r\n```\r\n\r\nThank you\r\n\r\n____\r\n```json\r\n    \"socket.io\": \"^4.5.3\",\r\n    \"socket.io-client\": \"^4.5.4\"\r\n    \"jest\": \"^29.2.2\",\r\n ```\r\n\r\n**Platform:**\r\n - Node: v16.13.1\r\n - OS: Windows 10\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4534/labels{/name}",
		"author_association":"NONE",
		"number":4534,
		"updated_at":"2022-11-28T10:42:00Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4534/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1466193292,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4534/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4534",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4534/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4534",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4534/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/MiniSuperDev/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/MiniSuperDev/repos",
			"following_url":"https://api.github.com/users/MiniSuperDev/following{/other_user}",
			"starred_url":"https://api.github.com/users/MiniSuperDev/starred{/owner}{/repo}",
			"login":"MiniSuperDev",
			"followers_url":"https://api.github.com/users/MiniSuperDev/followers",
			"type":"User",
			"url":"https://api.github.com/users/MiniSuperDev",
			"subscriptions_url":"https://api.github.com/users/MiniSuperDev/subscriptions",
			"received_events_url":"https://api.github.com/users/MiniSuperDev/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/105388540?v=4",
			"events_url":"https://api.github.com/users/MiniSuperDev/events{/privacy}",
			"html_url":"https://github.com/MiniSuperDev",
			"site_admin":false,
			"id":105388540,
			"gravatar_id":"",
			"node_id":"U_kgDOBkgZ_A",
			"organizations_url":"https://api.github.com/users/MiniSuperDev/orgs"
		},
		"node_id":"I_kwDOAAiDnM5XZFWM"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-11-18T15:30:24Z",
		"title":"WebpackLicensePlugin: Could not find license info for socket.io-client@4.5.3",
		"body":"const WebpackLicensePlugin = require('webpack-license-plugin');\r\nWebpackLicensePlugin: Could not find license info for socket.io-client@4.4.0\r\n\r\nSocket.IO client version: `4.5.3`\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4526/labels{/name}",
		"author_association":"NONE",
		"number":4526,
		"updated_at":"2022-12-08T06:33:33Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4526/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1455336247,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4526/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4526",
		"labels":[
			{
				"default":false,
				"color":"B9DDCE",
				"name":"needs investigation",
				"description":"",
				"id":2833344293,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/needs%20investigation",
				"node_id":"MDU6TGFiZWwyODMzMzQ0Mjkz"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4526/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4526",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4526/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/fbeqirllari/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/fbeqirllari/repos",
			"following_url":"https://api.github.com/users/fbeqirllari/following{/other_user}",
			"starred_url":"https://api.github.com/users/fbeqirllari/starred{/owner}{/repo}",
			"login":"fbeqirllari",
			"followers_url":"https://api.github.com/users/fbeqirllari/followers",
			"type":"User",
			"url":"https://api.github.com/users/fbeqirllari",
			"subscriptions_url":"https://api.github.com/users/fbeqirllari/subscriptions",
			"received_events_url":"https://api.github.com/users/fbeqirllari/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/2406460?v=4",
			"events_url":"https://api.github.com/users/fbeqirllari/events{/privacy}",
			"html_url":"https://github.com/fbeqirllari",
			"site_admin":false,
			"id":2406460,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI0MDY0NjA=",
			"organizations_url":"https://api.github.com/users/fbeqirllari/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Wvqs3"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-11-18T01:37:18Z",
		"title":"If a socket leaves its default room, socket.to('room').emit messages will be received by it despite being sender",
		"body":"**Describe the bug**\r\nIf a socket leaves the default room which matches its socket id, socket.to('room').emit messages will be receives by the client of the sender, even though the documentation makes no mention of this.\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version: `4.5.3`\r\n\r\n*Server*\r\n\r\n```js\r\nimport { Server } from \"socket.io\";\r\n\r\nconst io = new Server(3000, {});\r\n\r\nio.on(\"connection\", (socket) => {\r\n  socket.leave(socket.id);\r\n  OR\r\n  socket.leaveAll();\r\n\r\n  socket.join('TEST');\r\n\r\n  socket.on(\"test\", (message) => {\r\n    socket.to('TEST').emit('test', message);\r\n  });\r\n});\r\n```\r\n\r\nSocket.IO client version: `4.5.3`\r\n\r\n*Client*\r\n\r\n```js\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"ws://localhost:3000/\", {});\r\n\r\nsocket.on(\"test\", (message) => {\r\n  console.log(message);\r\n  // Is logged by sender as well as other clients in the room\r\n});\r\n\r\nsocket.emit('test', 'hello');\r\n```\r\n\r\n**Expected behavior**\r\nI would not expect that leaving the default room would mean the sender receives a message that otherwise it shouldn't. My idea of leaving the default room is that I can ensure each connected client is only in a single room, and then when emitting to the room they're in I was hoping to use:\r\n```\r\nconst [thisRoom] = socket.rooms;\r\nsocket.to(thisRoom).emit('test', message);\r\n```\r\nPerhaps there is a different expected way to use rooms but it would seem a bit clunky to use const [, second] = socket.rooms if I leave each client in the default room?\r\n\r\n**Platform:**\r\n - Device: Windows\r\n - OS: Server 2019 Server, 11 Client\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4524/labels{/name}",
		"author_association":"NONE",
		"number":4524,
		"updated_at":"2022-11-30T00:06:43Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4524/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1454291935,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4524/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4524",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"milestone":{
			"creator":{
				"gists_url":"https://api.github.com/users/darrachequesne/gists{/gist_id}",
				"repos_url":"https://api.github.com/users/darrachequesne/repos",
				"following_url":"https://api.github.com/users/darrachequesne/following{/other_user}",
				"starred_url":"https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
				"login":"darrachequesne",
				"followers_url":"https://api.github.com/users/darrachequesne/followers",
				"type":"User",
				"url":"https://api.github.com/users/darrachequesne",
				"subscriptions_url":"https://api.github.com/users/darrachequesne/subscriptions",
				"received_events_url":"https://api.github.com/users/darrachequesne/received_events",
				"avatar_url":"https://avatars.githubusercontent.com/u/13031701?v=4",
				"events_url":"https://api.github.com/users/darrachequesne/events{/privacy}",
				"html_url":"https://github.com/darrachequesne",
				"site_admin":false,
				"id":13031701,
				"gravatar_id":"",
				"node_id":"MDQ6VXNlcjEzMDMxNzAx",
				"organizations_url":"https://api.github.com/users/darrachequesne/orgs"
			},
			"created_at":"2022-05-12T09:49:19Z",
			"title":"5.0.0",
			"closed_issues":0,
			"url":"https://api.github.com/repos/socketio/socket.io/milestones/39",
			"labels_url":"https://api.github.com/repos/socketio/socket.io/milestones/39/labels",
			"number":39,
			"updated_at":"2022-12-08T06:27:50Z",
			"html_url":"https://github.com/socketio/socket.io/milestone/39",
			"id":7972363,
			"state":"open",
			"open_issues":4,
			"node_id":"MI_kwDOAAiDnM4AeaYL"
		},
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4524/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4524",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4524/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/ElXando/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/ElXando/repos",
			"following_url":"https://api.github.com/users/ElXando/following{/other_user}",
			"starred_url":"https://api.github.com/users/ElXando/starred{/owner}{/repo}",
			"login":"ElXando",
			"followers_url":"https://api.github.com/users/ElXando/followers",
			"type":"User",
			"url":"https://api.github.com/users/ElXando",
			"subscriptions_url":"https://api.github.com/users/ElXando/subscriptions",
			"received_events_url":"https://api.github.com/users/ElXando/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/15262597?v=4",
			"events_url":"https://api.github.com/users/ElXando/events{/privacy}",
			"html_url":"https://github.com/ElXando",
			"site_admin":false,
			"id":15262597,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE1MjYyNTk3",
			"organizations_url":"https://api.github.com/users/ElXando/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Wrrvf"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-11-03T11:11:30Z",
		"title":"Ionic + Cpacitor Electron, NAME_NOT_RESOLVED for socket.io requests",
		"body":"**Describe the bug**\r\n\r\n**Situation**:\r\nI made a repository for testing: https://github.com/ZweiEuro/electron_socket_test\r\n\r\nIt has:\r\nserver.js - minimal socket io server that just console.logs conections. CORS * so that is not an issue. Listening 3002\r\n\r\nA minimal ionic blank project with socket-client installed. The web version just prompts for an ip address and tries to connect to it.\r\nMainly defined in `/src/pages/Home.tsx`. Always connecting to <IP>:3002\r\n\r\nA lot of tasks defined for easier debugging.\r\n\r\nThe ionic project has https://github.com/capacitor-community/electron installed as a platform, it's data is located in `/electron`. It should behave the same way as the ionic web page\r\n\r\n**The Problem**:\r\n\r\n_Using the app Web version:_\r\n\r\n1. Running `node server.js`\r\n2. Running `ionic serve`\r\n3. Navigating browser to `http://localhost:8100/home`\r\n4. Entering your machines ip address in the prompt will connect to it\r\n5. Console says \"connect\" both for the server and the web client => works as intended\r\n\r\n_Using the app electron version:_\r\n(Since electron does not support 'prompt' in their window, you need to hard code the address of the server into Home.tsx, if you do this you need to rebuild (run the tasks again)\r\n\r\n1. Using the tasks \"run electron\" or \"pack electron\" (and starting it manually)\r\n2. open electron dev tools\r\n3. See error \r\n```\r\nGET http://capacitor-electron/socket.io/?EIO=4&transport=polling&t=OGz8z5U net::ERR_NAME_NOT_RESOLVED\r\n```\r\n\r\nTo me it looks like something is getting rewritten incorrectly?\r\n\r\n\r\n**To Reproduce**\r\n\r\n1. clone https://github.com/ZweiEuro/electron_socket_test\r\n2. `npm i` in both electron and the root directory\r\n3. Run the commands listed above, it is easier to start vscode in the directory and using the tasks\r\n4. Web version works, electron version throws the above error\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4512/labels{/name}",
		"author_association":"NONE",
		"number":4512,
		"updated_at":"2022-11-03T13:12:20Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4512/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1434484581,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4512/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4512",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4512/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4512",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4512/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/ZweiEuro/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/ZweiEuro/repos",
			"following_url":"https://api.github.com/users/ZweiEuro/following{/other_user}",
			"starred_url":"https://api.github.com/users/ZweiEuro/starred{/owner}{/repo}",
			"login":"ZweiEuro",
			"followers_url":"https://api.github.com/users/ZweiEuro/followers",
			"type":"User",
			"url":"https://api.github.com/users/ZweiEuro",
			"subscriptions_url":"https://api.github.com/users/ZweiEuro/subscriptions",
			"received_events_url":"https://api.github.com/users/ZweiEuro/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/18036573?v=4",
			"events_url":"https://api.github.com/users/ZweiEuro/events{/privacy}",
			"html_url":"https://github.com/ZweiEuro",
			"site_admin":false,
			"id":18036573,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE4MDM2NTcz",
			"organizations_url":"https://api.github.com/users/ZweiEuro/orgs"
		},
		"node_id":"I_kwDOAAiDnM5VgH9l"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-10-26T09:39:06Z",
		"title":"Multiple handlers for one event",
		"body":"### Discussed in https://github.com/socketio/socket.io/discussions/4504\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **AnvarAka1** October 26, 2022</sup>\r\nHello.\r\nI have used socket.io and it worked fine on the client side, until I stuck with one \"bug\", I guess. \r\nFollowing example is very simplified, but the idea is the same.\r\n\r\nIn one component I use:\r\n\r\n```\r\nsocket.on('some_event', () => {\r\n  console.log('first event')\r\n})\r\n```\r\n\r\nIn another component I use:\r\n\r\n```\r\nsocket.on('some_event', () => {\r\n  console.log('second event')\r\n})\r\n```\r\n\r\nSo, I do not get any of that event, but there is also socket.any((event) => console.log(event)) and it gives me proper event name.\r\n\r\nInterestingly enough, there is also new connection established after event is registered, but with the same socketId.\r\nThat I know because of:\r\n```\r\nsocket.on('connect', () => {\r\n  console.log('connected')\r\n})\r\n```\r\nI do not know what is the problem here. Maybe, there is not way in socket.io to use multiple handlers for one event. I didn't find any examples on that topic.\r\n</div>",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4505/labels{/name}",
		"author_association":"NONE",
		"number":4505,
		"updated_at":"2022-11-03T17:09:31Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4505/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1423731808,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4505/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4505",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4505/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4505",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4505/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/AnvarAka1/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/AnvarAka1/repos",
			"following_url":"https://api.github.com/users/AnvarAka1/following{/other_user}",
			"starred_url":"https://api.github.com/users/AnvarAka1/starred{/owner}{/repo}",
			"login":"AnvarAka1",
			"followers_url":"https://api.github.com/users/AnvarAka1/followers",
			"type":"User",
			"url":"https://api.github.com/users/AnvarAka1",
			"subscriptions_url":"https://api.github.com/users/AnvarAka1/subscriptions",
			"received_events_url":"https://api.github.com/users/AnvarAka1/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/23404225?v=4",
			"events_url":"https://api.github.com/users/AnvarAka1/events{/privacy}",
			"html_url":"https://github.com/AnvarAka1",
			"site_admin":false,
			"id":23404225,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjIzNDA0MjI1",
			"organizations_url":"https://api.github.com/users/AnvarAka1/orgs"
		},
		"node_id":"I_kwDOAAiDnM5U3Gxg"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-10-18T06:36:11Z",
		"title":"Wont work on GraphQL Yoga",
		"body":"#### Description\r\n\r\n- Seems like this wont work on GraphQL Yoga, but upon setting it up there are no errors\r\n- Already tried putting the Socket.io config after server.start but no luck\r\n\r\n```js\r\nconst express = require('express');\r\nconst { GraphQLServer, PubSub } = require('graphql-yoga');\r\n...\r\nconst graphQLServer = new GraphQLServer({\r\n  typeDefs: TYPE_DEFS,\r\n  resolvers,\r\n  middlewares: [yupMiddleware()],\r\n  context: request => {\r\n    return {\r\n      ...request,\r\n      prisma,\r\n      pubsub,\r\n    }\r\n  },\r\n})\r\nserver.express.use('/uploads', express.static('uploads'))\r\n...\r\nconst io = socketio(graphQLServer)\r\nio.on('connection', async (socket) => {\r\n  console.log('a user connected');\r\n});\r\n```",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4498/labels{/name}",
		"author_association":"NONE",
		"number":4498,
		"updated_at":"2022-10-18T08:04:28Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4498/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1412651761,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4498/timeline",
		"comments":4,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4498",
		"labels":[
			{
				"default":true,
				"color":"d876e3",
				"name":"question",
				"description":"Further information is requested",
				"id":2111669362,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/question",
				"node_id":"MDU6TGFiZWwyMTExNjY5MzYy"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4498/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4498",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4498/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/allestaire/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/allestaire/repos",
			"following_url":"https://api.github.com/users/allestaire/following{/other_user}",
			"starred_url":"https://api.github.com/users/allestaire/starred{/owner}{/repo}",
			"login":"allestaire",
			"followers_url":"https://api.github.com/users/allestaire/followers",
			"type":"User",
			"url":"https://api.github.com/users/allestaire",
			"subscriptions_url":"https://api.github.com/users/allestaire/subscriptions",
			"received_events_url":"https://api.github.com/users/allestaire/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/68372409?v=4",
			"events_url":"https://api.github.com/users/allestaire/events{/privacy}",
			"html_url":"https://github.com/allestaire",
			"site_admin":false,
			"id":68372409,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjY4MzcyNDA5",
			"organizations_url":"https://api.github.com/users/allestaire/orgs"
		},
		"node_id":"I_kwDOAAiDnM5UM1rx"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-10-10T12:59:45Z",
		"title":"Enabling \"captureRejections\" doesnt work",
		"body":"**Describe the bug**\r\nAccording to https://socket.io/docs/v4/listening-to-events/#error-handling it is possible to capture errors thrown in events by enabling captureRejections but doesn't seem to work. Is this example up to date? If this is no longer possible, is there a way to \"capture\" all errors thrown inside events at one location?\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version: `4.5.1`\r\n\r\n*Server*\r\n\r\n```js\r\nimport { Server } from \"socket.io\";\r\nrequire(\"events\").captureRejections = true;\r\n\r\nconst io = new Server(3000, {});\r\n\r\nio.on(\"connection\", (socket) => {\r\n  console.log(`connect ${socket.id}`);\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(`disconnect ${socket.id}`);\r\n  });\r\n\r\n  socket[Symbol.for(\"nodejs.rejection\")] = (err) => {\r\n    console.log(\"error catched\", err);\r\n  };\r\n});\r\n```\r\n**Expected behavior**\r\nError should be catched by \"socket[Symbol.for(\"nodejs.rejection\")]\"\r\n\r\n**Additional context**\r\nI am trying to built a proper errorHandler and dont want to try/catch everywhere but just have a central errorHandler \"captureRejections\" seemed like a good solution but sadly the documentation isnt very clear on how to implement this.\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4491/labels{/name}",
		"author_association":"NONE",
		"number":4491,
		"updated_at":"2022-10-13T10:29:49Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4491/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1403139397,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4491/timeline",
		"state_reason":"reopened",
		"comments":9,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4491",
		"labels":[
			{
				"default":true,
				"color":"DDDDDD",
				"name":"documentation",
				"description":"Improvements or additions to documentation",
				"id":206558,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/documentation",
				"node_id":"MDU6TGFiZWwyMDY1NTg="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4491/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4491",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4491/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/pipje2001/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/pipje2001/repos",
			"following_url":"https://api.github.com/users/pipje2001/following{/other_user}",
			"starred_url":"https://api.github.com/users/pipje2001/starred{/owner}{/repo}",
			"login":"pipje2001",
			"followers_url":"https://api.github.com/users/pipje2001/followers",
			"type":"User",
			"url":"https://api.github.com/users/pipje2001",
			"subscriptions_url":"https://api.github.com/users/pipje2001/subscriptions",
			"received_events_url":"https://api.github.com/users/pipje2001/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/15194516?v=4",
			"events_url":"https://api.github.com/users/pipje2001/events{/privacy}",
			"html_url":"https://github.com/pipje2001",
			"site_admin":false,
			"id":15194516,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE1MTk0NTE2",
			"organizations_url":"https://api.github.com/users/pipje2001/orgs"
		},
		"node_id":"I_kwDOAAiDnM5TojVF"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-10-06T15:24:07Z",
		"title":"Ack emit is not propagated through onAnyOutgoing",
		"body":"**Describe the bug**\r\nAck emit is not propagated through onAnyOutgoing.\r\n\r\n**To Reproduce**\r\n\r\nSocket.IO server version: `latest`\r\n\r\n*Server*\r\n\r\n```js\r\nimport { Server } from \"socket.io\";\r\n\r\nconst io = new Server(3000, {});\r\n\r\nio.on(\"connection\", (socket) => {\r\n  console.log(`connect ${socket.id}`);\r\n\r\n  socket.use((event) => {\r\n    console.log(event) // not logger for \"test msg\"\r\n  })\r\n\r\n  socket.on('msg', (reply) => {\r\n     reply('test msg')\r\n  })\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(`disconnect ${socket.id}`);\r\n  });\r\n});\r\n```\r\n\r\nSocket.IO client version: `latest`\r\n\r\n*Client*\r\n\r\n```js\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"ws://localhost:3000/\", {});\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(`connect ${socket.id}`);\r\n});\r\n\r\nsocket.emit(\"msg\")\r\n\r\nsocket.on(\"disconnect\", () => {\r\n  console.log(\"disconnect\");\r\n});\r\n```\r\n\r\n**Expected behavior**\r\n`onAnyOutgoing` is called for ANY outgoing message\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4489/labels{/name}",
		"author_association":"NONE",
		"number":4489,
		"updated_at":"2022-11-01T10:00:08Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4489/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1399859525,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4489/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4489",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4489/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4489",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4489/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/alesmenzel/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/alesmenzel/repos",
			"following_url":"https://api.github.com/users/alesmenzel/following{/other_user}",
			"starred_url":"https://api.github.com/users/alesmenzel/starred{/owner}{/repo}",
			"login":"alesmenzel",
			"followers_url":"https://api.github.com/users/alesmenzel/followers",
			"type":"User",
			"url":"https://api.github.com/users/alesmenzel",
			"subscriptions_url":"https://api.github.com/users/alesmenzel/subscriptions",
			"received_events_url":"https://api.github.com/users/alesmenzel/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/8976542?v=4",
			"events_url":"https://api.github.com/users/alesmenzel/events{/privacy}",
			"html_url":"https://github.com/alesmenzel",
			"site_admin":false,
			"id":8976542,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjg5NzY1NDI=",
			"organizations_url":"https://api.github.com/users/alesmenzel/orgs"
		},
		"node_id":"I_kwDOAAiDnM5TcClF"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-10-01T05:59:52Z",
		"title":"fetchSockets with redis errors with circular structure",
		"body":"**Describe the bug**\r\nI have an express server running behind a nginx reverse proxy with pm2 and redis. My client connects via websocket transport. When I open 2 browser connections, each connection will be handled by different pm2 processes. Upon connection, server side will perform a fetchSockets and display the socket.id. Then ```socket.data.socket = socket;``` is assigned for said socket. Everything works for the first connection but on the second connection, the process crashes. The crashing is simply cos for repro purposes, I did not add error handling. The error message is:\r\n```\r\nYou have triggered an unhandledRejection, you may have forgotten to catch a Promise rejection:\r\n// 1st browser connection here\r\n0|app  | QKlnOavk82-Xsld5AAAB connected\r\n0|app  | 1 socket\r\n// 2nd browser connection here\r\n0|app  | TypeError: Converting circular structure to JSON\r\n0|app  |     --> starting at object with constructor 'Namespace'\r\n0|app  |     |     property 'server' -> object with constructor 'Server'\r\n0|app  |     --- property 'sockets' closes the circle\r\n0|app  |     at JSON.stringify (<anonymous>)\r\n0|app  |     at RedisAdapter.onrequest (/redacted/node_modules/@socket.io/redis-adapter/dist/index.js:254:33)\r\n0|app  |     at runMicrotasks (<anonymous>)\r\n0|app  |     at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\n1|app  | You have triggered an unhandledRejection, you may have forgotten to catch a Promise rejection:\r\n1|app  | Error: timeout reached while waiting for fetchSockets response\r\n1|app  |     at Timeout._onTimeout (/redacted/node_modules/@socket.io/redis-adapter/dist/index.js:712:28)\r\n1|app  |     at listOnTimeout (node:internal/timers:559:17)\r\n1|app  |     at processTimers (node:internal/timers:502:7)\r\n```\r\n\r\n**To Reproduce**\r\nSocket.IO server version: `4.5.1`\r\n\r\n*Server*\r\n\r\n```js\r\nio.sockets.on('connection',async (socket) => {\r\n    let sockets = await io.fetchSockets();\r\n    console.log(socket.id+ \" connected\");\r\n    console.log(sockets.length+ \" socket\");\r\n    socket.data.socket = socket;\r\n})\r\n```\r\n\r\nSocket.IO client version: grabbed from /socket.io/socket.io.js via\r\n```<script> type=\"text/javascript\" src=\"/socket.io/socket.io.js\"></script>```\r\n\r\n*Client*\r\n\r\n```js\r\nthis.socket = io({\r\n    transports: [\"websocket\"]\r\n});\r\n```\r\n\r\n**Expected behavior**\r\nIf I comment out ```socket.data.socket = socket;```, everything works fine.\r\n```\r\n0|app  | -5NJZYVjuW4QdcpiAAAB connected\r\n0|app  | 1 socket\r\n1|app  | _q0CbG6mx6xmGQj1AAAB connected\r\n1|app  | 2 socket\r\n```\r\n\r\n**Platform:**\r\n - Device: Chrome and firefox browsers\r\n - OS: Amazon Linux\r\n\r\n**Additional context**\r\nI am passing the socket into data object for use in other parts of the code where the socket is used for comms downstream.\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4484/labels{/name}",
		"author_association":"NONE",
		"number":4484,
		"updated_at":"2022-10-20T10:06:56Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4484/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1393255590,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4484/timeline",
		"comments":3,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4484",
		"labels":[
			{
				"default":true,
				"color":"d876e3",
				"name":"question",
				"description":"Further information is requested",
				"id":2111669362,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/question",
				"node_id":"MDU6TGFiZWwyMTExNjY5MzYy"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4484/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4484",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4484/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/lockphase/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/lockphase/repos",
			"following_url":"https://api.github.com/users/lockphase/following{/other_user}",
			"starred_url":"https://api.github.com/users/lockphase/starred{/owner}{/repo}",
			"login":"lockphase",
			"followers_url":"https://api.github.com/users/lockphase/followers",
			"type":"User",
			"url":"https://api.github.com/users/lockphase",
			"subscriptions_url":"https://api.github.com/users/lockphase/subscriptions",
			"received_events_url":"https://api.github.com/users/lockphase/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/45689818?v=4",
			"events_url":"https://api.github.com/users/lockphase/events{/privacy}",
			"html_url":"https://github.com/lockphase",
			"site_admin":false,
			"id":45689818,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ1Njg5ODE4",
			"organizations_url":"https://api.github.com/users/lockphase/orgs"
		},
		"node_id":"I_kwDOAAiDnM5TC2Sm"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-09-29T18:17:44Z",
		"title":"Ability to change logging function",
		"body":"**Is your feature request related to a problem? Please describe.**\r\nOur app uses winston to send logs to different targets, e.g. log files. However, the Logs of socket.io are sent directly to the console via `debug`, and therefore missing from our log files.\r\n\r\n**Describe the solution you'd like**\r\nI'd like to be able to somewhere specify a function that should be called when a log is emitted, overriding the internal \"console.log\" call with my own logger.\r\n\r\n**Describe alternatives you've considered**\r\nWhile it seems that `debug` can specify a global logger override (e.g. `import { debug } from \"debug\"; debug.log = (...args: any[]) => { console.log(\"x\", args); };`), it appears that only applies to the current package. For example:\r\n- If I set it in my main app, all output from debug *from my main app* gets routed through the function above, while all socket.io logs are still using just console.log.\r\n- If I add `debug_1.log = (...args) => { console.log(\"message from engine.io\", args); };` by hand in node_modules/engine.io/build/server.js after `const debug_1 = require(\"debug\");`, all calls from engine.io use that log function, but socket.io:client messages are still using console.log.\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4482/labels{/name}",
		"author_association":"NONE",
		"number":4482,
		"updated_at":"2022-11-04T00:15:05Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4482/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1391299480,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4482/timeline",
		"comments":3,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4482",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4482/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4482",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4482/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/TobiasWehrum/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/TobiasWehrum/repos",
			"following_url":"https://api.github.com/users/TobiasWehrum/following{/other_user}",
			"starred_url":"https://api.github.com/users/TobiasWehrum/starred{/owner}{/repo}",
			"login":"TobiasWehrum",
			"followers_url":"https://api.github.com/users/TobiasWehrum/followers",
			"type":"User",
			"url":"https://api.github.com/users/TobiasWehrum",
			"subscriptions_url":"https://api.github.com/users/TobiasWehrum/subscriptions",
			"received_events_url":"https://api.github.com/users/TobiasWehrum/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/1674310?v=4",
			"events_url":"https://api.github.com/users/TobiasWehrum/events{/privacy}",
			"html_url":"https://github.com/TobiasWehrum",
			"site_admin":false,
			"id":1674310,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE2NzQzMTA=",
			"organizations_url":"https://api.github.com/users/TobiasWehrum/orgs"
		},
		"node_id":"I_kwDOAAiDnM5S7YuY"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-09-02T07:15:15Z",
		"title":"When will Socketio support C clients?",
		"body":"When will Socketio support C clients?",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4465/labels{/name}",
		"author_association":"NONE",
		"number":4465,
		"updated_at":"2022-09-13T06:49:22Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4465/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1359799532,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4465/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4465",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4465/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4465",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4465/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/xujingzhou/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/xujingzhou/repos",
			"following_url":"https://api.github.com/users/xujingzhou/following{/other_user}",
			"starred_url":"https://api.github.com/users/xujingzhou/starred{/owner}{/repo}",
			"login":"xujingzhou",
			"followers_url":"https://api.github.com/users/xujingzhou/followers",
			"type":"User",
			"url":"https://api.github.com/users/xujingzhou",
			"subscriptions_url":"https://api.github.com/users/xujingzhou/subscriptions",
			"received_events_url":"https://api.github.com/users/xujingzhou/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/7720569?v=4",
			"events_url":"https://api.github.com/users/xujingzhou/events{/privacy}",
			"html_url":"https://github.com/xujingzhou",
			"site_admin":false,
			"id":7720569,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjc3MjA1Njk=",
			"organizations_url":"https://api.github.com/users/xujingzhou/orgs"
		},
		"node_id":"I_kwDOAAiDnM5RDOTs"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-08-25T10:15:26Z",
		"title":"last message processed after the disconnect callback",
		"body":"**Describe the bug**\r\nSometimes I noticed that the last message I sent right before terminating my app is processed by my event listener `socket.on(\"event\", () => {})` after the disconnect callback has been called `socket.on(\"disconnect\", () => {})`.\r\nThis does not always happen: in my case I was able to reproduce it on my mac M1 but not on my raspberry pi.\r\n\r\nThis is a weird issue and I don't know how to reproduce it. But I am wondering if this is a know issue or if others faced the same behavior.\r\n\r\n**Expected behavior**\r\nI would expect the disconnect callback to be always call after the last message.\r\n\r\n**Versions:**\r\n - \"socket.io-client\": \"^4.4.1\"\r\n - \"socket.io\": \"^4.4.1\"\r\n \r\n**Platform:**\r\n - Device: Macbook air M1\r\n - OS: Macos\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4456/labels{/name}",
		"author_association":"NONE",
		"number":4456,
		"updated_at":"2022-08-25T14:09:51Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4456/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1350665896,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4456/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4456",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4456/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4456",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4456/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/francois-spectre/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/francois-spectre/repos",
			"following_url":"https://api.github.com/users/francois-spectre/following{/other_user}",
			"starred_url":"https://api.github.com/users/francois-spectre/starred{/owner}{/repo}",
			"login":"francois-spectre",
			"followers_url":"https://api.github.com/users/francois-spectre/followers",
			"type":"User",
			"url":"https://api.github.com/users/francois-spectre",
			"subscriptions_url":"https://api.github.com/users/francois-spectre/subscriptions",
			"received_events_url":"https://api.github.com/users/francois-spectre/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/86770707?v=4",
			"events_url":"https://api.github.com/users/francois-spectre/events{/privacy}",
			"html_url":"https://github.com/francois-spectre",
			"site_admin":false,
			"id":86770707,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjg2NzcwNzA3",
			"organizations_url":"https://api.github.com/users/francois-spectre/orgs"
		},
		"node_id":"I_kwDOAAiDnM5QgYao"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-08-14T01:25:40Z",
		"title":"memory leak",
		"body":"socket.io version:^4.5.1\r\n\r\nmemory keep increasing and no reduce, it seems that every connection will never be released，unconnected socket will stay in memory will never be released\r\n\r\nthis is my main socket.io code:\r\n[chat.js.zip](https://github.com/socketio/socket.io/files/9332503/chat.js.zip)\r\n\r\nthis is dump file socket.io server at start:\r\n[1660347155092.heapsnapshot.zip](https://github.com/socketio/socket.io/files/9332499/1660347155092.heapsnapshot.zip)\r\n\r\nthis is dump file socket.io server after about 12 hours:\r\n[1660434926431.heapsnapshot.zip](https://github.com/socketio/socket.io/files/9332500/1660434926431.heapsnapshot.zip)\r\n\r\nnodejs log\r\n<img width=\"1218\" alt=\"截屏2022-08-15 14 18 34\" src=\"https://user-images.githubusercontent.com/19730473/184586081-253596c6-0607-46ea-b60d-53f2cc8110fd.png\">\r\n![屏幕截图 2022-09-12 074103](https://user-images.githubusercontent.com/19730473/189553871-5da8a1aa-b19a-423e-9581-3b4a699470f9.png)\r\n\r\n\r\nnodejs exists a lot of unrecyler connection，actually socket server has at most 50 connections at one time,but memory show 1000+connections.\r\n<img width=\"860\" alt=\"截屏2022-08-22 15 53 23\" src=\"https://user-images.githubusercontent.com/19730473/185868889-564fdc16-c218-46db-8042-6e56f8998542.png\">\r\n\r\n<img width=\"954\" alt=\"截屏2022-08-17 20 10 06\" src=\"https://user-images.githubusercontent.com/19730473/185115287-6d10ad3d-82ed-4567-bc7a-c31897c52ee2.png\">\r\n\r\n\r\nthis is memory record at start:\r\n{\r\n  gc_ts: 1660435083534346,\r\n  gcScavengeCount: 6,\r\n  gcScavengeTime: 35094684,\r\n  gcMarkSweepCompactCount: 1,\r\n  gcMarkSweepCompactTime: 11370196,\r\n  gcIncrementalMarkingCount: 2,\r\n  gcIncrementalMarkingTime: 779792,\r\n  gcProcessWeakCallbacksCount: 1,\r\n  gcProcessWeakCallbacksTime: 229,\r\n  total_heap_size: 109916160,\r\n  total_heap_size_executable: 2359296,\r\n  total_physical_size: 109668288,\r\n  total_available_size: 2089975504,\r\n  used_heap_size: 82783856,\r\n  heap_size_limit: 2197815296,\r\n  malloced_memory: 1065032,\r\n  peak_malloced_memory: 3763256,\r\n  gc_time: 11370196\r\n}\r\n\r\nthis is memory record after about 12 hours:\r\n{\r\n  gc_ts: 1660434978708896,\r\n  gcScavengeCount: 8330,\r\n  gcScavengeTime: 6094003772,\r\n  gcMarkSweepCompactCount: 68,\r\n  gcMarkSweepCompactTime: 1072605909,\r\n  gcIncrementalMarkingCount: 132,\r\n  gcIncrementalMarkingTime: 61912948,\r\n  gcProcessWeakCallbacksCount: 2,\r\n  gcProcessWeakCallbacksTime: 4448,\r\n  total_heap_size: 114634752,\r\n  total_heap_size_executable: 5767168,\r\n  total_physical_size: 113205152,\r\n  total_available_size: 2085620912,\r\n  used_heap_size: 109306480,\r\n  heap_size_limit: 2197815296,\r\n  malloced_memory: 4210760,\r\n  peak_malloced_memory: 4870952,\r\n  gc_time: 36112984\r\n}\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4451/labels{/name}",
		"author_association":"NONE",
		"number":4451,
		"updated_at":"2022-12-09T07:17:34Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4451/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1338103842,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4451/timeline",
		"comments":9,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4451",
		"labels":[
			{
				"default":false,
				"color":"5a00ff",
				"name":"unable to reproduce",
				"description":"We were unable to reproduce the issue",
				"id":125457,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/unable%20to%20reproduce",
				"node_id":"MDU6TGFiZWwxMjU0NTc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4451/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4451",
		"reactions":{
			"confused":1,
			"-1":0,
			"total_count":2,
			"+1":1,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4451/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/leviluo/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/leviluo/repos",
			"following_url":"https://api.github.com/users/leviluo/following{/other_user}",
			"starred_url":"https://api.github.com/users/leviluo/starred{/owner}{/repo}",
			"login":"leviluo",
			"followers_url":"https://api.github.com/users/leviluo/followers",
			"type":"User",
			"url":"https://api.github.com/users/leviluo",
			"subscriptions_url":"https://api.github.com/users/leviluo/subscriptions",
			"received_events_url":"https://api.github.com/users/leviluo/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/19730473?v=4",
			"events_url":"https://api.github.com/users/leviluo/events{/privacy}",
			"html_url":"https://github.com/leviluo",
			"site_admin":false,
			"id":19730473,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE5NzMwNDcz",
			"organizations_url":"https://api.github.com/users/leviluo/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Pwdgi"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-08-13T14:28:02Z",
		"title":"Custom developed clients intervene in the Socket.IO service, resulting in service crash",
		"body":"I'm developing a socket The IO client uses an incorrect URL when connecting to the server, but the server crashes。\r\n\r\nThe part of soket.io URL is：http://hostname/socket.io/?t=9jtKfUz&EIO=4&transport=null&sid=S3FvFdGxFLuUxrrNAAAC\r\n\r\nServer report:\r\nTypeError: transports_1.default[transportName] is not a constructor\r\n    at Server.createTransport (/root/r_d/node_socket.io.4/node_modules/engine.io/build/server.js:334:16)\r\n    at Server.onWebSocket (/root/r_d/node_socket.io.4/node_modules/engine.io/build/server.js:438:40)\r\n    at /root/r_d/node_socket.io.4/node_modules/engine.io/build/server.js:398:22\r\n    at WebSocketServer.completeUpgrade (/root/r_d/node_socket.io.4/node_modules/ws/lib/websocket-server.js:408:5)\r\n    at WebSocketServer.handleUpgrade (/root/r_d/node_socket.io.4/node_modules/ws/lib/websocket-server.js:316:10)\r\n    at /root/r_d/node_socket.io.4/node_modules/engine.io/build/server.js:397:21\r\n    at Server.verify (/root/r_d/node_socket.io.4/node_modules/engine.io/build/server.js:81:20)\r\n    at Server.handleUpgrade (/root/r_d/node_socket.io.4/node_modules/engine.io/build/server.js:383:14)\r\n    at Server.<anonymous> (/root/r_d/node_socket.io.4/node_modules/engine.io/build/server.js:495:26)\r\n    at Server.emit (node:events:520:28)",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4447/labels{/name}",
		"author_association":"NONE",
		"number":4447,
		"updated_at":"2022-09-01T20:36:20Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4447/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1337977647,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4447/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4447",
		"labels":[
			{
				"default":false,
				"color":"5a00ff",
				"name":"unable to reproduce",
				"description":"We were unable to reproduce the issue",
				"id":125457,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/unable%20to%20reproduce",
				"node_id":"MDU6TGFiZWwxMjU0NTc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4447/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4447",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4447/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/luhterluo/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/luhterluo/repos",
			"following_url":"https://api.github.com/users/luhterluo/following{/other_user}",
			"starred_url":"https://api.github.com/users/luhterluo/starred{/owner}{/repo}",
			"login":"luhterluo",
			"followers_url":"https://api.github.com/users/luhterluo/followers",
			"type":"User",
			"url":"https://api.github.com/users/luhterluo",
			"subscriptions_url":"https://api.github.com/users/luhterluo/subscriptions",
			"received_events_url":"https://api.github.com/users/luhterluo/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/26920114?v=4",
			"events_url":"https://api.github.com/users/luhterluo/events{/privacy}",
			"html_url":"https://github.com/luhterluo",
			"site_admin":false,
			"id":26920114,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI2OTIwMTE0",
			"organizations_url":"https://api.github.com/users/luhterluo/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Pv-sv"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-08-12T01:21:49Z",
		"title":"'Transport close' in production mode",
		"body":"**The bug**\r\nI am creating a tool using `NextJS` and I am getting a disconnect(`transport close`) at a random time, it reconnects right away, but it bothers some tasks\r\n\r\nI've tried various settings, like changing the pingInterval, pingTimeout. But no matter what I seem to do, the problem never goes away.\r\n\r\n**This problem doesn't happen in localhost**, it only happens when I send my server to Google Cloud, Railway.app or Digitalocean\r\n\r\n\r\nSocket.IO server version: `\"socket.io\": \"4.5.1\"`\r\n\r\n*Server*\r\n\r\n```js\r\nimport { Server } from \"socket.io\";\r\n\r\nconst io = new Server(3000, {});\r\n\r\nio.on(\"connection\", (socket) => {\r\n  console.log(`connect ${socket.id}`);\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(`disconnect ${socket.id}`);\r\n  });\r\n});\r\n```\r\n\r\nSocket.IO client version: `\"socket.io-client\": \"4.5.1\",`\r\n\r\n*Client*\r\n\r\n```js\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"ws://localhost:3000/\", {});\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(`connect ${socket.id}`);\r\n});\r\n\r\nsocket.on(\"disconnect\", () => {\r\n  console.log(\"disconnect\");\r\n});\r\n```\r\n\r\n - Windows - Chrome\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4446/labels{/name}",
		"author_association":"NONE",
		"number":4446,
		"updated_at":"2022-08-12T01:21:49Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4446/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1336647817,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4446/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4446",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4446/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4446",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4446/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/npodexp5/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/npodexp5/repos",
			"following_url":"https://api.github.com/users/npodexp5/following{/other_user}",
			"starred_url":"https://api.github.com/users/npodexp5/starred{/owner}{/repo}",
			"login":"npodexp5",
			"followers_url":"https://api.github.com/users/npodexp5/followers",
			"type":"User",
			"url":"https://api.github.com/users/npodexp5",
			"subscriptions_url":"https://api.github.com/users/npodexp5/subscriptions",
			"received_events_url":"https://api.github.com/users/npodexp5/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/48797079?v=4",
			"events_url":"https://api.github.com/users/npodexp5/events{/privacy}",
			"html_url":"https://github.com/npodexp5",
			"site_admin":false,
			"id":48797079,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ4Nzk3MDc5",
			"organizations_url":"https://api.github.com/users/npodexp5/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Pq6CJ"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-08-07T16:17:22Z",
		"title":"I have seen implementation of custom parser, but there is no clear implementation of it in vanilla javascript",
		"body":"Hey, \r\n\r\nI have visited https://socket.io/docs/v4/custom-parser/#implementing-your-own-parser \r\n\r\nI use the same default parser to just add some extension functionality to it and used the following way on the client side\r\n\r\n\r\n```js\r\nclass Encoder {\r\n  /**\r\n   * Encode a packet into a list of strings/buffers\r\n   */\r\n  encode(packet) {\r\n    return [JSON.stringify(packet)];\r\n  }\r\n}\r\n\r\nclass Decoder {\r\n  add(chunk) {\r\n    const packet = JSON.parse(chunk);\r\n    if (this.isPacketValid(packet)) {\r\n      this.emit(\"decoded\", packet);\r\n    } else {\r\n      throw new Error(\"invalid format\");\r\n    }\r\n  }\r\n  isPacketValid({ type, data, nsp, id }) {\r\n    const isNamespaceValid = typeof nsp === \"string\";\r\n    const isAckIdValid = id === undefined || Number.isInteger(id);\r\n    if (!isNamespaceValid || !isAckIdValid) {\r\n      return false;\r\n    }\r\n    switch (type) {\r\n      case 0: // CONNECT\r\n        return data === undefined || typeof data === \"object\";\r\n      case 1: // DISCONNECT\r\n        return data === undefined;\r\n      case 2: // EVENT\r\n        return Array.isArray(data) && data.length > 0;\r\n      case 3: // ACK\r\n        return Array.isArray(data);\r\n      case 4: // CONNECT_ERROR\r\n        return typeof data === \"object\";\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n  destroy() {}\r\n}\r\n\r\nconst socket = io(\"http://localhost:8500\", {\r\n  auth: {\r\n    token: \"token goes here\",\r\n  },\r\n  parser: { Encoder, Decoder },\r\n});\r\n```\r\n\r\n\r\nit is showing the below error in the console.\r\n\r\n![image](https://user-images.githubusercontent.com/47274553/183300516-d7cd8991-e6ac-4b87-a11a-d6f8331a43dd.png)\r\n\r\n\r\nAm I doing anything wrong, or is my implementation wrong? please guide me through it.\r\n\r\nRegards, Shiva\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4441/labels{/name}",
		"author_association":"NONE",
		"number":4441,
		"updated_at":"2022-10-14T09:07:17Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4441/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1331059120,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4441/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4441",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4441/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4441",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4441/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/shiva-sandupatla/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/shiva-sandupatla/repos",
			"following_url":"https://api.github.com/users/shiva-sandupatla/following{/other_user}",
			"starred_url":"https://api.github.com/users/shiva-sandupatla/starred{/owner}{/repo}",
			"login":"shiva-sandupatla",
			"followers_url":"https://api.github.com/users/shiva-sandupatla/followers",
			"type":"User",
			"url":"https://api.github.com/users/shiva-sandupatla",
			"subscriptions_url":"https://api.github.com/users/shiva-sandupatla/subscriptions",
			"received_events_url":"https://api.github.com/users/shiva-sandupatla/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/47274553?v=4",
			"events_url":"https://api.github.com/users/shiva-sandupatla/events{/privacy}",
			"html_url":"https://github.com/shiva-sandupatla",
			"site_admin":false,
			"id":47274553,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ3Mjc0NTUz",
			"organizations_url":"https://api.github.com/users/shiva-sandupatla/orgs"
		},
		"node_id":"I_kwDOAAiDnM5PVlmw"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-08-02T22:15:41Z",
		"title":"Error on node 16 worker with eiows and separate error with eiows on main thread.",
		"body":"**Describe the bug**\r\nI am getting the following error when I try to use eiows with a node 16 worker:\r\n\r\n```\r\nFATAL ERROR: HandleScope::HandleScope Entering the V8 API without proper locking in place\r\n 1: 0xb0a860 node::Abort() [node]\r\n 2: 0xa1c193 node::FatalError(char const*, char const*) [node]\r\n 3: 0xcf97aa v8::Utils::ReportApiFailure(char const*, char const*) [node]\r\n 4: 0xcfad0c v8::HandleScope::HandleScope(v8::Isolate*) [node]\r\n 5: 0x7fee205a166e  [.../node_modules/eiows/dist/eiows_linux_93.node]\r\n 6: 0x156d839  [node]\r\n 7: 0x1565f48 uv_run [node]\r\n 8: 0xa43dd5 node::SpinEventLoop(node::Environment*) [node]\r\n 9: 0xb4ca06 node::NodeMainInstance::Run(node::EnvSerializeInfo const*) [node]\r\n10: 0xace5a2 node::Start(int, char**) [node]\r\n11: 0x7fee22e19083 __libc_start_main [/lib/x86_64-linux-gnu/libc.so.6]\r\n12: 0xa4067c  [node]\r\nAborted (core dumped)\r\n```\r\n\r\nIf I try to require eiows in the main thread I get:\r\n\r\nompilation of µWebSockets has failed and there is no correct pre-compiled binary available for your system or an unsupported node version is used. Please install a supported C++17 compiler or update node and reinstall the module 'eiows'.\r\n    at.../node_modules/eiows/dist/eiows.js:27:15\r\n    at Object.<anonymous> (.../eiows/dist/eiows.js:30:3)\r\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\r\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\r\n    at Module.load (node:internal/modules/cjs/loader:981:32)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\r\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\r\n    at require (node:internal/modules/cjs/helpers:102:18)\r\n    at run (/home/sam/Documents/fusion-socketcluster/worker.js:47:22)\r\n    at Object.<anonymous> (/...r/worker.js:290:1)\r\nEmitted 'error' event on Worker instance at:\r\n    at Worker.[kOnErrorMessage] (node:internal/worker:289:10)\r\n    at Worker.[kOnMessage] (node:internal/worker:300:37)\r\n    at MessagePort.<anonymous> (node:internal/worker:201:57)\r\n    at MessagePort.[nodejs.internal.kHybridDispatch] (node:internal/event_target:643:20)\r\n    at MessagePort.exports.emitMessage (node:internal/per_context/messageport:23:28)\r\n    at Worker.[kOnExit] (node:internal/worker:267:5)\r\n    at Worker.<computed>.onexit (node:internal/worker:198:20)\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version: `4.5.1`\r\n\r\n*Server*\r\n\r\n```js\r\nconst http = require('http')\r\nconst express = require('express')\r\nconst SocketIO = require('socket.io')\r\n\r\nconst app = express()\r\nconst server = http.createServer(app)\r\n\r\n\r\nconst socket_io = SocketIO(server, {\r\n  wsEngine         : require('eiows').Server,\r\n  perMessageDeflate: {\r\n\t  threshold: 32768\r\n  }\r\n})\r\n```\r\n\r\n**Expected behavior**\r\nSocket IO to work with eiows\r\n\r\n**Platform:**\r\n - Device: Lenovo P50 Thinkpad\r\n - OS:  Ubuntu 20.04.4 LTS\r\n - Node 16.16.0\r\neiows: 4.1.2\r\nsocket.io 4.5.1\r\ng++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\r\n\r\n**Additional context**\r\nAlso opened a ticket at https://github.com/mmdevries/eiows/issues/11\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4437/labels{/name}",
		"author_association":"NONE",
		"number":4437,
		"updated_at":"2022-08-02T22:15:41Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4437/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1326454430,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4437/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4437",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4437/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4437",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4437/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Sam-Gram/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Sam-Gram/repos",
			"following_url":"https://api.github.com/users/Sam-Gram/following{/other_user}",
			"starred_url":"https://api.github.com/users/Sam-Gram/starred{/owner}{/repo}",
			"login":"Sam-Gram",
			"followers_url":"https://api.github.com/users/Sam-Gram/followers",
			"type":"User",
			"url":"https://api.github.com/users/Sam-Gram",
			"subscriptions_url":"https://api.github.com/users/Sam-Gram/subscriptions",
			"received_events_url":"https://api.github.com/users/Sam-Gram/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/6521724?v=4",
			"events_url":"https://api.github.com/users/Sam-Gram/events{/privacy}",
			"html_url":"https://github.com/Sam-Gram",
			"site_admin":false,
			"id":6521724,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjY1MjE3MjQ=",
			"organizations_url":"https://api.github.com/users/Sam-Gram/orgs"
		},
		"node_id":"I_kwDOAAiDnM5PEBae"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-07-29T14:47:37Z",
		"title":"Socket connection is dropped on link download",
		"body":"**Describe the bug**\r\nSocket connection drops after download is initiated via hidden href link download in chrome.  Chome : Version 103.0.5060.134 (Official Build) (64-bit), but it was reproducable with any recent version\r\n\r\n**To Reproduce**\r\n\r\nI've added code in main.js (see below) that will log to console all socket events to console and extra logic that checks each sent message text === \"download\" resulting a hidden link to be added and clicked which initiates download of index.html with browser default file open dialog.\r\n\r\n```js\r\n// Sends a chat message\r\n  const sendMessage = () => {\r\n    let message = $inputMessage.val();\r\n    // Prevent markup from being injected into the message\r\n    message = cleanInput(message);\r\n    // if there is a non-empty message and a socket connection\r\n    if (message && connected) {\r\n      $inputMessage.val('');\r\n      addChatMessage({ username, message });\r\n      // tell server to execute 'new message' and send along one parameter\r\n      socket.emit('new message', message);\r\n\r\n      if(message === 'download'){\r\n        const a = document.createElement('a');\r\n        a.href = \"/index.html\";\r\n        a.download = `arm64.pkg`;\r\n        //a.target = '_blank';\r\n        a.click();\r\n        a.remove();\r\n      }\r\n    }\r\n  }\r\n```\r\n0. Use Chat sample from this socketio repository  [https://github.com/socketio/socket.io/tree/main/examples/chat](repo)\r\n1. change version of socket.io to 4.5.1 and npm install\r\n2. launch server (npm start)\r\n3. launch 2 chat windows in chrome, open dev tools and observe socket events are working (e.g. when typeing you will see events are comming to connected clients)\r\n4. initiate download from one of clients\r\n5. observe that client that initiated download has dropped ws connection and doesn't receive any socket notification before it reconnects\r\n\r\nWORKAROUNDS:\r\n1. use a.target = '_blank'; - but this creates negative UX by opening dialog in another window\r\n2. use empty target iframe for downloads  <iframe src=\"about:blank\" name=\"iframe_for_file_downloads\"></iframe>\r\n\r\nSocket.IO server/client version: `4.5.1`\r\n\r\nClient:\r\nfull main.js code\r\n```js\r\n$(function() {\r\n  const FADE_TIME = 150; // ms\r\n  const TYPING_TIMER_LENGTH = 400; // ms\r\n  const COLORS = [\r\n    '#e21400', '#91580f', '#f8a700', '#f78b00',\r\n    '#58dc00', '#287b00', '#a8f07a', '#4ae8c4',\r\n    '#3b88eb', '#3824aa', '#a700ff', '#d300e7'\r\n  ];\r\n\r\n  // Initialize variables\r\n  const $window = $(window);\r\n  const $usernameInput = $('.usernameInput'); // Input for username\r\n  const $messages = $('.messages');           // Messages area\r\n  const $inputMessage = $('.inputMessage');   // Input message input box\r\n\r\n  const $loginPage = $('.login.page');        // The login page\r\n  const $chatPage = $('.chat.page');          // The chatroom page\r\n\r\n  const socket = io();\r\n  socket.onAny((eventName, ...args) => {\r\n    console.log(eventName, args);\r\n });\r\n  // Prompt for setting a username\r\n  let username;\r\n  let connected = false;\r\n  let typing = false;\r\n  let lastTypingTime;\r\n  let $currentInput = $usernameInput.focus();\r\n\r\n  const addParticipantsMessage = (data) => {\r\n    let message = '';\r\n    if (data.numUsers === 1) {\r\n      message += `there's 1 participant`;\r\n    } else {\r\n      message += `there are ${data.numUsers} participants`;\r\n    }\r\n    log(message);\r\n  }\r\n\r\n  // Sets the client's username\r\n  const setUsername = () => {\r\n    username = cleanInput($usernameInput.val().trim());\r\n\r\n    // If the username is valid\r\n    if (username) {\r\n      $loginPage.fadeOut();\r\n      $chatPage.show();\r\n      $loginPage.off('click');\r\n      $currentInput = $inputMessage.focus();\r\n\r\n      // Tell the server your username\r\n      socket.emit('add user', username);\r\n    }\r\n  }\r\n\r\n  // Sends a chat message\r\n  const sendMessage = () => {\r\n    let message = $inputMessage.val();\r\n    // Prevent markup from being injected into the message\r\n    message = cleanInput(message);\r\n    // if there is a non-empty message and a socket connection\r\n    if (message && connected) {\r\n      $inputMessage.val('');\r\n      addChatMessage({ username, message });\r\n      // tell server to execute 'new message' and send along one parameter\r\n      socket.emit('new message', message);\r\n\r\n      if(message === 'download'){\r\n        const a = document.createElement('a');\r\n        a.href = \"/index.html\";\r\n        a.download = `index.html`;\r\n        //a.target = '_blank';\r\n        a.click();\r\n        a.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Log a message\r\n  const log = (message, options) => {\r\n    const $el = $('<li>').addClass('log').text(message);\r\n    addMessageElement($el, options);\r\n  }\r\n\r\n  // Adds the visual chat message to the message list\r\n  const addChatMessage = (data, options = {}) => {\r\n    // Don't fade the message in if there is an 'X was typing'\r\n    const $typingMessages = getTypingMessages(data);\r\n    if ($typingMessages.length !== 0) {\r\n      options.fade = false;\r\n      $typingMessages.remove();\r\n    }\r\n\r\n    const $usernameDiv = $('<span class=\"username\"/>')\r\n      .text(data.username)\r\n      .css('color', getUsernameColor(data.username));\r\n    const $messageBodyDiv = $('<span class=\"messageBody\">')\r\n      .text(data.message);\r\n\r\n    const typingClass = data.typing ? 'typing' : '';\r\n    const $messageDiv = $('<li class=\"message\"/>')\r\n      .data('username', data.username)\r\n      .addClass(typingClass)\r\n      .append($usernameDiv, $messageBodyDiv);\r\n\r\n    addMessageElement($messageDiv, options);\r\n  }\r\n\r\n  // Adds the visual chat typing message\r\n  const addChatTyping = (data) => {\r\n    data.typing = true;\r\n    data.message = 'is typing';\r\n    addChatMessage(data);\r\n  }\r\n\r\n  // Removes the visual chat typing message\r\n  const removeChatTyping = (data) => {\r\n    getTypingMessages(data).fadeOut(function () {\r\n      $(this).remove();\r\n    });\r\n  }\r\n\r\n  // Adds a message element to the messages and scrolls to the bottom\r\n  // el - The element to add as a message\r\n  // options.fade - If the element should fade-in (default = true)\r\n  // options.prepend - If the element should prepend\r\n  //   all other messages (default = false)\r\n  const addMessageElement = (el, options) => {\r\n    const $el = $(el);\r\n    // Setup default options\r\n    if (!options) {\r\n      options = {};\r\n    }\r\n    if (typeof options.fade === 'undefined') {\r\n      options.fade = true;\r\n    }\r\n    if (typeof options.prepend === 'undefined') {\r\n      options.prepend = false;\r\n    }\r\n\r\n    // Apply options\r\n    if (options.fade) {\r\n      $el.hide().fadeIn(FADE_TIME);\r\n    }\r\n    if (options.prepend) {\r\n      $messages.prepend($el);\r\n    } else {\r\n      $messages.append($el);\r\n    }\r\n\r\n    $messages[0].scrollTop = $messages[0].scrollHeight;\r\n  }\r\n\r\n  // Prevents input from having injected markup\r\n  const cleanInput = (input) => {\r\n    return $('<div/>').text(input).html();\r\n  }\r\n\r\n  // Updates the typing event\r\n  const updateTyping = () => {\r\n    if (connected) {\r\n      if (!typing) {\r\n        typing = true;\r\n        socket.emit('typing');\r\n      }\r\n      lastTypingTime = (new Date()).getTime();\r\n\r\n      setTimeout(() => {\r\n        const typingTimer = (new Date()).getTime();\r\n        const timeDiff = typingTimer - lastTypingTime;\r\n        if (timeDiff >= TYPING_TIMER_LENGTH && typing) {\r\n          socket.emit('stop typing');\r\n          typing = false;\r\n        }\r\n      }, TYPING_TIMER_LENGTH);\r\n    }\r\n  }\r\n\r\n  // Gets the 'X is typing' messages of a user\r\n  const getTypingMessages = (data) => {\r\n    return $('.typing.message').filter(function (i) {\r\n      return $(this).data('username') === data.username;\r\n    });\r\n  }\r\n\r\n  // Gets the color of a username through our hash function\r\n  const getUsernameColor = (username) => {\r\n    // Compute hash code\r\n    let hash = 7;\r\n    for (let i = 0; i < username.length; i++) {\r\n      hash = username.charCodeAt(i) + (hash << 5) - hash;\r\n    }\r\n    // Calculate color\r\n    const index = Math.abs(hash % COLORS.length);\r\n    return COLORS[index];\r\n  }\r\n\r\n  // Keyboard events\r\n\r\n  $window.keydown(event => {\r\n    // Auto-focus the current input when a key is typed\r\n    if (!(event.ctrlKey || event.metaKey || event.altKey)) {\r\n      $currentInput.focus();\r\n    }\r\n    // When the client hits ENTER on their keyboard\r\n    if (event.which === 13) {\r\n      if (username) {\r\n        sendMessage();\r\n        socket.emit('stop typing');\r\n        typing = false;\r\n      } else {\r\n        setUsername();\r\n      }\r\n    }\r\n  });\r\n\r\n  $inputMessage.on('input', () => {\r\n    updateTyping();\r\n  });\r\n\r\n  // Click events\r\n\r\n  // Focus input when clicking anywhere on login page\r\n  $loginPage.click(() => {\r\n    $currentInput.focus();\r\n  });\r\n\r\n  // Focus input when clicking on the message input's border\r\n  $inputMessage.click(() => {\r\n    $inputMessage.focus();\r\n  });\r\n\r\n  // Socket events\r\n\r\n  // Whenever the server emits 'login', log the login message\r\n  socket.on('login', (data) => {\r\n    connected = true;\r\n    // Display the welcome message\r\n    const message = 'Welcome to Socket.IO Chat – ';\r\n    log(message, {\r\n      prepend: true\r\n    });\r\n    addParticipantsMessage(data);\r\n  });\r\n\r\n  // Whenever the server emits 'new message', update the chat body\r\n  socket.on('new message', (data) => {\r\n    addChatMessage(data);\r\n  });\r\n\r\n  // Whenever the server emits 'user joined', log it in the chat body\r\n  socket.on('user joined', (data) => {\r\n    log(`${data.username} joined`);\r\n    addParticipantsMessage(data);\r\n  });\r\n\r\n  // Whenever the server emits 'user left', log it in the chat body\r\n  socket.on('user left', (data) => {\r\n    log(`${data.username} left`);\r\n    addParticipantsMessage(data);\r\n    removeChatTyping(data);\r\n  });\r\n\r\n  // Whenever the server emits 'typing', show the typing message\r\n  socket.on('typing', (data) => {\r\n    addChatTyping(data);\r\n  });\r\n\r\n  // Whenever the server emits 'stop typing', kill the typing message\r\n  socket.on('stop typing', (data) => {\r\n    removeChatTyping(data);\r\n  });\r\n\r\n  socket.on('disconnect', () => {\r\n    log('you have been disconnected');\r\n  });\r\n\r\n  socket.io.on('reconnect', () => {\r\n    log('you have been reconnected');\r\n    if (username) {\r\n      socket.emit('add user', username);\r\n    }\r\n  });\r\n\r\n  socket.io.on('reconnect_error', () => {\r\n    log('attempt to reconnect has failed');\r\n  });\r\n\r\n});\r\n\r\n\r\n```\r\n\r\n**Expected behavior**\r\nSocket connection is not dropped on download\r\n\r\n**Platform:**\r\n - Device: [e.g. Dell xps 13 9360]\r\n - OS: [e.g. windows 11]\r\n\r\n**Additional context**\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4436/labels{/name}",
		"author_association":"NONE",
		"number":4436,
		"updated_at":"2022-10-27T05:01:32Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4436/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1322344919,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4436/timeline",
		"comments":3,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4436",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4436/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4436",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4436/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/volodymyr-ilnytskyi-tfs/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/volodymyr-ilnytskyi-tfs/repos",
			"following_url":"https://api.github.com/users/volodymyr-ilnytskyi-tfs/following{/other_user}",
			"starred_url":"https://api.github.com/users/volodymyr-ilnytskyi-tfs/starred{/owner}{/repo}",
			"login":"volodymyr-ilnytskyi-tfs",
			"followers_url":"https://api.github.com/users/volodymyr-ilnytskyi-tfs/followers",
			"type":"User",
			"url":"https://api.github.com/users/volodymyr-ilnytskyi-tfs",
			"subscriptions_url":"https://api.github.com/users/volodymyr-ilnytskyi-tfs/subscriptions",
			"received_events_url":"https://api.github.com/users/volodymyr-ilnytskyi-tfs/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/82833980?v=4",
			"events_url":"https://api.github.com/users/volodymyr-ilnytskyi-tfs/events{/privacy}",
			"html_url":"https://github.com/volodymyr-ilnytskyi-tfs",
			"site_admin":false,
			"id":82833980,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjgyODMzOTgw",
			"organizations_url":"https://api.github.com/users/volodymyr-ilnytskyi-tfs/orgs"
		},
		"node_id":"I_kwDOAAiDnM5O0WHX"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-07-29T05:26:03Z",
		"title":"How to handle backpreassure?",
		"body":"There is a lot of comments related about memory leaks, so I want to know how socketio allows to developers manage backpreassure.\n\nI know using the volatile method allows to \"fire and forget\", but that not fix the problem when the socket is slow for receive the message.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4435/labels{/name}",
		"author_association":"NONE",
		"number":4435,
		"updated_at":"2022-07-30T00:00:25Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4435/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1321776690,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4435/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4435",
		"labels":[
			{
				"default":true,
				"color":"d876e3",
				"name":"question",
				"description":"Further information is requested",
				"id":2111669362,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/question",
				"node_id":"MDU6TGFiZWwyMTExNjY5MzYy"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4435/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4435",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4435/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/matiaslopezd/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/matiaslopezd/repos",
			"following_url":"https://api.github.com/users/matiaslopezd/following{/other_user}",
			"starred_url":"https://api.github.com/users/matiaslopezd/starred{/owner}{/repo}",
			"login":"matiaslopezd",
			"followers_url":"https://api.github.com/users/matiaslopezd/followers",
			"type":"User",
			"url":"https://api.github.com/users/matiaslopezd",
			"subscriptions_url":"https://api.github.com/users/matiaslopezd/subscriptions",
			"received_events_url":"https://api.github.com/users/matiaslopezd/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/23618492?v=4",
			"events_url":"https://api.github.com/users/matiaslopezd/events{/privacy}",
			"html_url":"https://github.com/matiaslopezd",
			"site_admin":false,
			"id":23618492,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjIzNjE4NDky",
			"organizations_url":"https://api.github.com/users/matiaslopezd/orgs"
		},
		"node_id":"I_kwDOAAiDnM5OyLYy"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-07-26T17:13:44Z",
		"title":"Session ID unknown",
		"body":"Hello i made a project with node.js socket.io and proxy with apache2. Everything is ok project working fine but sometimes my all connection sending a connection error which message is \"Session ID unknown\". I tried everything i changed my server from apache2 to nginx but it doesn't work also. The connections are sending that error message like every 1 h. How can i solve the issue i don't know. I'm working like 8 days about it. My projects working a lot slowly. Can someone help please? I had like 100-150 socket connection but when i get this error i'm getting like 100-150k error message and log file filling a lot.\r\n\r\nVersions\r\nApache2: Apache/2.4.54 (Ubuntu)\r\nSocket.io Server: 4.5.1\r\nSocket.io Client: 4.5.1\r\n\r\nError line\r\n\r\n```javascript\r\n    IO.instance.engine.on('connection_error', (err) => {\r\n      console.log('connection_error', err.message); // <---- this line\r\n    });\r\n```\r\n\r\nApache2 conf file\r\n\r\n\r\n```\r\n<VirtualHost _default_:443>\r\n        ServerName socket.myproject.com\r\n        SSLEngine On\r\n        SSLCertificateFile /etc/ssl/socket/primary.crt\r\n        SSLCertificateKeyFile /etc/ssl/socket/private.key\r\n        SSLCertificateChainFile /etc/ssl/socket/intermediate.crt\r\nLoadModule authn_file_module            modules/mod_authn_file.so\r\nLoadModule authn_core_module            modules/mod_authn_core.so\r\nLoadModule authz_host_module            modules/mod_authz_host.so\r\nLoadModule authz_groupfile_module       modules/mod_authz_groupfile.so\r\nLoadModule authz_user_module            modules/mod_authz_user.so\r\nLoadModule authz_core_module            modules/mod_authz_core.so\r\nLoadModule headers_module               modules/mod_headers.so\r\nLoadModule lbmethod_byrequests_module   modules/mod_lbmethod_byrequests.so\r\nLoadModule proxy_module                 modules/mod_proxy.so\r\nLoadModule proxy_balancer_module        modules/mod_proxy_balancer.so\r\nLoadModule proxy_http_module            modules/mod_proxy_http.so\r\nLoadModule proxy_wstunnel_module        modules/mod_proxy_wstunnel.so\r\nLoadModule rewrite_module               modules/mod_rewrite.so\r\nLoadModule slotmem_shm_module           modules/mod_slotmem_shm.so\r\n# User daemon\r\n# Group daemon\r\nHeader add Set-Cookie \"SERVERID=sticky.%{BALANCER_WORKER_ROUTE}e; path=/\" env=BALANCER_ROUTE_CHANGED\r\n<Proxy \"balancer://nodes_polling\">\r\n    BalancerMember \"http://localhost:1002\"    route=prod\r\n    ProxySet stickysession=SERVERID\r\n</Proxy>\r\n<Proxy \"balancer://nodes_ws\">\r\n    BalancerMember \"ws://localhost:1002\"    route=prod\r\n    ProxySet stickysession=SERVERID\r\n</Proxy>\r\nRewriteEngine On\r\nRewriteCond %{HTTP:Upgrade} =websocket [NC]\r\nRewriteRule /(.*) balancer://nodes_ws/$1 [P,L]\r\nRewriteCond %{HTTP:Upgrade} !=websocket [NC]\r\nRewriteRule /(.*) balancer://nodes_polling/$1 [P,L]\r\nProxyTimeout 3\r\n    </VirtualHost>\r\n```\r\n\r\nClient\r\n\r\n```\r\nthis.IO = io(AppConstants.socketBaseUrl, {\r\n  query: { token:\"blablabla....\" },\r\n  path: '/socket.io',\r\n  withCredentials: true,\r\n  transports: ['websocket', 'polling'],\r\n  secure: true,\r\n});\r\n```\r\nServer side code\r\n```\r\nconst socketServer = require('socket.io')(Server, {\r\n  transports: ['websocket', 'polling'],\r\n  cors: {\r\n    origin: '*',\r\n    credentials: true,\r\n    methods: ['GET', 'POST'],\r\n  },\r\n});\r\n```",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4433/labels{/name}",
		"author_association":"NONE",
		"number":4433,
		"updated_at":"2022-07-26T17:13:44Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4433/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1318537831,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4433/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4433",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4433/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4433",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4433/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/MuhammedAlmaz/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/MuhammedAlmaz/repos",
			"following_url":"https://api.github.com/users/MuhammedAlmaz/following{/other_user}",
			"starred_url":"https://api.github.com/users/MuhammedAlmaz/starred{/owner}{/repo}",
			"login":"MuhammedAlmaz",
			"followers_url":"https://api.github.com/users/MuhammedAlmaz/followers",
			"type":"User",
			"url":"https://api.github.com/users/MuhammedAlmaz",
			"subscriptions_url":"https://api.github.com/users/MuhammedAlmaz/subscriptions",
			"received_events_url":"https://api.github.com/users/MuhammedAlmaz/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/17336091?v=4",
			"events_url":"https://api.github.com/users/MuhammedAlmaz/events{/privacy}",
			"html_url":"https://github.com/MuhammedAlmaz",
			"site_admin":false,
			"id":17336091,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE3MzM2MDkx",
			"organizations_url":"https://api.github.com/users/MuhammedAlmaz/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Ol0pn"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-07-19T07:22:05Z",
		"title":"data coming from socket io is stopped after 10 minutes when we request call socket io at every 10-10 milisecond backend : node js frontend : angular js",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4428/labels{/name}",
		"author_association":"NONE",
		"number":4428,
		"updated_at":"2022-07-19T07:22:05Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4428/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1309093801,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4428/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4428",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4428/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4428",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4428/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/patsonkaushik/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/patsonkaushik/repos",
			"following_url":"https://api.github.com/users/patsonkaushik/following{/other_user}",
			"starred_url":"https://api.github.com/users/patsonkaushik/starred{/owner}{/repo}",
			"login":"patsonkaushik",
			"followers_url":"https://api.github.com/users/patsonkaushik/followers",
			"type":"User",
			"url":"https://api.github.com/users/patsonkaushik",
			"subscriptions_url":"https://api.github.com/users/patsonkaushik/subscriptions",
			"received_events_url":"https://api.github.com/users/patsonkaushik/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/77775964?v=4",
			"events_url":"https://api.github.com/users/patsonkaushik/events{/privacy}",
			"html_url":"https://github.com/patsonkaushik",
			"site_admin":false,
			"id":77775964,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjc3Nzc1OTY0",
			"organizations_url":"https://api.github.com/users/patsonkaushik/orgs"
		},
		"node_id":"I_kwDOAAiDnM5OBy-p"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-07-17T08:29:42Z",
		"title":"Cannot read properties of undefined (reading 'protocol')",
		"body":"After setting up the project and running with \"npm start\" in terminal, the error comes up and saying that protocol is not defined in socket.js. I tried to set up project in a new folder but same thing keeps popping up. \\node_modules\\socket.io\\dist\\socket.js:44\r\n        if (client.conn.protocol === 3) {\r\n                        ^\r\nTypeError: Cannot read properties of undefined (reading 'protocol')",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4426/labels{/name}",
		"author_association":"NONE",
		"number":4426,
		"updated_at":"2022-09-02T06:53:59Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4426/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1307030017,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4426/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4426",
		"labels":[
			{
				"default":false,
				"color":"5a00ff",
				"name":"unable to reproduce",
				"description":"We were unable to reproduce the issue",
				"id":125457,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/unable%20to%20reproduce",
				"node_id":"MDU6TGFiZWwxMjU0NTc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4426/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4426",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4426/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/excalibur-knob/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/excalibur-knob/repos",
			"following_url":"https://api.github.com/users/excalibur-knob/following{/other_user}",
			"starred_url":"https://api.github.com/users/excalibur-knob/starred{/owner}{/repo}",
			"login":"excalibur-knob",
			"followers_url":"https://api.github.com/users/excalibur-knob/followers",
			"type":"User",
			"url":"https://api.github.com/users/excalibur-knob",
			"subscriptions_url":"https://api.github.com/users/excalibur-knob/subscriptions",
			"received_events_url":"https://api.github.com/users/excalibur-knob/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/44671333?v=4",
			"events_url":"https://api.github.com/users/excalibur-knob/events{/privacy}",
			"html_url":"https://github.com/excalibur-knob",
			"site_admin":false,
			"id":44671333,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ0NjcxMzMz",
			"organizations_url":"https://api.github.com/users/excalibur-knob/orgs"
		},
		"node_id":"I_kwDOAAiDnM5N57IB"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-07-02T00:07:47Z",
		"title":"Emit to room not working when client is Safari 15.5 ",
		"body":"I have try with Chrome and Firefox is working fine that expected.\r\n\r\n**Describe the bug**\r\nI have a game with client is in react/typescript, server is in nodeJs/express/typescript\r\nWhen I try to emit on specific room with \r\n```ts\r\n        socket.to(message.roomId).emit(\"start_game\", { start: false, symbol: \"o\" });\r\n```\r\nThe client doesn't get the event. So the listener method isn't fired.\r\n\r\n```ts\r\n  public async onStartGame(socket: Socket, listiner: (options: IStartGame) => void) {\r\n    socket.on(\"start_game\", () => console.log(options)); \r\n// attempt to get { start: false, symbol: \"o\" } but is never fired\r\n  }\r\n```\r\n\r\nNotice that socket.emit is working fine.\r\n \r\n```ts\r\n        socket.emit(\"start_game\", { start: true, symbol: \"x\" });\r\n```\r\n\r\n**To Reproduce**\r\n\r\nTry to communicate with a server and a client using Safari 15.5\r\n\r\n*Server*\r\n \"socket.io\": \"^4.5.1\",\r\n\r\n*Client*\r\n\"socket.io-client\": \"^4.5.1\"\r\n\r\n**Platform:**\r\n- on macOS Monterey version 12.4\r\n- Macbook pro\r\n\r\n**Additional context**\r\n- I use `socket-controllers` librairie that allow me to write decorator for event handling [socket-controllers](https://www.npmjs.com/package/socket-controllers)\r\n- [The client side](https://github.com/Horsty80/react-space-game)\r\n- [The server side](https://github.com/Horsty80/space-game)\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4410/labels{/name}",
		"author_association":"NONE",
		"number":4410,
		"updated_at":"2022-07-11T13:00:29Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4410/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1291915365,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4410/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4410",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4410/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4410",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4410/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Horsty80/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Horsty80/repos",
			"following_url":"https://api.github.com/users/Horsty80/following{/other_user}",
			"starred_url":"https://api.github.com/users/Horsty80/starred{/owner}{/repo}",
			"login":"Horsty80",
			"followers_url":"https://api.github.com/users/Horsty80/followers",
			"type":"User",
			"url":"https://api.github.com/users/Horsty80",
			"subscriptions_url":"https://api.github.com/users/Horsty80/subscriptions",
			"received_events_url":"https://api.github.com/users/Horsty80/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/15615569?v=4",
			"events_url":"https://api.github.com/users/Horsty80/events{/privacy}",
			"html_url":"https://github.com/Horsty80",
			"site_admin":false,
			"id":15615569,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE1NjE1NTY5",
			"organizations_url":"https://api.github.com/users/Horsty80/orgs"
		},
		"node_id":"I_kwDOAAiDnM5NARBl"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-06-23T16:41:40Z",
		"title":"ReferenceError: setImmediate is not defined while unittesting",
		"body":"**Describe the bug**\r\nWe have an nx project where we have a library that holds all of our angular services.\r\nOne of these services is called SocketService and is managing socket-io socket instantiation. When we run our unittests for this library and the tests are running one after another, we get the following error:\r\n`ReferenceError: setImmediate is not defined\r\n    at XMLHttpRequest.dispatchEvent (/home/marcus/projects/aicosy/node_modules/xmlhttprequest-ssl/lib/XMLHttpRequest.js:628:9)\r\n    at setState (/home/marcus/projects/aicosy/node_modules/xmlhttprequest-ssl/lib/XMLHttpRequest.js:654:12)\r\n    at XMLHttpRequest.handleError (/home/marcus/projects/aicosy/node_modules/xmlhttprequest-ssl/lib/XMLHttpRequest.js:572:5)\r\n    at ClientRequest.errorHandler (/home/marcus/projects/aicosy/node_modules/xmlhttprequest-ssl/lib/XMLHttpRequest.js:490:14)\r\n    at ClientRequest.emit (node:events:520:28)\r\n    at Socket.socketErrorListener (node:_http_client:442:9)\r\n    at Socket.emit (node:events:520:28)\r\n    at emitErrorNT (node:internal/streams/destroy:157:8)\r\n    at emitErrorCloseNT (node:internal/streams/destroy:122:3)\r\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)\r\n`\r\nThis error occurs on the unittest of the service, that is directly running after the SocketService tests. (No matter which test this is)\r\nWhen I'm skipping the SocketService test, the unittests are succeeding.\r\n\r\n**To Reproduce**\r\nHere is the code for our SocketService:\r\n```Typescript\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SocketService {\r\n    socket = io(this.backendService.getActiveHost(), {\r\n        path: this.backendService.getWsUrlSubpath() + '/socket.io',\r\n        auth: {\r\n            token: this.authService.getAccessToken() as string,\r\n        },\r\n        closeOnBeforeunload: false,\r\n    });\r\n\r\n    constructor(private backendService: BackendService, private authService: AuthService) {\r\n    }\r\n}\r\n```\r\n\r\nand here is the test:\r\n```Typescript\r\ndescribe('SocketService', () => {\r\n    let service: SocketService;\r\n    let authService: AuthService;\r\n\r\n    beforeEach(() => {\r\n        TestBed.configureTestingModule({\r\n            providers: [\r\n                {\r\n                    provide: BackendService,\r\n                    useClass: BackendServiceStub,\r\n                },\r\n                {\r\n                    provide: AuthService,\r\n                    useClass: AuthServiceStub,\r\n                },\r\n            ],\r\n        });\r\n        service = TestBed.inject(SocketService);\r\n        authService = TestBed.inject(AuthService);\r\n    });\r\n\r\n    it('should be created', () => {\r\n        expect(service).toBeTruthy();\r\n    });\r\n});\r\n```\r\n\r\n\r\nSocket.IO client version: `4.5.1`\r\n\r\n**Expected behavior**\r\nI expect the error not to be thrown.\r\n\r\n**Platform:**\r\nRunning with :\r\n- angular: 13.3.2\r\n- jest: 27.5.1\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4402/labels{/name}",
		"author_association":"NONE",
		"number":4402,
		"updated_at":"2022-06-23T16:41:40Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4402/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1282677807,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4402/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4402",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4402/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4402",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":4,
			"+1":4,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4402/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/MarcusElevait/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/MarcusElevait/repos",
			"following_url":"https://api.github.com/users/MarcusElevait/following{/other_user}",
			"starred_url":"https://api.github.com/users/MarcusElevait/starred{/owner}{/repo}",
			"login":"MarcusElevait",
			"followers_url":"https://api.github.com/users/MarcusElevait/followers",
			"type":"User",
			"url":"https://api.github.com/users/MarcusElevait",
			"subscriptions_url":"https://api.github.com/users/MarcusElevait/subscriptions",
			"received_events_url":"https://api.github.com/users/MarcusElevait/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/95350049?v=4",
			"events_url":"https://api.github.com/users/MarcusElevait/events{/privacy}",
			"html_url":"https://github.com/MarcusElevait",
			"site_admin":false,
			"id":95350049,
			"gravatar_id":"",
			"node_id":"U_kgDOBa7tIQ",
			"organizations_url":"https://api.github.com/users/MarcusElevait/orgs"
		},
		"node_id":"I_kwDOAAiDnM5MdBwv"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-06-19T08:14:39Z",
		"title":"IOS 15.5 Cannot Connect (Client & Server 4.5.1)",
		"body":"**Describe the bug**\r\nCannot connect with IOS 15.5 Devices\r\n\r\n**To Reproduce**\r\n\r\nSocket.IO server version: `4.5.1`\r\n\r\n*Server*\r\n\r\n```js\r\nexport const initSocketIO = (server: any) => {\r\n  const io = require(\"socket.io\")(server);\r\n\r\n  io.on(\"connection\", async (socket: Socket) => {\r\n    logger.info(`user is connecting...`);\r\n\r\n    let token = socket.handshake.query.token;\r\n    let applicationId = socket.handshake.query.applicationId;\r\n\r\n    .....\r\n```\r\n\r\nSocket.IO client version: `4.5.1`\r\n\r\n*Client*\r\n\r\n```js\r\n  useEffect(() => {\r\n\r\n    if (socket) {\r\n      socket.removeAllListeners();\r\n\r\n      if (socket.listeners(\"connect\").length === 0) {\r\n        socket.on('connect', () => {\r\n          console.log('connected')\r\n          dispatch(setSupportStatus(true));\r\n        })\r\n      }\r\n\r\n      if (socket.listeners(\"message\").length === 0) {\r\n        socket.on('message', (data: any) => {\r\n          console.log(data);\r\n          if (data.chatRoomId == support.selectedChatRoom?.id) {\r\n            dispatch(addActiveChat(data));\r\n          } else {\r\n            //create notification badge\r\n            dispatch(setNewMessage({ id: data.chatRoomId, value: true }));\r\n          }\r\n        })\r\n      }\r\n\r\n      if (socket.listeners(\"close-chat-room\").length === 0) {\r\n        socket.on('close-chat-room', (id: string) => {\r\n          dispatch(closeChatRoom(id));\r\n        })\r\n      }\r\n\r\n      if (socket.listeners(\"disconnect\").length === 0) {\r\n        socket.on('disconnect', (data: any) => {\r\n          console.log('disconnected');\r\n          dispatch(setSupportStatus(false));\r\n        })\r\n      }\r\n    }\r\n\r\n    if (socket && !support.connected) {\r\n      socket.connect();\r\n      getActiveSupportTickets();\r\n    }\r\n  }, [dispatch, support.connected, support.selectedChatRoom?.id, getActiveSupportTickets, socketReady]);\r\n\r\n  useEffect(() => {\r\n    if (support.userId && support.token && support.applicationId) {\r\n      setSocket(io(socketIoServer,\r\n        {\r\n          transports: ['websocket'],\r\n          query: {\r\n            token: support.token,\r\n            applicationId: support.applicationId\r\n          }\r\n        }));\r\n      setSocketReady(true);\r\n    }\r\n  }, [support.applicationId, support.token, support.userId]);\r\n```\r\nThe code does not even get into `io.on(\"connection\",...`, it stopped by the error even before getting into the `connection` event.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\nI expect IOS devices to be able to connect with my server.\r\n\r\n**Platform:**\r\n - Device: All IOS Devices 15.5\r\n - OS: IOS 15.5\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n\r\n**The Error**\r\n\r\nThe error from client:\r\n\r\n`[Error] WebSocket connection to 'wss://support.xxxxxx.com/socket.io/?token=xxxxx&applicationId=xxxxxx&EIO=4&transport=websocket' failed: There was a bad response from the server.`\r\n\r\nThe error from the server:\r\n\r\n```\r\n2022-06-19T04:10:44.809Z engine handshaking client \"KddXP_t6guQ2dxHwAABK\" \r\n2022-06-19T04:10:44.809Z socket.io:server incoming connection with id KddXP_t6guQ2dxHwAABK Node.js\r\n\r\n2022-06-19T04:10:46.125Z socket.io:client no namespace joined yet, close the client \r\n2022-06-19T04:10:46.125Z socket.io:client forcing transport close \r\n2022-06-19T04:10:46.125Z socket.io:client client close with reason forced close \r\n2022-06-19T04:10:46.125Z socket.io:client client close with reason forced server close Node.js\r\n\r\n2022-06-19T04:10:50.706Z engine handshaking client \"Y_yOM8oTDtT8sgntAABL\" \r\n2022-06-19T04:10:50.706Z socket.io:server incoming connection with id Y_yOM8oTDtT8sgntAABL Node.js\r\n\r\n2022-06-19T04:10:52.615Z socket.io:client no namespace joined yet, close the client \r\n2022-06-19T04:10:52.615Z socket.io:client forcing transport close \r\n2022-06-19T04:10:52.615Z socket.io:client client close with reason forced close \r\n2022-06-19T04:10:52.615Z socket.io:client client close with reason forced server close\r\n```\r\n\r\nThe error repeated as the client keeps trying to re-connect.\r\n\r\n**Is is fine on Android Devices**\r\n\r\n-----------\r\nGithub Repo To Test\r\n-----------\r\n\r\nI have setup the github repo for testing the `socket.io-client` using dummy user (https://github.com/AlvinStefanus/socket).\r\n\r\n-----------\r\nPolling Connection Works\r\n-----------\r\n\r\nThe `polling` connection works fine on iOS devices, but not `websocket` connection.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4397/labels{/name}",
		"author_association":"NONE",
		"number":4397,
		"updated_at":"2022-06-21T02:12:48Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4397/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1275987668,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4397/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4397",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4397/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4397",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4397/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/AlvinStefanus/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/AlvinStefanus/repos",
			"following_url":"https://api.github.com/users/AlvinStefanus/following{/other_user}",
			"starred_url":"https://api.github.com/users/AlvinStefanus/starred{/owner}{/repo}",
			"login":"AlvinStefanus",
			"followers_url":"https://api.github.com/users/AlvinStefanus/followers",
			"type":"User",
			"url":"https://api.github.com/users/AlvinStefanus",
			"subscriptions_url":"https://api.github.com/users/AlvinStefanus/subscriptions",
			"received_events_url":"https://api.github.com/users/AlvinStefanus/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/8480565?v=4",
			"events_url":"https://api.github.com/users/AlvinStefanus/events{/privacy}",
			"html_url":"https://github.com/AlvinStefanus",
			"site_admin":false,
			"id":8480565,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjg0ODA1NjU=",
			"organizations_url":"https://api.github.com/users/AlvinStefanus/orgs"
		},
		"node_id":"I_kwDOAAiDnM5MDgbU"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-05-17T14:38:49Z",
		"title":"socket.onAnyOutgoing() cannot receive binary when it uses room",
		"body":"**Describe the bug**\r\n\r\nI want to use `socket.onAnyOutgoing()` to calculate bytes of outgoing messages.\r\nHowever, when I use a room and send a binary message, `socket.onAnyOutgoing()` cannot receive it.  \r\nSo, I cannot calculate correctly.\r\nI can reproduce it with the following code.\r\n\r\n**To Reproduce**\r\n\r\nSocket.IO server version: `4.5.0`\r\n\r\n*Server*\r\n\r\n```ts\r\nio.on('connection', (socket: Socket) => {\r\n  socket.onAnyOutgoing((event: string, ...args: any[]) => {\r\n    console.log('onAnyOutgoing:', ...args)\r\n  })\r\n\r\n  socket.join('test')\r\n  socket.emit('message', 'hoge')                     // -> onAnyOutgoing: hoge\r\n  socket.emit('message', Buffer.from('hoge'))        // -> onAnyOutgoing: <Buffer 68 6f 67 65>\r\n  io.to('test').emit('message', 'hoge')              // -> onAnyOutgoing: hoge\r\n  io.to('test').emit('message', Buffer.from('hoge')) // -> onAnyOutgoing: { _placeholder: true, num: 0 }\r\n})\r\n```\r\n\r\n**Expected behavior**\r\n\r\n`socket.onAnyOutgoing()` should receive correctly binary message when it uses room.\r\n\r\n```ts\r\n  io.to('test').emit('message', Buffer.from('hoge')) // -> onAnyOutgoing:  <Buffer 68 6f 67 65>\r\n```\r\n\r\n*Platform:*\r\n\r\n* OS : Generic",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4374/labels{/name}",
		"author_association":"NONE",
		"number":4374,
		"updated_at":"2022-05-27T12:45:47Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4374/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1238745724,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4374/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4374",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4374/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4374",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4374/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/zoeponta/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/zoeponta/repos",
			"following_url":"https://api.github.com/users/zoeponta/following{/other_user}",
			"starred_url":"https://api.github.com/users/zoeponta/starred{/owner}{/repo}",
			"login":"zoeponta",
			"followers_url":"https://api.github.com/users/zoeponta/followers",
			"type":"User",
			"url":"https://api.github.com/users/zoeponta",
			"subscriptions_url":"https://api.github.com/users/zoeponta/subscriptions",
			"received_events_url":"https://api.github.com/users/zoeponta/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/13092605?v=4",
			"events_url":"https://api.github.com/users/zoeponta/events{/privacy}",
			"html_url":"https://github.com/zoeponta",
			"site_admin":false,
			"id":13092605,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjEzMDkyNjA1",
			"organizations_url":"https://api.github.com/users/zoeponta/orgs"
		},
		"node_id":"I_kwDOAAiDnM5J1cJ8"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-05-04T15:29:56Z",
		"title":"Socket.IO and Electron : why bidirectional communication websocket don't work in my app?",
		"body":"**Describe the bug**\r\nI'm using express and electron with socket.io I should have a bidirectional communicationwith websocket protocol (101) between my client (in React) and my serve part, but it render me http protocol with GET and POST request (200).\r\n\r\nMy app is doing HTTP request GET, POST (200), but it should be a websocket (101) like they explain in this doc : https://socket.io/docs/v3/how-it-works/#upgrade-mechanism.\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version: `4.4.1`\r\n\r\n*Server*\r\n\r\n```js\r\n//Express and Socket IO modules\r\nconst express = require(\"express\");\r\nconst { createServer } = require(\"http\");\r\nconst { Server } = require(\"socket.io\");\r\n\r\nconst appExpress = express();\r\nconst httpServer = createServer(appExpress);\r\nconst io = new Server(httpServer, {\r\n  cors: {\r\n    origin: \"*\",\r\n  }\r\n});\r\n\r\n//Chokidar\r\nconst chokidar = require('chokidar');\r\n\r\nconst electron = require('electron');\r\n// Module to control application life.\r\nconst app = electron.app;\r\n// Module to create native browser window.\r\nconst BrowserWindow = electron.BrowserWindow;\r\n//Library Menubar to set electron-app in a \"pop-up-like\"\r\nconst { menubar } = require('menubar');\r\n\r\nconst mb = menubar({\r\n  index: process.env.ELECTRON_START_URL,\r\n  browserWindow : {\r\n    width: 400,\r\n    height: 400\r\n  },\r\n  icon: \"images/favicon-20x20.png\"\r\n});\r\n\r\nmb.app.on('ready', () => {\r\n  console.log(\"is listening\")\r\n});\r\n\r\n// Quit when all windows are closed.\r\nmb.app.on('window-all-closed', function () {\r\n    // On OS X it is common for applications and their menu bar\r\n    // to stay active until the user quits explicitly with Cmd + Q\r\n    if (process.platform !== 'darwin') {\r\n        mb.app.quit()\r\n    }\r\n});\r\n\r\nmb.app.on('activate', function () {\r\n    // On OS X it's common to re-create a window in the app when the\r\n    // dock icon is clicked and there are no other windows open.\r\n    if (mainWindow === null) {\r\n        createWindow()\r\n    }\r\n});\r\n\r\n//chokidar watcher\r\nconst watcher = chokidar.watch('/Users/enzo/Desktop/dossier-1-test', {\r\n  ignored: /(^|[\\/\\\\])\\../, // ignore dotfiles\r\n  persistent: true\r\n});\r\n\r\nwatcher.on('ready', () => {\r\n  console.log(\"watching\")\r\n})\r\n\r\nconst log = console.log.bind(console);\r\n// Add event listeners.\r\nlet pathArray = [];\r\nlet files = { pathFiles : []};\r\n\r\n//watcher on add and delete event\r\nwatcher\r\n  .on('add', path => {\r\n    console.log(`file ${path} added`)\r\n    pathArray.push(path)\r\n    files = {\r\n      pathFiles: pathArray,\r\n    }\r\n  })\r\n  .on('unlink', path => {\r\n    console.log(`file ${path} removed`)\r\n    pathArray = pathArray.filter( file => file != path)\r\n    files = {\r\n      pathFiles: pathArray\r\n    }\r\n  });\r\n\r\n//express and socket io server\r\nappExpress.get('/', (req, res) => {\r\n  res.sendFile(\"http://localhost:3000\");\r\n});\r\n\r\nio.on('connection', (socket) => {\r\n  console.log(\"initial\", files)\r\n  //send to front on connect\r\n  io.emit(\"new-remote-operations\", files)\r\n  //request for updates: send new value to front\r\n  socket.on(\"new-operations\", () => {\r\n    console.log(\"after refresh\", files)\r\n    io.emit(\"new-remote-operations\", files)\r\n  });\r\n  //request to delete: send new array without path deleted\r\n  socket.on(\"new-operations-delete\", (data) => {\r\n    console.log(\"on delete\", data)\r\n    pathArray = pathArray.filter( file => file != data.path)\r\n    files = {\r\n      pathFiles: pathArray\r\n    };\r\n    io.emit(\"new-remote-operations\", files)\r\n  })\r\n}); \r\n\r\nhttpServer.listen(8000);\r\n```\r\n\r\nSocket.IO client version: `4.4.1`\r\n\r\n*Client*\r\n\r\n```js\r\nport React, {useState, useEffect} from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nfunction App() {\r\n\r\n  const [state, setState] = useState()\r\n\r\n  useEffect(()=> {\r\n    socket.on('new-remote-operations', (files) => {\r\n      console.log(\"hello\", files?.pathFiles);\r\n      setState(files.pathFiles);\r\n    })\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {state?.map((file) =>\r\n        <div style={{display : \"flex\"}}>\r\n          <p key={file}>{file}</p>\r\n          <button onClick={() => {\r\n            socket.emit(\"new-operations-delete\", { path: file })\r\n          }}>Delete</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <button onClick={()=> {\r\n          socket.emit(\"new-operations\", { pathFiles: state} )\r\n        }}>New operations</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\n**Expected behavior**\r\nI should have a bidirectional communicationwith websocket protocol (101) between my client (in React) and my serve part\r\n\r\n**Platform:**\r\n - Device: MacBook Pro 2020\r\n - OS: macOS Big Sur 11.4\r\n\r\n**Additional context**\r\nClient Request\r\n![image](https://user-images.githubusercontent.com/43407766/166716172-ddd2e0a8-c255-43d3-8241-df084f07c103.png)",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4363/labels{/name}",
		"author_association":"NONE",
		"number":4363,
		"updated_at":"2022-06-30T13:26:28Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4363/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1225542819,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4363/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4363",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4363/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4363",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":1,
			"+1":1,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4363/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/EnzoZuniga/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/EnzoZuniga/repos",
			"following_url":"https://api.github.com/users/EnzoZuniga/following{/other_user}",
			"starred_url":"https://api.github.com/users/EnzoZuniga/starred{/owner}{/repo}",
			"login":"EnzoZuniga",
			"followers_url":"https://api.github.com/users/EnzoZuniga/followers",
			"type":"User",
			"url":"https://api.github.com/users/EnzoZuniga",
			"subscriptions_url":"https://api.github.com/users/EnzoZuniga/subscriptions",
			"received_events_url":"https://api.github.com/users/EnzoZuniga/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/43407766?v=4",
			"events_url":"https://api.github.com/users/EnzoZuniga/events{/privacy}",
			"html_url":"https://github.com/EnzoZuniga",
			"site_admin":false,
			"id":43407766,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQzNDA3NzY2",
			"organizations_url":"https://api.github.com/users/EnzoZuniga/orgs"
		},
		"node_id":"I_kwDOAAiDnM5JDEyj"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-04-14T19:21:16Z",
		"title":"Bad Request - TRANSPORT_MISMATCH - 400 response in browser - Apache Reverse Proxy",
		"body":"**Describe the bug**\r\nIn my browser I am seeing a 400 response when attempting the websocket connection, and on the socket.io server, with logging enabled, I am seeing error.code = 3, error.message = \"Bad Request\", and error.context = `{ name: \"TRANSPORT_MISMATCH\", transport: 'websocket', previousTransport: 'polling' }`. The socket.io server is sitting behind an Apache reverse proxy. The socket.io server has been packaged with the `pkg` command. Long polling for the application works, but is undesired.\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version: `4.4.1`\r\n\r\n*Server*\r\n```apache\r\n# In Apache Config\r\nProxyPass /somepath http://localhost:3000 Keepalive=On connectiontimeout=60 timeout=60\r\nRewriteEngine on\r\nRewriteCond %{HTTP:Upgrade} websocket [NC]\r\nRewriteCond %{HTTP:Connection} upgrade [NC]\r\nRewriteRule ^/?somepath(.*) \"ws://localhost:3000/$1\" [P,L]\r\nProxyTimeout 30\r\n```\r\n```js\r\nconst express = require('express');\r\nconst app = express();\r\nconst http = require('http');\r\nconst server = http.createServer(app);\r\nconst { Server } = require('socket.io');\r\nconst { spawn } = require('child_process');\r\nconst process = require('process');\r\n\r\napp.use(express.static('public'));\r\n\r\nconst io = new Server(server);\r\n\r\nio.engine.on(\"connection_error\", (err) => {\r\n    console.log(err.code);     // the error code, for example 1\r\n    console.log(err.message);  // the error message, for example \"Session ID unknown\"\r\n    console.log(err.context);  // some additional error context\r\n});\r\n\r\nio.on('connection', (socket) => {\r\n    console.log('a user connected');\r\n    socket.on('disconnect', () => {\r\n\t    console.log('user disconnected');\r\n    });\r\n});\r\n\r\n// extraneous code redacted, mostly io.emit's to the connecting browser\r\n\r\nserver.listen(3000, '127.0.0.1', 0, () => {\r\n    console.log('Express+Socket.io server listening on *:3000');\r\n});\r\n```\r\n\r\nSocket.IO client version: `4.4.1`\r\n\r\n*Client*\r\n\r\n```js\r\n<script src=\"https://cdn.socket.io/4.4.1/socket.io.min.js\" integrity=\"sha384-fKnu0iswBIqkjxrhQCTZ7qlLHOFEgNkRmK2vaO/LbTZSXdJfAu6ewRBdwHPhBo/H\" crossorigin=\"anonymous\"></script>\r\nvar socket = io(\"<DOMAIN>\", { path: \"/<PATH_INSIDE_PKG>/socket.io\" });\r\nsocket.on('...', () => { console.log('here'); });\r\n```\r\n\r\n**Expected behavior**\r\nI anticipated that the websocket would connect, but it does not. There is polling happening, which is the solution I was trying to move away from. I don't know what I'm doing wrong.\r\n\r\n**Platform:**\r\n - Device: Linux server\r\n - OS: RHEL 8\r\n\r\n**Additional context**\r\nApache Reverse Proxy -> Node + Express -> Socket.io \r\nRelated line from Apache Error Log: [Thu Apr 14 15:07:13.835377 2022] [proxy_http:error] [pid 19XXXX:tid 140XXXX] (20014)Internal error (specific information not available): [client <MY_IP_ADDRESS>] AH01102: error reading status line from remote server localhost:3000\r\nTLS is handled by Apache.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4343/labels{/name}",
		"author_association":"NONE",
		"number":4343,
		"updated_at":"2022-07-15T19:04:25Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4343/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1204895310,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4343/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4343",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4343/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4343",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":2,
			"+1":2,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4343/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/russsaidwords/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/russsaidwords/repos",
			"following_url":"https://api.github.com/users/russsaidwords/following{/other_user}",
			"starred_url":"https://api.github.com/users/russsaidwords/starred{/owner}{/repo}",
			"login":"russsaidwords",
			"followers_url":"https://api.github.com/users/russsaidwords/followers",
			"type":"User",
			"url":"https://api.github.com/users/russsaidwords",
			"subscriptions_url":"https://api.github.com/users/russsaidwords/subscriptions",
			"received_events_url":"https://api.github.com/users/russsaidwords/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/974636?v=4",
			"events_url":"https://api.github.com/users/russsaidwords/events{/privacy}",
			"html_url":"https://github.com/russsaidwords",
			"site_admin":false,
			"id":974636,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjk3NDYzNg==",
			"organizations_url":"https://api.github.com/users/russsaidwords/orgs"
		},
		"node_id":"I_kwDOAAiDnM5H0T5O"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-04-05T17:01:45Z",
		"title":"Still getting Continual Transport Close every PingInterval | Redis Adapter ",
		"body":"**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nI know there is another thread on this https://github.com/socketio/socket.io/issues/3025, but I read through and tried everything and still can't fix this problem, I have loved this package so far but can't seem to get this right!\r\n\r\nI have a lot of clients connecting around 7k cc okay but I get a few clients reporting they are having disconnect issues. Looking deeper it shows that on the server they are reconnecting and disconnecting every 25 seconds (see logs below)\r\n\r\nMy pingInterval is 25000\r\nMy pingTimeout is 65000\r\n\r\n\"@socket.io/redis-adapter\": \"^7.1.0\", \r\n\"socket.io\": \"4.4.1\",\r\n\r\nI'm using Amazon's ALB to 4 targets with redis adapter  with a 1-minute timeout and sticky session enabled 100 seconds\r\n\r\nServer Code\r\n```\r\nconst { createClient } = require(\"redis\");\r\nconst { createAdapter } = require(\"@socket.io/redis-adapter\");\r\nconst pubClient = createClient({ url: process.env.REDIS_URI });\r\nconst subClient = pubClient.duplicate();\r\n\r\nconst io = new Server(server, {\r\n    // transports: [\"websocket\"], // https://socket.io/docs/v4/using-multiple-nodes/\r\n    allowEIO3: true, // false by default\r\n    pingInterval: 25000,\r\n    pingTimeout: 65000,\r\n\r\n    cors: {\r\n        origin: \"*\",\r\n        methods: [\r\n            \"GET\",\r\n            \"POST\",\r\n            \"OPTIONS\",\r\n            \"HEAD\",\r\n            \"PUT\",\r\n            \"PATCH\",\r\n            \"POST\",\r\n            \"DELETE\",\r\n        ],\r\n    },\r\n});\r\n\r\n\r\nPromise.all([pubClient.connect(), subClient.connect()]).then(() => {\r\n    io.adapter(createAdapter(pubClient, subClient));\r\n    console.log(\"CONNECTED\");\r\n    // io.listen(3001); this happens with hapi above\r\n});\r\n\r\n```\r\n\r\n\r\nClient code (disabled polling and enabled both didn't work)\r\n\r\n```\r\n    <script src=\"/socket.io/socket.io.js\"></script>\r\n           let socket = io({\r\n          query: {\r\n            roomId: last_part\r\n          },\r\n          transports: ['websocket'],\r\n        });\r\n```\r\n\r\nBugged behavior server logs, you can see it's getting a transport close every 25000\r\n<img width=\"993\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10217999/161809622-35b5056d-6de9-4900-b968-b488da96db68.png\">\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4333/labels{/name}",
		"author_association":"NONE",
		"number":4333,
		"updated_at":"2022-08-05T03:17:36Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4333/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1193470428,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4333/timeline",
		"comments":4,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4333",
		"labels":[
			{
				"default":false,
				"color":"B9DDCE",
				"name":"needs investigation",
				"description":"",
				"id":2833344293,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/needs%20investigation",
				"node_id":"MDU6TGFiZWwyODMzMzQ0Mjkz"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4333/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4333",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4333/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/aaronkchsu/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/aaronkchsu/repos",
			"following_url":"https://api.github.com/users/aaronkchsu/following{/other_user}",
			"starred_url":"https://api.github.com/users/aaronkchsu/starred{/owner}{/repo}",
			"login":"aaronkchsu",
			"followers_url":"https://api.github.com/users/aaronkchsu/followers",
			"type":"User",
			"url":"https://api.github.com/users/aaronkchsu",
			"subscriptions_url":"https://api.github.com/users/aaronkchsu/subscriptions",
			"received_events_url":"https://api.github.com/users/aaronkchsu/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/10217999?v=4",
			"events_url":"https://api.github.com/users/aaronkchsu/events{/privacy}",
			"html_url":"https://github.com/aaronkchsu",
			"site_admin":false,
			"id":10217999,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjEwMjE3OTk5",
			"organizations_url":"https://api.github.com/users/aaronkchsu/orgs"
		},
		"node_id":"I_kwDOAAiDnM5HIunc"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-04-01T08:29:36Z",
		"title":"Circular dependency when bundling",
		"body":"**Description**\r\nI am trying to bundle my library which has Socket.IO as a dependency.\r\nI am using rollup.js as a module bundler.\r\nWhen bundling it gives me the following error:\r\n\r\n```\r\n(!) Circular dependencies\r\nnode_modules/socket.io/dist/socket.js -> node_modules/socket.io/dist/broadcast-operator.js -> node_modules/socket.io/dist/socket.js\r\nnode_modules/socket.io/dist/socket.js -> node_modules/socket.io/dist/broadcast-operator.js -> <my_library_path>/node_modules/socket.io/dist/socket.js?commonjs-proxy -> node_modules/socket.io/dist/socket.js\r\n```\r\n\r\n**To Reproduce**\r\n\r\nSocket.IO version: `4.4.1`\r\n\r\nCurrently using this rollup config file:\r\n\r\n```js\r\nimport resolve from '@rollup/plugin-node-resolve'\r\nimport commonjs from '@rollup/plugin-commonjs'\r\nimport typescript from '@rollup/plugin-typescript'\r\nimport dts from 'rollup-plugin-dts'\r\nimport postcss from 'rollup-plugin-postcss'\r\nimport { terser } from 'rollup-plugin-terser'\r\nimport peerDepsExternal from 'rollup-plugin-peer-deps-external'\r\nimport json from '@rollup/plugin-json'\r\n\r\nconst packageJson = require('./package.json')\r\n\r\nexport default [\r\n  {\r\n    input: 'src/index.ts',\r\n    output: [\r\n      {\r\n        file: packageJson.main,\r\n        format: 'cjs',\r\n        sourcemap: true,\r\n      },\r\n      {\r\n        file: packageJson.module,\r\n        format: 'esm',\r\n        sourcemap: true,\r\n      },\r\n    ],\r\n    plugins: [\r\n      peerDepsExternal(),\r\n      resolve(),\r\n      commonjs(),\r\n      typescript({ tsconfig: './tsconfig.json' }),\r\n      postcss(),\r\n      terser(),\r\n      json({compact: true}),\r\n    ],\r\n  },\r\n  {\r\n    input: 'dist/esm/types/index.d.ts',\r\n    output: [{ file: 'dist/index.d.ts', format: 'esm' }],\r\n    plugins: [dts()],\r\n    external: [/\\.(css|less|scss)$/, 'websocket'],\r\n  },\r\n]\r\n```\r\n\r\nThe warning message shows when executing:\r\n\r\n```bash\r\nnpx rollup -c\r\n```\r\n\r\n**Expected behavior**\r\nNo warning is shown\r\n\r\n**Platform:**\r\n - OS: Ubuntu 20.04\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4329/labels{/name}",
		"author_association":"NONE",
		"number":4329,
		"updated_at":"2022-04-05T06:17:20Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4329/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1189447339,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4329/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4329",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4329/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4329",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4329/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/falfab/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/falfab/repos",
			"following_url":"https://api.github.com/users/falfab/following{/other_user}",
			"starred_url":"https://api.github.com/users/falfab/starred{/owner}{/repo}",
			"login":"falfab",
			"followers_url":"https://api.github.com/users/falfab/followers",
			"type":"User",
			"url":"https://api.github.com/users/falfab",
			"subscriptions_url":"https://api.github.com/users/falfab/subscriptions",
			"received_events_url":"https://api.github.com/users/falfab/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/12623334?v=4",
			"events_url":"https://api.github.com/users/falfab/events{/privacy}",
			"html_url":"https://github.com/falfab",
			"site_admin":false,
			"id":12623334,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjEyNjIzMzM0",
			"organizations_url":"https://api.github.com/users/falfab/orgs"
		},
		"node_id":"I_kwDOAAiDnM5G5Yar"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-03-31T22:29:46Z",
		"title":"socket.emit produces high CPU load [LIBGDX 2d platformer]",
		"body":"**Describe the bug**\r\nHello there, I want to create a multiplayer 2d platformer using socket.io on Client-side (libgdx, Java based).\r\nAnd using node.js on the server side.\r\nThe problem begins when I try to send some basic emits like socket.emit(\"UP\");\r\nThese emits are triggered by clicking some arrows. The code is below:\r\n\r\n`package com.akomazec.createCoreGamePrototype;`\r\n\r\n```\r\nimport com.badlogic.gdx.ApplicationAdapter;\r\nimport com.badlogic.gdx.Gdx;\r\nimport com.badlogic.gdx.Input;\r\nimport com.badlogic.gdx.graphics.GL20;\r\nimport com.badlogic.gdx.graphics.Texture;\r\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\r\n\r\nimport java.net.URISyntaxException;\r\n\r\nimport io.socket.client.IO;\r\nimport io.socket.client.Socket;\r\n\r\n/** {@link com.badlogic.gdx.ApplicationListener} implementation shared by all platforms. */\r\npublic class CreateCoreGamePrototype extends ApplicationAdapter {\r\n\tprivate SpriteBatch batch;\r\n\tprivate Texture image;\r\n\t/* Server stuff */\r\n\tprivate Socket socket;\r\n\tprivate static String url = \"http://localhost:8080\";\r\n\r\n\t@Override\r\n\tpublic void create() {\r\n\t\tbatch = new SpriteBatch();\r\n\t\timage = new Texture(\"libgdx.png\");\r\n\t\ttry {\r\n\t\t\tcreateSocket();\r\n\t\t} catch (URISyntaxException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tconnectSocket();\r\n\t}\r\n\r\n\tpublic void handleInput() {\r\n\r\n\t\t//control our player using immediate impulses\r\n\t\tif (Gdx.input.isKeyJustPressed(Input.Keys.UP))\r\n\t\t{\r\n\t\t\tsocket.emit(\"UP\");\r\n\t\t}\r\n\r\n\t\tif (Gdx.input.isKeyJustPressed(Input.Keys.DOWN))\r\n\t\t{\r\n\t\t\tsocket.emit(\"DOWN\");\r\n\t\t}\r\n\r\n\t\tif (Gdx.input.isKeyJustPressed(Input.Keys.LEFT))\r\n\t\t{\r\n\t\t\tsocket.emit(\"LEFT\");\r\n\t\t}\r\n\r\n\t\tif (Gdx.input.isKeyJustPressed(Input.Keys.RIGHT))\r\n\t\t{\r\n\t\t\tsocket.emit(\"RIGHT\");\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void render() {\r\n\t\tGdx.gl.glClearColor(0.15f, 0.15f, 0.2f, 1f);\r\n\t\tGdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n\t\tbatch.begin();\r\n\t\tbatch.draw(image, 140, 210);\r\n\t\tbatch.end();\r\n\r\n\t\thandleInput();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void dispose() {\r\n\t\tbatch.dispose();\r\n\t\timage.dispose();\r\n\t}\r\n\r\n\tprivate void connectSocket()\r\n\t{\r\n\t\tsocket.connect();\r\n\t}\r\n\r\n\tprivate void createSocket() throws URISyntaxException {\r\n\t\tIO.Options options = new IO.Options();\r\n\t\toptions.transports = new String[]{\"websocket\"};\r\n\t\t// Number of failed retries\r\n\t\toptions.reconnectionAttempts = 3;\r\n\t\t// Time interval for failed reconnection\r\n\t\toptions.reconnectionDelay = 10;\r\n\t\t// Connection timeout (ms)\r\n\t\toptions.timeout = 50;\r\n\t\tsocket = IO.socket(url, options);\r\n\r\n\t}\r\n}\r\n```\r\nFrom my perspective, I can't provide too much data  (By spamming my keyboard buttons) from the client-side, but CPU usage goes up to 30%. Without emitting the data, CPU usage is very low. \r\n\r\nNOTE: This is just a sample code. In a real project, idea is just to send important information ( like position vectors). This issue provides FPS drop and lag. Also high CPU usage.\r\nAny idea how to overcome that?\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4328/labels{/name}",
		"author_association":"NONE",
		"number":4328,
		"updated_at":"2022-07-27T12:33:30Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4328/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1188930186,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4328/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4328",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4328/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4328",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4328/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/alexkomazec/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/alexkomazec/repos",
			"following_url":"https://api.github.com/users/alexkomazec/following{/other_user}",
			"starred_url":"https://api.github.com/users/alexkomazec/starred{/owner}{/repo}",
			"login":"alexkomazec",
			"followers_url":"https://api.github.com/users/alexkomazec/followers",
			"type":"User",
			"url":"https://api.github.com/users/alexkomazec",
			"subscriptions_url":"https://api.github.com/users/alexkomazec/subscriptions",
			"received_events_url":"https://api.github.com/users/alexkomazec/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/70039449?v=4",
			"events_url":"https://api.github.com/users/alexkomazec/events{/privacy}",
			"html_url":"https://github.com/alexkomazec",
			"site_admin":false,
			"id":70039449,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjcwMDM5NDQ5",
			"organizations_url":"https://api.github.com/users/alexkomazec/orgs"
		},
		"node_id":"I_kwDOAAiDnM5G3aKK"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-03-28T23:27:27Z",
		"title":"Erro de Websocket",
		"body":"Estou com esse erro dentro da minha aplicação do Socket.io, alguem sabe o motivo e como consigo resolver a mesma?\r\n\r\nwebsocket.js:87 WebSocket connection to 'wss://aapi.dominio.com.br/socket.io/?EIO=4&transport=websocket&sid=bdEUxdbJhx8MVYr9AASe' failed: ",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4326/labels{/name}",
		"author_association":"NONE",
		"number":4326,
		"updated_at":"2022-04-27T02:51:27Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4326/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1184107111,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4326/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4326",
		"labels":[
			{
				"default":true,
				"color":"d876e3",
				"name":"question",
				"description":"Further information is requested",
				"id":2111669362,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/question",
				"node_id":"MDU6TGFiZWwyMTExNjY5MzYy"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4326/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4326",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4326/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Guilhermealves20101999/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Guilhermealves20101999/repos",
			"following_url":"https://api.github.com/users/Guilhermealves20101999/following{/other_user}",
			"starred_url":"https://api.github.com/users/Guilhermealves20101999/starred{/owner}{/repo}",
			"login":"Guilhermealves20101999",
			"followers_url":"https://api.github.com/users/Guilhermealves20101999/followers",
			"type":"User",
			"url":"https://api.github.com/users/Guilhermealves20101999",
			"subscriptions_url":"https://api.github.com/users/Guilhermealves20101999/subscriptions",
			"received_events_url":"https://api.github.com/users/Guilhermealves20101999/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/66981309?v=4",
			"events_url":"https://api.github.com/users/Guilhermealves20101999/events{/privacy}",
			"html_url":"https://github.com/Guilhermealves20101999",
			"site_admin":false,
			"id":66981309,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjY2OTgxMzA5",
			"organizations_url":"https://api.github.com/users/Guilhermealves20101999/orgs"
		},
		"node_id":"I_kwDOAAiDnM5GlApn"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-03-23T14:15:03Z",
		"title":"Dynamic `DEBUG` env variable",
		"body":"Hello we can use `DEBUG` only during start application, but I need change it on the fly (during running application)\r\nCan I change `DEBUG` env variable via code?",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4323/labels{/name}",
		"author_association":"NONE",
		"number":4323,
		"updated_at":"2022-03-23T22:20:32Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4323/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1178185404,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4323/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4323",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4323/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4323",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4323/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/xgrommx/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/xgrommx/repos",
			"following_url":"https://api.github.com/users/xgrommx/following{/other_user}",
			"starred_url":"https://api.github.com/users/xgrommx/starred{/owner}{/repo}",
			"login":"xgrommx",
			"followers_url":"https://api.github.com/users/xgrommx/followers",
			"type":"User",
			"url":"https://api.github.com/users/xgrommx",
			"subscriptions_url":"https://api.github.com/users/xgrommx/subscriptions",
			"received_events_url":"https://api.github.com/users/xgrommx/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/1499594?v=4",
			"events_url":"https://api.github.com/users/xgrommx/events{/privacy}",
			"html_url":"https://github.com/xgrommx",
			"site_admin":false,
			"id":1499594,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE0OTk1OTQ=",
			"organizations_url":"https://api.github.com/users/xgrommx/orgs"
		},
		"node_id":"I_kwDOAAiDnM5GOa68"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-03-17T11:52:52Z",
		"title":"Timed out event is still buffered",
		"body":"**Describe the bug**\r\n\r\nFor a timed out event, If connection between client and server is disrupted but not closed yet, client still buffers event.\r\n\r\n**To Reproduce**\r\n\r\n1- After connection between client and server is established disconnect the network.\r\n2- before the client closes the connection send an event with timeout.\r\n3- after the event times out connect the network.\r\n4- client still sends the timed out event \r\n\r\nSocket.IO server version: `4.4.1`\r\n\r\n*Server*\r\n\r\n```js\r\nimport { Server } from \"socket.io\";\r\n\r\nconst port = 3000;\r\nconst io = new Server(port);\r\nconsole.log(`listening to ${port}`);\r\n\r\nio.on(\"connection\", (socket) => {\r\n\tconsole.log('user connected');\r\n\tsocket.on(\"emited\", (cb) => {\r\n        console.log('got event');\r\n\t\tcb('done');\r\n\t});\r\n});\r\n});\r\n```\r\n\r\nSocket.IO client version: `4.4.1`\r\n\r\n*Client*\r\n\r\n```js\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"ws://server-ip:3000\");\r\n\r\n// send a message to the server\r\nsetTimeout(() => {\r\n\tsocket.timeout(1000).emit(\"emited\", (err, msg) => {\r\n\t\tif (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.log(msg);\r\n\t});\r\n\tconsole.log('event sent');\r\n}, 10000);\r\n```\r\n\r\n**Expected behavior**\r\n\r\nAfter the event times out, the event should have been removed from buffer so it wouldn't be sent to server.\r\n\r\n**Platform:**\r\n - OS:Ubuntu 20.04\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4318/labels{/name}",
		"author_association":"CONTRIBUTOR",
		"number":4318,
		"updated_at":"2022-04-05T06:11:00Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4318/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1172281596,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4318/timeline",
		"comments":3,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4318",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4318/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4318",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4318/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/shayanYousefi/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/shayanYousefi/repos",
			"following_url":"https://api.github.com/users/shayanYousefi/following{/other_user}",
			"starred_url":"https://api.github.com/users/shayanYousefi/starred{/owner}{/repo}",
			"login":"shayanYousefi",
			"followers_url":"https://api.github.com/users/shayanYousefi/followers",
			"type":"User",
			"url":"https://api.github.com/users/shayanYousefi",
			"subscriptions_url":"https://api.github.com/users/shayanYousefi/subscriptions",
			"received_events_url":"https://api.github.com/users/shayanYousefi/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/13784931?v=4",
			"events_url":"https://api.github.com/users/shayanYousefi/events{/privacy}",
			"html_url":"https://github.com/shayanYousefi",
			"site_admin":false,
			"id":13784931,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjEzNzg0OTMx",
			"organizations_url":"https://api.github.com/users/shayanYousefi/orgs"
		},
		"node_id":"I_kwDOAAiDnM5F35j8"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-03-08T15:30:08Z",
		"title":"Send message to one connected client",
		"body":"Hi forum,\r\n\r\nI created this some minutes ago but it seems to have disappeared. Trying again:\r\n\r\nThere's an application (\"the backend\") using python flask socket.io. Multiple browsers (\"the frontends\") may connect to this application at the same time. One of the use cases requires that the backend sends a message to one of the frontends and to only this one frontend.\r\n\r\nTo distinguish one frontend from another, we use SocketIO.send() and its concept of \"room\"s.\r\n```\r\n            socketSendMethod(\r\n                data = {\r\n                    \"ToolId\" : self._toolId,\r\n                    \"ToolType\" : self.ToolType.name,\r\n                    \"Value\" : measurement\r\n                },\r\n                room = oneSession.Id\r\n```\r\nThe room here is a session id that is generated and sent to the frontend upon user login. The frontend then stores this id in a cookie. It then triggers an event handler which uses the session id (called \"room\") as argument to join_room():\r\n```\r\n@socketio.on(\"join\")\r\ndef join(message):\r\n    join_room(int(message[\"room\"]))\r\n```\r\nThe join_room() method doesn't work outside of event handlers.\r\n\r\nSo we have a session id, have it stored in the backend and get its value as a cookie every time the frontend calls some route\r\n```\r\n@app.route(\"/\", methods=[\"GET\"]\r\ndef routeRoot():\r\n    return(render_template(\"index.html\"))\r\n```\r\nThis way, so I thought, we could specify exactly which frontend to send a message to. But the message gets transferred to all the connected frontends, just like without mentioning the room in SocketIO.send() at all.\r\n\r\nDigging into the problem, I found that send() doesn't know a \"room\" parameter. It uses \"to\" instead. But after fixing this, none of the connected clients gets the message. Digging deeper, I stumbled over BaseManager.emit() which is called some steps into the stack and checks if (this one is new) namespace exists in its self.rooms list, which is empty.\r\n\r\nMy question is: What should I do to populate the rooms list?\r\n\r\n[Update]\r\nThere seems to be an issue with the\r\n```\r\n@socketio.on(\"join\")\r\ndef join(message):\r\n    join_room(int(message[\"room\"]))\r\n```\r\nmethod. It doesn't get called. Except for seldom occurrences when it does. Not getting called is something I would suppose to have influence on the list of known rooms and therefore on my problem.\r\n\r\nWhat can go wrong (mabe even on the frontend side?) so that an event like the one above doesn't get called? How can we fix this?",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4310/labels{/name}",
		"author_association":"NONE",
		"number":4310,
		"updated_at":"2022-03-09T09:42:52Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4310/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1162797613,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4310/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4310",
		"labels":[
			{
				"default":true,
				"color":"d876e3",
				"name":"question",
				"description":"Further information is requested",
				"id":2111669362,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/question",
				"node_id":"MDU6TGFiZWwyMTExNjY5MzYy"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4310/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4310",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4310/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/lukeer/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/lukeer/repos",
			"following_url":"https://api.github.com/users/lukeer/following{/other_user}",
			"starred_url":"https://api.github.com/users/lukeer/starred{/owner}{/repo}",
			"login":"lukeer",
			"followers_url":"https://api.github.com/users/lukeer/followers",
			"type":"User",
			"url":"https://api.github.com/users/lukeer",
			"subscriptions_url":"https://api.github.com/users/lukeer/subscriptions",
			"received_events_url":"https://api.github.com/users/lukeer/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/6143039?v=4",
			"events_url":"https://api.github.com/users/lukeer/events{/privacy}",
			"html_url":"https://github.com/lukeer",
			"site_admin":false,
			"id":6143039,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjYxNDMwMzk=",
			"organizations_url":"https://api.github.com/users/lukeer/orgs"
		},
		"node_id":"I_kwDOAAiDnM5FTuIt"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-02-27T16:32:47Z",
		"title":"Socket.io connects and disconnects only for some clients resulting in package lost / unreliability ",
		"body":"**Describe the bug**\r\nA clear and concise description of what the bug is.\r\nWe have an nodejs websocket server with 3k+ concurrent connections.  A few segment of clients disconnect and reconnect every few seconds/minutes. \r\n\r\nWe trigger the connection by joining to a room. \r\n```\r\n        roomsOnline.add(socket.handshake.query.roomId);\r\n        socket.join(socket.handshake.query.roomId);\r\n```\r\n\r\nWe use AWS ELB and their support says the load balancer has no problem. \r\n\r\n<img width=\"715\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10217999/155890623-ad50be1a-88ba-4984-a2cc-8eeb3b0b0708.png\">\r\n\r\n\r\nOn my machine i stay connected with the exact same roomId.\r\n\r\nHowever his connection on the server end looks like this where it disconnects and reconnects. When we try to send the client a message using` io.to(roomId).emit()` it will only few of the messages instead of every message emitted\r\n\r\n<img width=\"613\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10217999/155890482-73f89e2e-8dfa-455c-b1e2-7e70b8c30afd.png\">\r\n\r\nOne of the clients that saw this behavior we tested with a different browser source from another websocket app and the messages work every time to his computer. The same client also had high speed spectrum internet. \r\n\r\n**To Reproduce**\r\n\r\nOur server settings - version 4.4.1\r\n```\r\n allowEIO3: true, // false by default\r\n    pingInterval: 9000,\r\n    pingTimeout: 15000,\r\n```\r\n\r\n*Server*\r\n\r\n\r\n```js\r\n\r\nconst server = process.env.USE_HTTPS\r\n    ? require(\"https\").createServer(\r\n          {\r\n              cert: fs.readFileSync(process.env.TLS_CERT),\r\n              key: fs.readFileSync(process.env.TLS_KEY),\r\n          },\r\n          app,\r\n      )\r\n    : require(\"http\").createServer(app);\r\n\r\nconst { Server } = require(\"socket.io\");\r\n\r\n// https://stackoverflow.com/questions/48648555/understanding-socket-io-ping-interval-timeout-settings\r\nconst io = new Server(server, {\r\n    // transports: [\"polling\", \"websocket\"],\r\n    allowEIO3: true, // false by default\r\n    pingInterval: 9000,\r\n    pingTimeout: 15000,\r\n\r\n    cors: {\r\n        origin: \"*\",\r\n        methods: [\r\n            \"GET\",\r\n            \"POST\",\r\n            \"OPTIONS\",\r\n            \"HEAD\",\r\n            \"PUT\",\r\n            \"PATCH\",\r\n            \"POST\",\r\n            \"DELETE\",\r\n        ],\r\n    },\r\n});\r\n```\r\n\r\nSocket.IO client version: `x.y.z`\r\n\r\n*Client*\r\n\r\n```js\r\n    <script src=\"/socket.io/socket.io.js\"></script>\r\n\r\n    let socket = io({\r\n          query: {\r\n            roomId: last_part\r\n          }\r\n        });\r\n\r\n```\r\n\r\n**Expected behavior**\r\nExpect all clients to stay connected \r\n\r\n**Platform:**\r\n - Device:\r\n -  CPU Name: AMD Ryzen 5 5600X 6-Core Processor             \r\nCPU Speed: 3700MHz\r\n - OS: Windows, Chrome/OBS\r\n \r\n**Additional context**\r\nI added a disconnect protocol which helped some clients that were international, but few clients still seeing this behavior\r\n\r\n```\r\nServer\r\nlet disconnectCheck = setInterval(() => {\r\n            socket\r\n                .timeout(16000)\r\n                .emit(\r\n                    \"heart_beat_check_server\",\r\n                    \"beating\",\r\n                    { running: new Date() },\r\n                    (err, payload) => {\r\n                        console.log(\r\n                            \"HEART_BEAT_PAYLOAD\",\r\n                            payload,\r\n                            socket.handshake.query.roomId,\r\n                        );\r\n                        if (\r\n                            err &&\r\n                            payload &&\r\n                            payload.version &&\r\n                            payload.version >= 3\r\n                        ) {\r\n                            // the client did not acknowledge the event in the given delay\r\n                            console.error(\r\n                                \"HEARTBEAT_ERROR_TIMEOUT\",\r\n                                socket.handshake.query.roomId,\r\n                            );\r\n                            socket.disconnect(true);\r\n                        } else {\r\n                        }\r\n                    },\r\n                );\r\n        }, 17000);\r\n\r\nClient\r\n   socket.on(\"heart_beat_check_server\",  (_, __, callback) => {\r\n            console.error(\"heart_beat_check_server_client\")\r\n            callback({ roomdId: last_part, version: browserVersion })\r\n        });\r\n\r\nsocket.on(\"disconnect\", (reason) => {\r\n          console.error(\"DISCONNECTED \", reason)\r\n          if (reason === \"io server disconnect\" || reason === \"io client disconnect\" || reason === \"ping timeout\") {\r\n            // the disconnection was initiated by the server, you need to reconnect manually\r\n            socket.connect();\r\n          }\r\n          // else the socket will automatically try to reconnect\r\n        });\r\n```\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4298/labels{/name}",
		"author_association":"NONE",
		"number":4298,
		"updated_at":"2022-08-05T05:36:33Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4298/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1153312592,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4298/timeline",
		"comments":11,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4298",
		"labels":[
			{
				"default":true,
				"color":"d876e3",
				"name":"question",
				"description":"Further information is requested",
				"id":2111669362,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/question",
				"node_id":"MDU6TGFiZWwyMTExNjY5MzYy"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4298/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4298",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4298/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/aaronkchsu/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/aaronkchsu/repos",
			"following_url":"https://api.github.com/users/aaronkchsu/following{/other_user}",
			"starred_url":"https://api.github.com/users/aaronkchsu/starred{/owner}{/repo}",
			"login":"aaronkchsu",
			"followers_url":"https://api.github.com/users/aaronkchsu/followers",
			"type":"User",
			"url":"https://api.github.com/users/aaronkchsu",
			"subscriptions_url":"https://api.github.com/users/aaronkchsu/subscriptions",
			"received_events_url":"https://api.github.com/users/aaronkchsu/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/10217999?v=4",
			"events_url":"https://api.github.com/users/aaronkchsu/events{/privacy}",
			"html_url":"https://github.com/aaronkchsu",
			"site_admin":false,
			"id":10217999,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjEwMjE3OTk5",
			"organizations_url":"https://api.github.com/users/aaronkchsu/orgs"
		},
		"node_id":"I_kwDOAAiDnM5EvidQ"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-02-23T21:27:59Z",
		"title":"Client script won't server to iOS 14 device",
		"body":"I have an iPhone X (the only apple device I have for testing).  It has iOS 14.4.  When trying to serve the client script to it (from socket.io server), it gets a 404 error.  If I serve the client script manually from another server it loads fine but won't connect to the socket server.  My setup fully works on Windows and Android devices.  So it seems like it's somehow detecting that something won't work with that device, but I'm not sure what.  As far as I can tell it should be supported.  \r\n\r\nNot too long ago I upgraded from socket.IO v2 to v4.  I'm not sure, but I _think_ that it was working when on v2.  Either way, I didn't change much in the config.  I'm curious if there are any known issues, or \"gotchyas\" I'm not aware of.  Thanks.  ",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4290/labels{/name}",
		"author_association":"NONE",
		"number":4290,
		"updated_at":"2022-02-23T21:27:59Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4290/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1148598700,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4290/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4290",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4290/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4290",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4290/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/noyearzero/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/noyearzero/repos",
			"following_url":"https://api.github.com/users/noyearzero/following{/other_user}",
			"starred_url":"https://api.github.com/users/noyearzero/starred{/owner}{/repo}",
			"login":"noyearzero",
			"followers_url":"https://api.github.com/users/noyearzero/followers",
			"type":"User",
			"url":"https://api.github.com/users/noyearzero",
			"subscriptions_url":"https://api.github.com/users/noyearzero/subscriptions",
			"received_events_url":"https://api.github.com/users/noyearzero/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/2496224?v=4",
			"events_url":"https://api.github.com/users/noyearzero/events{/privacy}",
			"html_url":"https://github.com/noyearzero",
			"site_admin":false,
			"id":2496224,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI0OTYyMjQ=",
			"organizations_url":"https://api.github.com/users/noyearzero/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Edjms"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-02-16T07:02:07Z",
		"title":"Add data as \"sidecar\" to heartbeat events",
		"body":"I need to have some sidecar data that is sent along the heartbeat events. (Why I do this: Without doing this, I need to send those data as one single event, and it will cost much more resources for the server). However, it seems that currently the heartbeat cannot be customized, neither can I add some sidecar data to it.\r\n\r\nThanks for any suggestions!",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4282/labels{/name}",
		"author_association":"NONE",
		"number":4282,
		"updated_at":"2022-02-17T06:03:08Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4282/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1139616744,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4282/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4282",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4282/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4282",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4282/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/fzyzcjy/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/fzyzcjy/repos",
			"following_url":"https://api.github.com/users/fzyzcjy/following{/other_user}",
			"starred_url":"https://api.github.com/users/fzyzcjy/starred{/owner}{/repo}",
			"login":"fzyzcjy",
			"followers_url":"https://api.github.com/users/fzyzcjy/followers",
			"type":"User",
			"url":"https://api.github.com/users/fzyzcjy",
			"subscriptions_url":"https://api.github.com/users/fzyzcjy/subscriptions",
			"received_events_url":"https://api.github.com/users/fzyzcjy/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/5236035?v=4",
			"events_url":"https://api.github.com/users/fzyzcjy/events{/privacy}",
			"html_url":"https://github.com/fzyzcjy",
			"site_admin":false,
			"id":5236035,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjUyMzYwMzU=",
			"organizations_url":"https://api.github.com/users/fzyzcjy/orgs"
		},
		"node_id":"I_kwDOAAiDnM5D7Svo"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-01-26T06:40:22Z",
		"title":"ios 15.1.1 safari Unable to link",
		"body":"Error {type: \"TransportError\", description...\r\ndescription: Event {isTrusted: true}\r\nisTrusted: true\r\n__proto__: Event {type: (...), target: (...), current...\r\ntype: \"TransportError\"\r\ncolumn: 22\r\nline: 64\r\nmessage: \"websocket error\"\r\nstack: \"@\\n@\\nclose@[native code]\\n@\\n@\\n@\\nclose@\\n@\\n@\"\r\n__proto__: Error {}\r\n\r\nWebSocket connection to 'wss://..../socket.io/?type=a&hash=b&EIO=3&transport=websocket' failed: WebSocket is closed before the connection is established.\r\n\r\n\"socket.io-client\": \"^2.3.0\",\r\n\r\nIos14 can link normally\r\nAndroid is also all normal\r\nPlease tell me what to do\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4263/labels{/name}",
		"author_association":"NONE",
		"number":4263,
		"updated_at":"2022-06-19T08:01:40Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4263/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1114681515,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4263/timeline",
		"comments":11,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4263",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4263/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4263",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4263/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/sandywk/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/sandywk/repos",
			"following_url":"https://api.github.com/users/sandywk/following{/other_user}",
			"starred_url":"https://api.github.com/users/sandywk/starred{/owner}{/repo}",
			"login":"sandywk",
			"followers_url":"https://api.github.com/users/sandywk/followers",
			"type":"User",
			"url":"https://api.github.com/users/sandywk",
			"subscriptions_url":"https://api.github.com/users/sandywk/subscriptions",
			"received_events_url":"https://api.github.com/users/sandywk/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/11438563?v=4",
			"events_url":"https://api.github.com/users/sandywk/events{/privacy}",
			"html_url":"https://github.com/sandywk",
			"site_admin":false,
			"id":11438563,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjExNDM4NTYz",
			"organizations_url":"https://api.github.com/users/sandywk/orgs"
		},
		"node_id":"I_kwDOAAiDnM5CcLCr"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-01-18T05:49:18Z",
		"title":"Custom serverside emit Event callback not working - intermittent",
		"body":"**Describe the bug**\r\nCustom serverside emit Event callback not working intermittently. Sometimes the event is captured and sometimes it isnt. \r\n\r\n**To Reproduce**\r\nUse Server Side Emit for a custom event by passing a callback. Event isnt captured always. Without callback - using simple values works fine.\r\n\r\nSocket.IO server version: `^4.1.3`\r\n\r\n*Server*\r\n\r\n```js\r\nthis.io = socketIO(server, {\r\n    maxHttpBufferSize: 1000000000,\r\n    connectTimeout: 5000,\r\n    transports: ['websocket'],\r\n    pingInterval: 25 * 1000,\r\n    pingTimeout: 10000,\r\n    allowEIO3: true,\r\n    cors: {\r\n        origin: \"*\",\r\n        methods: [\"GET\", \"POST\"],\r\n    }\r\n});\r\n\r\nconst pubClient = createClient({\r\n    url: process.env.REDIS\r\n});\r\nconst subClient = pubClient.duplicate();\r\nconst self = this;\r\nPromise.all([pubClient.connect(), subClient.connect()]).then(() => {\r\n    self.io.adapter(createAdapter(pubClient, subClient));\r\n    console.log(\"PUBSUB REDIS CONNECTED!!\");\r\n\r\n    console.log(\"Created socket server. Waiting for client connection.\");\r\n    self.io.on(\"ping\",  (cb) => {\r\n        console.log(\"ping received\");\r\n        cb(process.env.INSTANCEID);\r\n    });\r\n    \r\n    self.io.on(\"connection\", socket => {\r\n        ...\r\n\r\n        socket.on(\"message\", (topic, message, callback) => {\r\n            ...\r\n        });\r\n\r\n        socket.on(\"disconnecting\", () => {\r\n            ...\r\n        });\r\n        \r\n\r\n        socket.on(\"disconnect\", async () => {\r\n\r\n            ...\r\n        });\r\n    }\r\n\r\n    setInterval(() => {\r\n        self.io.serverSideEmit(\"ping\", (err, responses) => {\r\n            console.log(\"PONG RESPONSE\", responses[0], err); // prints \"pong\"\r\n            console.log(\"r1\", responses[0], err); // prints \"pong\"\r\n            console.log(\"r2\", responses[1], err);\r\n            if(!responses[0]) return;\r\n        });\r\n    }, 10000)\r\n```\r\n\r\n**Expected behavior**\r\nevent should be captured every time whenever called.\r\n\r\n**Platform:**\r\n - Device: [e.g. Macbook pro max]\r\n - OS: [e.g. MacOS Monterey]\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4254/labels{/name}",
		"author_association":"NONE",
		"number":4254,
		"updated_at":"2022-01-18T05:49:18Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4254/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1106502711,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4254/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4254",
		"labels":[
			{
				"default":false,
				"color":"FFD700",
				"name":"to triage",
				"description":"Waiting to be triaged by a member of the team",
				"id":2986024035,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
				"node_id":"MDU6TGFiZWwyOTg2MDI0MDM1"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4254/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4254",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4254/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Driviz/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Driviz/repos",
			"following_url":"https://api.github.com/users/Driviz/following{/other_user}",
			"starred_url":"https://api.github.com/users/Driviz/starred{/owner}{/repo}",
			"login":"Driviz",
			"followers_url":"https://api.github.com/users/Driviz/followers",
			"type":"User",
			"url":"https://api.github.com/users/Driviz",
			"subscriptions_url":"https://api.github.com/users/Driviz/subscriptions",
			"received_events_url":"https://api.github.com/users/Driviz/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/33776983?v=4",
			"events_url":"https://api.github.com/users/Driviz/events{/privacy}",
			"html_url":"https://github.com/Driviz",
			"site_admin":false,
			"id":33776983,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjMzNzc2OTgz",
			"organizations_url":"https://api.github.com/users/Driviz/orgs"
		},
		"node_id":"I_kwDOAAiDnM5B8-Q3"
	},
	{
		"assignees":[
			
		],
		"created_at":"2022-01-04T19:13:14Z",
		"title":"use() middleware is not triggered ",
		"body":"**Describe the bug**\r\n`of(/./).use()` middleware is not triggered ~when using eiows.Server~ apparently also if we dont use the eiows.Server module it still shows the same behavior\r\n\r\n**To Reproduce**\r\nWe need three files, 1 server 2 client.\r\nLaunch the server with `nodemon server.js` and open `localhost:5656/1` and `localhost:5656/2`\r\nNow both tabs should be connected to the socket io instance and in the terminal where the server was launched there would be printed\r\n```\r\n/admins slug __next__\r\n/clients slug __next__\r\n```\r\n\r\nPut the terminal with `nodemon` on one side and the `localhost:5656/2` tab on the other side with the devtools console open\r\nSave the file `server.js` with no changes and nodemon should restart the server, now in the console you will see only\r\n```\r\n/admins slug __next__\r\n```\r\n\r\nNow even if you reload the `localhost:5656/2` page the console.log would still not work.\r\n\r\n\r\nNOTE: Sometime it may work, so try to save again it takes some tries. I found that the best way to reproduce is to look at the devtools console and spam `ctrl+s` on the `server.js` file so that nodemon keeps restarting the server until the `localhost:5656/2` devtools console throws an error saying ws connection cannot be made. When you see the error let the server start and the error should appear\r\n\r\nSocket.IO server version: `4.4.0`\r\n*Server*\r\n\r\n```js\r\nconst express = require('express');\r\nconst http = require('http');\r\nconst { Server } = require(\"socket.io\");\r\nconst eiows = require('eiows');\r\n\r\nconst app = express();\r\nconst server = http.createServer(app);\r\n\r\napp.get('/1', (req, res) => {\r\n  res.sendFile(__dirname + '/broken_socket.html');\r\n});\r\napp.get('/2', (req, res) => {\r\n  res.sendFile(__dirname + '/broken_socket2.html');\r\n});\r\n\r\nconst io = new Server(server, {\r\n\tpath: '/socket',\r\n\tserveClient: false,\r\n\twsEngine: eiows.Server,\r\n});\r\n\r\nio.of(/./).use(async (socket, next) => {\r\n\tsocket.join(socket.handshake.auth.slug);\r\n\tio.of('/clients').to(socket.handshake.auth.slug).emit('6', {namespace: socket.nsp.name});\r\n\tconsole.log(socket.nsp.name, socket.handshake.auth.slug, '__next__');\r\n\tnext();\r\n});\r\n\r\nserver.listen(5656, () => {\r\n  console.log('listening on *:5656');\r\n});\r\n```\r\n\r\nSocket.IO client version: `4.4.0`\r\n\r\n*Client 1*\r\n\r\n```html\r\n<script src=\"https://cdn.socket.io/4.4.0/socket.io.min.js\" integrity=\"sha384-1fOn6VtTq3PWwfsOrk45LnYcGosJwzMHv+Xh/Jx5303FVOXzEnw0EpLv30mtjmlj\" crossorigin=\"anonymous\"></script>\r\n<script>\r\n\tio('http://127.0.0.1:5656' + '/admins', {\r\n\t\tpath: '/socket',\r\n\t\ttransports: ['websocket'],\r\n\t\tauth: { slug: 'slug', token: 'token' },\r\n\t});\r\n</script>\r\n```\r\n\r\n*Client 2*\r\n```html\r\n<script src=\"https://cdn.socket.io/4.4.0/socket.io.min.js\" integrity=\"sha384-1fOn6VtTq3PWwfsOrk45LnYcGosJwzMHv+Xh/Jx5303FVOXzEnw0EpLv30mtjmlj\" crossorigin=\"anonymous\"></script>\r\n<script>\r\n\tio('http://127.0.0.1:5656' + '/clients', {\r\n\t\tpath: '/socket',\r\n\t\ttransports: ['websocket'],\r\n\t\tauth: { slug: 'slug', token: 'token' },\r\n\t});\r\n</script>\r\n```\r\n\r\n**Expected behavior**\r\nThe use() callback that contains the console.log should always be triggered but it is not\r\n\r\n**Additional context**\r\nPlease note that the error is caused by this line during the middleware:\r\n`io.of('/clients').to(socket.handshake.auth.slug).emit('6', {namespace: socket.nsp.name});`\r\nwe target `/clients` in this call, the same namespace that is not logged in the console.log",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4237/labels{/name}",
		"author_association":"NONE",
		"number":4237,
		"updated_at":"2022-03-21T21:09:48Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4237/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1093675888,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4237/timeline",
		"comments":3,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4237",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4237/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4237",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4237/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/SStoliarchuk/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/SStoliarchuk/repos",
			"following_url":"https://api.github.com/users/SStoliarchuk/following{/other_user}",
			"starred_url":"https://api.github.com/users/SStoliarchuk/starred{/owner}{/repo}",
			"login":"SStoliarchuk",
			"followers_url":"https://api.github.com/users/SStoliarchuk/followers",
			"type":"User",
			"url":"https://api.github.com/users/SStoliarchuk",
			"subscriptions_url":"https://api.github.com/users/SStoliarchuk/subscriptions",
			"received_events_url":"https://api.github.com/users/SStoliarchuk/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/43220898?v=4",
			"events_url":"https://api.github.com/users/SStoliarchuk/events{/privacy}",
			"html_url":"https://github.com/SStoliarchuk",
			"site_admin":false,
			"id":43220898,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQzMjIwODk4",
			"organizations_url":"https://api.github.com/users/SStoliarchuk/orgs"
		},
		"node_id":"I_kwDOAAiDnM5BMCtw"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-12-17T09:47:27Z",
		"title":"“transport disconnect close” when use socketio&socketio-redisadapter,nginx ingress in k3s",
		"body":"this is error report\r\n![image](https://user-images.githubusercontent.com/22185629/146523868-a6e292c0-eeae-4afd-bfb3-06db8dbcc5ce.png)\r\nthis is my ingress config\r\n\r\n> apiVersion: networking.k8s.io/v1\r\nkind: Ingress\r\nmetadata:\r\n  name: CI_PROJECT_NAME\r\n  annotations:\r\n    kubernetes.io/ingress.class: \"nginx\"\r\n    #nginx.ingress.kubernetes.io/ssl-redirect: \"true\"\r\n    #nginx.ingress.kubernetes.io/force-ssl-redirect: \"true\"\r\n    #nginx.ingress.kubernetes.io/use-regex: \"true\"\r\n    #nginx.ingress.kubernetes.io/proxy-body-size: 100m\r\n    # ip hash\r\n    nginx.ingress.kubernetes.io/upstream-hash-by: \"$http_x_forwarded_for\"\r\nspec:\r\n  tls:\r\n    - hosts:\r\n        - HOST_URL\r\n      secretName: cluster-holyyun-tls\r\n  rules:\r\n    - host: HOST_URL\r\n      http:\r\n        paths:\r\n          - path: /\r\n            pathType: Prefix\r\n            backend:\r\n              service:\r\n                name: CI_PROJECT_NAME\r\n                port:\r\n                  number: 3000\r\n\r\nIt`s worked sometimes,but when the client connected a span，this error happen。\r\nthis is my client&server config\r\n\r\n> socket = io(socketUrl + data.data.namespace, { query: { token: data.data.token, userId: userId }, transports: [\"polling\", \"websocket\"] })\r\n\r\n> io.adapter(createAdapter(pubClient, subClient));",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4219/labels{/name}",
		"author_association":"NONE",
		"number":4219,
		"updated_at":"2022-01-03T08:03:33Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4219/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1083070774,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4219/timeline",
		"comments":3,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4219",
		"labels":[
			{
				"default":true,
				"color":"DDDDDD",
				"name":"documentation",
				"description":"Improvements or additions to documentation",
				"id":206558,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/documentation",
				"node_id":"MDU6TGFiZWwyMDY1NTg="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4219/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4219",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4219/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/HOLYYUN/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/HOLYYUN/repos",
			"following_url":"https://api.github.com/users/HOLYYUN/following{/other_user}",
			"starred_url":"https://api.github.com/users/HOLYYUN/starred{/owner}{/repo}",
			"login":"HOLYYUN",
			"followers_url":"https://api.github.com/users/HOLYYUN/followers",
			"type":"User",
			"url":"https://api.github.com/users/HOLYYUN",
			"subscriptions_url":"https://api.github.com/users/HOLYYUN/subscriptions",
			"received_events_url":"https://api.github.com/users/HOLYYUN/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/22185629?v=4",
			"events_url":"https://api.github.com/users/HOLYYUN/events{/privacy}",
			"html_url":"https://github.com/HOLYYUN",
			"site_admin":false,
			"id":22185629,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjIyMTg1NjI5",
			"organizations_url":"https://api.github.com/users/HOLYYUN/orgs"
		},
		"node_id":"I_kwDOAAiDnM5Ajlk2"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-11-27T06:08:24Z",
		"title":"nextjs sample ts",
		"body":"**Is your feature request related to a problem? Please describe.**\r\nhttps://github.com/koreanwglasses/next-with-sockets\r\n\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4187/labels{/name}",
		"author_association":"NONE",
		"number":4187,
		"updated_at":"2021-11-27T06:08:24Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4187/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1064914669,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4187/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4187",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4187/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4187",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":1,
			"+1":1,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4187/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/johndpope/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/johndpope/repos",
			"following_url":"https://api.github.com/users/johndpope/following{/other_user}",
			"starred_url":"https://api.github.com/users/johndpope/starred{/owner}{/repo}",
			"login":"johndpope",
			"followers_url":"https://api.github.com/users/johndpope/followers",
			"type":"User",
			"url":"https://api.github.com/users/johndpope",
			"subscriptions_url":"https://api.github.com/users/johndpope/subscriptions",
			"received_events_url":"https://api.github.com/users/johndpope/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/289994?v=4",
			"events_url":"https://api.github.com/users/johndpope/events{/privacy}",
			"html_url":"https://github.com/johndpope",
			"site_admin":false,
			"id":289994,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI4OTk5NA==",
			"organizations_url":"https://api.github.com/users/johndpope/orgs"
		},
		"node_id":"I_kwDOAAiDnM4_eU7t"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-11-18T14:34:10Z",
		"title":"Add `socket.request()` as promise wrapper around callbacks",
		"body":"I noticed that in the 4.4.0 release, a `timeout` flag was added:\r\n```js\r\nsocket.timeout(5000).emit(\"my-event\", (err) => {\r\n  if (err) {\r\n    // the client did not acknowledge the event in the given delay\r\n  }\r\n});\r\n```\r\nInterestingly I implemented similar logic in an application of mine by patching client-side sockets, but I combined it with promises as well. Something like\r\n```js\r\nawait socket.request('event', 'some data');\r\n```\r\nwhere the promise times out after a fixed amount of time if the server did not acknowledge.\r\n\r\nAs a result, I was wondering whether it would a nice feature to add to the library as well. The api would look something like\r\n```js\r\n// Awaits indefinitely for a server response\r\nawait socket.request('event', 'some data');\r\n\r\n// Times out after 5 seconds\r\nawait socket.timeout(5e3).request('event', 'some data');\r\n```\r\n\r\nThis could be accompanied by a `reply()` and `replyAny()` method as well of course, which looks something like this and hence hides the callbacks from the user alltogether:\r\n```js\r\nsocket.reply('event', async (data) => {\r\n  return res.toJSON();\r\n});\r\nsocket.reply('event', async (...data) => {\r\n  throw new Error('Something went wrong');\r\n});\r\nsocket.replyAny(async (event, ...data) => {\r\n  return res.toJSON();\r\n});\r\n```\r\n\r\nAdditionally I think it might be useful to have a way of resurrecting errors as well, but I'm not sure how the api can look like. Perhaps something like\r\n```js\r\nsocket.errorBuilder(json => buildCustomErrorFromJSON(json));\r\n```\r\nor\r\n```js\r\nio.errorBuilder(json => buildCustomErrorFromJSON(json));\r\n```\r\nwhere `socket.errorBuilder` can be used to override for that socket.\r\n\r\nAs always, I'd be happy to create a PR for this should you decide that it is a feature that is desirable to have in the library. In my opinion it fits nicely in the trend that callbacks are more and more being replaced by promises.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4175/labels{/name}",
		"author_association":"CONTRIBUTOR",
		"number":4175,
		"updated_at":"2022-11-28T06:04:09Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4175/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1057427941,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4175/timeline",
		"comments":5,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4175",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4175/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4175",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":4,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4175/reactions",
			"laugh":0,
			"heart":4
		},
		"user":{
			"gists_url":"https://api.github.com/users/sebamarynissen/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/sebamarynissen/repos",
			"following_url":"https://api.github.com/users/sebamarynissen/following{/other_user}",
			"starred_url":"https://api.github.com/users/sebamarynissen/starred{/owner}{/repo}",
			"login":"sebamarynissen",
			"followers_url":"https://api.github.com/users/sebamarynissen/followers",
			"type":"User",
			"url":"https://api.github.com/users/sebamarynissen",
			"subscriptions_url":"https://api.github.com/users/sebamarynissen/subscriptions",
			"received_events_url":"https://api.github.com/users/sebamarynissen/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/5273819?v=4",
			"events_url":"https://api.github.com/users/sebamarynissen/events{/privacy}",
			"html_url":"https://github.com/sebamarynissen",
			"site_admin":false,
			"id":5273819,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjUyNzM4MTk=",
			"organizations_url":"https://api.github.com/users/sebamarynissen/orgs"
		},
		"node_id":"I_kwDOAAiDnM4_BxHl"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-11-11T15:28:58Z",
		"title":"Event listeners on dynamic namespaces break when server emits on matching custom namespace before client connects",
		"body":"**Describe the bug**\r\n\r\n*Generic description*\r\nWhen a server emits an event on a custom namespace before any client has connected to that namespace, event listeners on a dynamic namespace that matches the custom namespace will not work. When a client connects to the custom namespace after an event has been emitted on it, the event listeners of the matching dynamic namespace will not trigger.\r\n\r\n*Our concrete use case*\r\nWe have a setup where we have a node cluster with multiple workers. Each worker is both used to communicate with clients using socket.io websockets and to run long running jobs on the background and emit progress about these jobs. The setup uses the Redis adapter to let socket.io communicate between workers.\r\n\r\nWe setup the \"connect\" event listeners on the serverside with a dynamic namespace, lets say `/^\\/dynamic-\\d+$/`. Then, when a worker starts on a job it will start emitting on namespace `dynamic-7` for instance.\r\n\r\nWe have experienced that the event listeners on the dynamic namespace do not work anymore for a particular worker when that worker starts emitting on a matching custom namespace before any client connects to the worker with the same custom namespace.\r\n\r\nSo, this works:\r\n\r\n1. Worker starts and initiates socket.io setup and adds listener to dynamic namespace `/^\\/dynamic-\\d+$/`\r\n2. Clients connects to custom namespace `/dynamic-7`\r\n3. Same worker starts working on long running job and emits on custom namespace `/dynamic-7`\r\n4. Client receives updates\r\n\r\nBut this doesn't:\r\n\r\n1. Worker starts and initiates socket.io setup and adds listener to dynamic namespace `/^\\/dynamic-\\d+$/`\r\n2. Same worker starts working on long running job and emits on custom namespace `/dynamic-7`\r\n3. Clients connects to custom namespace `/dynamic-7`\r\n4. Client doesn't receive updates\r\n\r\n**To Reproduce**\r\n\r\nBe sure to start the server script before starting the client script.\r\n\r\nSocket.IO server version: `4.3.2`\r\n\r\n*Server*\r\n\r\n```js\r\nconst socketio = require(\"socket.io\");\r\n\r\nconst io = new socketio.Server(3000, {});\r\n\r\nio.of(/^\\/dynamic-\\d+$/).on(\"connection\", (socket) => {\r\n  // we only get here if the bottom line is commented out, otherwise this listener is never triggered\r\n  console.log(`connected with ${socket.id} based on dynamic namespace`);\r\n\r\n  io.of(\"/dynamic-1\").emit(\"some_event\", {\"foo\": \"bar\"});\r\n});\r\n\r\n// this initial emit causes the bug. comment out this line to see the expected behavior\r\nio.of(\"/dynamic-1\").emit(\"some_event\", {\"foo\": \"bar\"});\r\n```\r\n\r\nSocket.IO client version: `4.3.2`\r\n\r\n*Client*\r\n\r\n```js\r\nconst socketio = require(\"socket.io-client\");\r\n\r\nconst socket = socketio.io(\"ws://localhost:3000/dynamic-1\", {});\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(`connected with id ${socket.id}`);\r\n});\r\n\r\n// we will only receive this event if the server doesn't emit before we connect\r\nsocket.on(\"some_event\", (data) => {\r\n  console.log(\"received event:\", data);\r\n});\r\n```\r\n\r\n**Expected behavior**\r\nI would expect the server to be able to start emitting events on a custom namespace that matches a dynamic namespace, even if no client has yet connected to that namespace.\r\n\r\n**Platform:**\r\n - Device: Chrome\r\n - OS: Ubuntu\r\n\r\n**Additional context**\r\nNote that for us the cluster setup caused the bug to arise, but it is not necessary as the reproduction example demonstrates.\r\n\r\nOur current workaround is to execute `io._checkNamespace(\"/dynamic-1\", {}, () => {})` before we execute the first emit. This ensures that the custom namespace is added to the dynamic namespace and the event listeners of the dynamic namespace are copied to the custom namespace.\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4164/labels{/name}",
		"author_association":"NONE",
		"number":4164,
		"updated_at":"2022-10-04T09:21:26Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4164/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1051097805,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4164/timeline",
		"comments":8,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4164",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4164/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4164",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":4,
			"+1":4,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4164/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/thombohlk/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/thombohlk/repos",
			"following_url":"https://api.github.com/users/thombohlk/following{/other_user}",
			"starred_url":"https://api.github.com/users/thombohlk/starred{/owner}{/repo}",
			"login":"thombohlk",
			"followers_url":"https://api.github.com/users/thombohlk/followers",
			"type":"User",
			"url":"https://api.github.com/users/thombohlk",
			"subscriptions_url":"https://api.github.com/users/thombohlk/subscriptions",
			"received_events_url":"https://api.github.com/users/thombohlk/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/3005907?v=4",
			"events_url":"https://api.github.com/users/thombohlk/events{/privacy}",
			"html_url":"https://github.com/thombohlk",
			"site_admin":false,
			"id":3005907,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjMwMDU5MDc=",
			"organizations_url":"https://api.github.com/users/thombohlk/orgs"
		},
		"node_id":"I_kwDOAAiDnM4-pnrN"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-10-21T09:43:36Z",
		"title":"TypeScript error TS2339 Property 'remoteJoin' does not exist on type 'Adapter'.",
		"body":"**Describe the bug**\r\nType error related to @socket.io/redis-adapter. remoteJoin or any other method of the  redis adapter package throws a TS error.\r\n```\r\nerror TS2339: Property 'remoteJoin' does not exist on type '{ (): AdapterConstructor | undefined; \r\n(v: AdapterConstructor): Server<DefaultEventsMap, DefaultEventsMap, DefaultEventsMap>; }'.\r\n\r\n94           fastify.io.adapter.remoteJoin(\r\n```\r\n\r\nThere is a small possibility that i just don't know how to make types match when this kind of internal related parts of the project is changed (like extending default adapter with a custom adapter) but I was using the same setup for JS project and there was no problem related to functionality. So I am thinking it's just my insufficient knowledge of TS, but i wanted to post an issue anyway\r\n\r\n**To Reproduce**\r\nThe same type error can be reproduced with this small project that i made: https://github.com/outranker/socket.io-redist-adapter-type-error-reproduce\r\n\r\nTo run the project, first `npm run watch` in the terminal and open new terminal and type `npm run start`\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4132/labels{/name}",
		"author_association":"NONE",
		"number":4132,
		"updated_at":"2022-01-03T08:08:09Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4132/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1032280361,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4132/timeline",
		"comments":7,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4132",
		"labels":[
			{
				"default":true,
				"color":"DDDDDD",
				"name":"documentation",
				"description":"Improvements or additions to documentation",
				"id":206558,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/documentation",
				"node_id":"MDU6TGFiZWwyMDY1NTg="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4132/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4132",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4132/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/outranker/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/outranker/repos",
			"following_url":"https://api.github.com/users/outranker/following{/other_user}",
			"starred_url":"https://api.github.com/users/outranker/starred{/owner}{/repo}",
			"login":"outranker",
			"followers_url":"https://api.github.com/users/outranker/followers",
			"type":"User",
			"url":"https://api.github.com/users/outranker",
			"subscriptions_url":"https://api.github.com/users/outranker/subscriptions",
			"received_events_url":"https://api.github.com/users/outranker/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/20103472?v=4",
			"events_url":"https://api.github.com/users/outranker/events{/privacy}",
			"html_url":"https://github.com/outranker",
			"site_admin":false,
			"id":20103472,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjIwMTAzNDcy",
			"organizations_url":"https://api.github.com/users/outranker/orgs"
		},
		"node_id":"I_kwDOAAiDnM49h1kp"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-10-16T20:05:58Z",
		"title":"Disconnect handler not executed if connection drops during middleware execution",
		"body":"**Describe the bug**\r\nIf I use a middleware (e.g. for authentication) I cannot handle a client disconnect because\r\n1. `disconnect` event-handler does not get executed\r\n2. `socket.connected` won't update properly (from `true` to `false`)\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version: `4.2.0`\r\n\r\n*Server*\r\n\r\n```js\r\nimport { Server } from \"socket.io\";\r\n\r\nconst io = new Server(3000, {});\r\n\r\nio.use(async (socket, next) => {\r\n    console.log(`middleware`, socket.id);\r\n\r\n    // bug 1: disconnect handler will never execute\r\n    socket.on(\"disconnect\", () => {\r\n      console.log(`disconnect ${socket.id}`);\r\n    });\r\n    \r\n    // long running async operation\r\n    // client will disconnect before operation has finished\r\n    await new Promise(resolve => setTimeout(resolve, 3000));\r\n\r\n    // bug 2: connected state is still true\r\n    console.log(`still connected: ${socket.connected}`);\r\n\r\n    next();\r\n});\r\n\r\nio.on(\"connection\", (socket) => {\r\n    console.log(`connect ${socket.id}`);\r\n});\r\n```\r\n\r\nSocket.IO client version: `4`\r\n\r\n*Client*\r\n\r\n```js\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"ws://localhost:3000/\", {});\r\n// force disconnect before long running operation has finished\r\nsetTimeout(window.location.reload, 1000);\r\n```\r\n\r\n**Expected behavior**\r\n`socket.connected` will update properly and `disconnect` event-handler will run\r\n\r\n**Platform:**\r\nnode.js 16 on macOS\r\n\r\n**Additional context**\r\nThe workaround to the problem is: don't trigger side-effects in middleware and always add custom properties to the socket object to transfer information over to `connection` event-handler\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4129/labels{/name}",
		"author_association":"NONE",
		"number":4129,
		"updated_at":"2021-10-21T17:38:32Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4129/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1028137115,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4129/timeline",
		"comments":7,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4129",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4129/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4129",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4129/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/adroste/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/adroste/repos",
			"following_url":"https://api.github.com/users/adroste/following{/other_user}",
			"starred_url":"https://api.github.com/users/adroste/starred{/owner}{/repo}",
			"login":"adroste",
			"followers_url":"https://api.github.com/users/adroste/followers",
			"type":"User",
			"url":"https://api.github.com/users/adroste",
			"subscriptions_url":"https://api.github.com/users/adroste/subscriptions",
			"received_events_url":"https://api.github.com/users/adroste/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/18649298?v=4",
			"events_url":"https://api.github.com/users/adroste/events{/privacy}",
			"html_url":"https://github.com/adroste",
			"site_admin":false,
			"id":18649298,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE4NjQ5Mjk4",
			"organizations_url":"https://api.github.com/users/adroste/orgs"
		},
		"node_id":"I_kwDOAAiDnM49SCCb"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-09-29T03:33:16Z",
		"title":"webrtc",
		"body":" Will webrtc support be added in the future?",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4107/labels{/name}",
		"author_association":"NONE",
		"number":4107,
		"updated_at":"2021-09-29T06:40:05Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4107/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":1010443995,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4107/timeline",
		"comments":4,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4107",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4107/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4107",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4107/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/JACKJKL/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/JACKJKL/repos",
			"following_url":"https://api.github.com/users/JACKJKL/following{/other_user}",
			"starred_url":"https://api.github.com/users/JACKJKL/starred{/owner}{/repo}",
			"login":"JACKJKL",
			"followers_url":"https://api.github.com/users/JACKJKL/followers",
			"type":"User",
			"url":"https://api.github.com/users/JACKJKL",
			"subscriptions_url":"https://api.github.com/users/JACKJKL/subscriptions",
			"received_events_url":"https://api.github.com/users/JACKJKL/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/20449848?v=4",
			"events_url":"https://api.github.com/users/JACKJKL/events{/privacy}",
			"html_url":"https://github.com/JACKJKL",
			"site_admin":false,
			"id":20449848,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjIwNDQ5ODQ4",
			"organizations_url":"https://api.github.com/users/JACKJKL/orgs"
		},
		"node_id":"I_kwDOAAiDnM48Oibb"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-09-07T10:25:26Z",
		"title":"Mouse movement path and drawing path are different upon scroll/resize.",
		"body":"### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nWhile drawing, the lines are drawn with respect to the browser window (using clientX. clientY). When the canvas is more or less than the browser window line drawn are not accurate and are far away from mouse movement. \r\n\r\nLets make canvas move down by 200px by adding css, canvas{margin-top:200px}\r\nnow the line drawn and the mouse movement will be 200px apart.\r\n\r\n### New behavior\r\nTo fix this we have to decrease the top offset from current.x and left offset from current.y. So that, even after scrolling the offsets are fixed and drawn line is exactly below the cursor.\r\n\r\n### Other information (e.g. related issues)\r\nNA\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4074/labels{/name}",
		"author_association":"NONE",
		"number":4074,
		"updated_at":"2021-11-19T16:46:19Z",
		"draft":false,
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4074/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":989833934,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4074/timeline",
		"pull_request":{
			"patch_url":"https://github.com/socketio/socket.io/pull/4074.patch",
			"html_url":"https://github.com/socketio/socket.io/pull/4074",
			"diff_url":"https://github.com/socketio/socket.io/pull/4074.diff",
			"url":"https://api.github.com/repos/socketio/socket.io/pulls/4074"
		},
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4074",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4074/events",
		"html_url":"https://github.com/socketio/socket.io/pull/4074",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4074/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/deepakpixel/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/deepakpixel/repos",
			"following_url":"https://api.github.com/users/deepakpixel/following{/other_user}",
			"starred_url":"https://api.github.com/users/deepakpixel/starred{/owner}{/repo}",
			"login":"deepakpixel",
			"followers_url":"https://api.github.com/users/deepakpixel/followers",
			"type":"User",
			"url":"https://api.github.com/users/deepakpixel",
			"subscriptions_url":"https://api.github.com/users/deepakpixel/subscriptions",
			"received_events_url":"https://api.github.com/users/deepakpixel/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/49981613?v=4",
			"events_url":"https://api.github.com/users/deepakpixel/events{/privacy}",
			"html_url":"https://github.com/deepakpixel",
			"site_admin":false,
			"id":49981613,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ5OTgxNjEz",
			"organizations_url":"https://api.github.com/users/deepakpixel/orgs"
		},
		"node_id":"MDExOlB1bGxSZXF1ZXN0NzI4NTEzNDQy"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-08-28T08:03:02Z",
		"title":"Problem closeOnBeforeunload",
		"body":"**Describe the bug**\r\nCustomer parameter closeOnBeforeunload by default it is true, should be false\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server and client version: `4.1.3`\r\n\r\nRead my post here https://github.com/socketio/socket.io/issues/4040#issuecomment-907566798\r\n\r\nWe would have to do a tutorial, for example a space \"_Optimize socket.io 4.x to behave like socket.io 2.x_\" and put the parameters like closeOnBeforeunload to false instead of true, and other things.\r\n\r\n\r\n**Platform:**\r\n - Device: Firefox 91.0.2\r\n - OS: Windows 7 (x64)\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4065/labels{/name}",
		"author_association":"NONE",
		"number":4065,
		"updated_at":"2021-08-28T08:03:02Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4065/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":981769500,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4065/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4065",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4065/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4065",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4065/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Madriix/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Madriix/repos",
			"following_url":"https://api.github.com/users/Madriix/following{/other_user}",
			"starred_url":"https://api.github.com/users/Madriix/starred{/owner}{/repo}",
			"login":"Madriix",
			"followers_url":"https://api.github.com/users/Madriix/followers",
			"type":"User",
			"url":"https://api.github.com/users/Madriix",
			"subscriptions_url":"https://api.github.com/users/Madriix/subscriptions",
			"received_events_url":"https://api.github.com/users/Madriix/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/9107640?v=4",
			"events_url":"https://api.github.com/users/Madriix/events{/privacy}",
			"html_url":"https://github.com/Madriix",
			"site_admin":false,
			"id":9107640,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjkxMDc2NDA=",
			"organizations_url":"https://api.github.com/users/Madriix/orgs"
		},
		"node_id":"MDU6SXNzdWU5ODE3Njk1MDA="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-08-24T07:14:07Z",
		"title":"Timeout error during handshake ambiguously reported as `websocket error`; stops re-connection attempts",
		"body":"## Describe the bug\r\n\r\n`connect_error` ambigously reported as `websocket error` if handshake times out (e.g. due to busy client).\r\n\r\nThis bug caused me quite some headache, since I did not even consider the possibility of a `timeout` problem.\r\n\r\nThis is the relevant stacktrace:\r\n\r\n```\r\nconnect_error: websocket error\r\n    at logCb (code\\common\\src\\log\\logger.js:232:17)\r\n    at logTrace (code\\common\\src\\log\\logger.js:124:5)\r\n    at Socket.<anonymous> (code\\runtime\\src\\client\\Client.js:114:18)\r\n    at Socket.Emitter.emit (code\\node_modules\\component-emitter\\index.js:145:1)\r\n    at Socket.emitReserved (code\\node_modules\\socket.io-client\\build\\typed-events.js:59:1)\r\n    at Socket.onerror (code\\node_modules\\socket.io-client\\build\\socket.js:177:1)\r\n    at Manager.Emitter.emit (code\\node_modules\\component-emitter\\index.js:145:1)\r\n    at Manager.emitReserved (code\\node_modules\\socket.io-client\\build\\typed-events.js:59:1)\r\n    at Socket.<anonymous> (code\\node_modules\\socket.io-client\\build\\manager.js:127:1)\r\n    at Socket.Emitter.emit (code\\node_modules\\component-emitter\\index.js:145:1)\r\n    at Socket.onError (code\\node_modules\\engine.io-client\\lib\\socket.js:594:1)\r\n    at WS.Emitter.emit (code\\node_modules\\component-emitter\\index.js:145:1)\r\n    at WS.onError (code\\node_modules\\engine.io-client\\lib\\transport.js:32:1)\r\n    at WebSocket.ws.onerror (code\\node_modules\\engine.io-client\\lib\\transports\\websocket.js:113:1)\r\n    at WebSocket.onError (code\\node_modules\\ws\\lib\\event-target.js:140:1)\r\n    at WebSocket.emit (node:events:394:28)\r\n    at null.abortHandshake (code\\node_modules\\ws\\lib\\websocket.js:731:1)\r\n    at WebSocket.close (code\\node_modules\\ws\\lib\\websocket.js:224:1)\r\n    at WS.doClose (code\\node_modules\\engine.io-client\\lib\\transports\\websocket.js:190:1)\r\n    at WS.close (code\\node_modules\\engine.io-client\\lib\\transport.js:57:1)\r\n    at Socket.onClose (code\\node_modules\\engine.io-client\\lib\\socket.js:619:1)\r\n    at null.close (code\\node_modules\\engine.io-client\\lib\\socket.js:548:1)\r\n    at Socket.close (code\\node_modules\\engine.io-client\\lib\\socket.js:579:1)\r\n    at Timeout.<anonymous> (code\\node_modules\\socket.io-client\\build\\manager.js:146:1)\r\n    at listOnTimeout (node:internal/timers:557:17)\r\n    at processTimers (node:internal/timers:500:7)\r\n```\r\n\r\nLooking at the frame third from the bottom `Timeout` ([source here](https://github.com/socketio/socket.io-client/blob/4.3.2/lib/manager.ts#L353)) reveals:\r\n\r\n```js\r\nconst timer = setTimeout(() => {\r\n  debug(\"connect attempt timed out after %d\", timeout);\r\n  openSubDestroy();\r\n  socket.close();  // this is the line that triggers the `connect_error`\r\n  socket.emit(\"error\", new Error(\"timeout\"));   // this `error` never gets reported\r\n}, timeout);\r\n```\r\n\r\n\r\n## To Reproduce\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version: `4+`\r\n\r\n*Server*\r\n\r\n```js\r\nimport { Server } from \"socket.io\";\r\n\r\nconst io = new Server(3000, {});\r\n\r\nio.on(\"connection\", (socket) => {\r\n  console.log(`connect ${socket.id}`);\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(`disconnect ${socket.id}`);\r\n  });\r\n});\r\n```\r\n\r\nSocket.IO client version: `4+`\r\n\r\n*Client*\r\n\r\nWARNING: This code contains a 20s busy loop.\r\n\r\n```js\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"ws://localhost:3000/\", {});\r\n\r\nconst start = Date.now()\r\nsetTimeout(() => {\r\n  // busy loop here -> handshake was initialized but not completed within timeout\r\n  const start = Date.now()\r\n  const i = 0;\r\n  while (Date.now() - start < 20 * 1000) {\r\n    ++i;\r\n  }\r\n  console.log('waited', Date.now() - start);\r\n});\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(`connect ${socket.id}`);\r\n});\r\n\r\nsocket.on(\"error\", (err) => {\r\n  console.trace(`error -`, err);\r\n});\r\n\r\nsocket.on(\"connect_error\", (err) => {\r\n  console.trace(`connect_error -`, err);\r\n});\r\n\r\nsocket.on(\"disconnect\", () => {\r\n  console.log(\"disconnect\");\r\n});\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe `connect_error` should convey the timeout error message, or at least the `error` handler should trigger with the `timeout` message afterwards.\r\n\r\nAs shown above, this requires fixing the [timeout handler](https://github.com/socketio/socket.io-client/blob/4.3.2/lib/manager.ts#L353).\r\n\r\n\r\n**Platform:**\r\n - Device: PC\r\n - OS: Windows 10\r\n\r\n# Workaround\r\n\r\nA naive way of working around this bug is to set [client timeout option](https://socket.io/docs/v4/client-options/#timeout) to a very high value (e.g. `1e6` or some rough estimate of the max time your client is busy for).\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4062/labels{/name}",
		"author_association":"NONE",
		"number":4062,
		"updated_at":"2021-11-14T14:02:36Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4062/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":977783090,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4062/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4062",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4062/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4062",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4062/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Domiii/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Domiii/repos",
			"following_url":"https://api.github.com/users/Domiii/following{/other_user}",
			"starred_url":"https://api.github.com/users/Domiii/starred{/owner}{/repo}",
			"login":"Domiii",
			"followers_url":"https://api.github.com/users/Domiii/followers",
			"type":"User",
			"url":"https://api.github.com/users/Domiii",
			"subscriptions_url":"https://api.github.com/users/Domiii/subscriptions",
			"received_events_url":"https://api.github.com/users/Domiii/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/282899?v=4",
			"events_url":"https://api.github.com/users/Domiii/events{/privacy}",
			"html_url":"https://github.com/Domiii",
			"site_admin":false,
			"id":282899,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI4Mjg5OQ==",
			"organizations_url":"https://api.github.com/users/Domiii/orgs"
		},
		"node_id":"MDU6SXNzdWU5Nzc3ODMwOTA="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-08-10T03:50:40Z",
		"title":"Not working with flutter socket.io-client since version 3",
		"body":"**Describe the bug**\r\nAs from version 3 for server side, the socket.io-client for flutter android does not connect and keeps saying connection error where as version 2 works quite alright but the maintenance message is enough to be scared of.\r\n\r\nThere should be sync update and support with the flutter app as well as it works in javascript frameworks.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4052/labels{/name}",
		"author_association":"NONE",
		"number":4052,
		"updated_at":"2022-03-15T21:02:56Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4052/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":964567760,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4052/timeline",
		"comments":6,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4052",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4052/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4052",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4052/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Mrbeyond/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Mrbeyond/repos",
			"following_url":"https://api.github.com/users/Mrbeyond/following{/other_user}",
			"starred_url":"https://api.github.com/users/Mrbeyond/starred{/owner}{/repo}",
			"login":"Mrbeyond",
			"followers_url":"https://api.github.com/users/Mrbeyond/followers",
			"type":"User",
			"url":"https://api.github.com/users/Mrbeyond",
			"subscriptions_url":"https://api.github.com/users/Mrbeyond/subscriptions",
			"received_events_url":"https://api.github.com/users/Mrbeyond/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/47877329?v=4",
			"events_url":"https://api.github.com/users/Mrbeyond/events{/privacy}",
			"html_url":"https://github.com/Mrbeyond",
			"site_admin":false,
			"id":47877329,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ3ODc3MzI5",
			"organizations_url":"https://api.github.com/users/Mrbeyond/orgs"
		},
		"node_id":"MDU6SXNzdWU5NjQ1Njc3NjA="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-08-09T09:06:58Z",
		"title":"Version diff warning",
		"body":"**Is your feature request related to a problem? Please describe.**\r\nLast time I had a problem. When I start developing a service, which uses the socket io on the client and on the server-side. The problem was when the server and the client were on a different package version after an update in the package.json. And after this, the client doesn't connect to the server, and in this case, we don't have an error.\r\n\r\n**Describe the solution you'd like**\r\nI would like a more clear error, for example in the handshake request, the server can validate the client socket version, and can throw an error if the difference is too big.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4051/labels{/name}",
		"author_association":"NONE",
		"number":4051,
		"updated_at":"2021-08-09T09:06:58Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4051/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":963790630,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4051/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4051",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4051/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4051",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4051/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/ReArno/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/ReArno/repos",
			"following_url":"https://api.github.com/users/ReArno/following{/other_user}",
			"starred_url":"https://api.github.com/users/ReArno/starred{/owner}{/repo}",
			"login":"ReArno",
			"followers_url":"https://api.github.com/users/ReArno/followers",
			"type":"User",
			"url":"https://api.github.com/users/ReArno",
			"subscriptions_url":"https://api.github.com/users/ReArno/subscriptions",
			"received_events_url":"https://api.github.com/users/ReArno/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/64782667?v=4",
			"events_url":"https://api.github.com/users/ReArno/events{/privacy}",
			"html_url":"https://github.com/ReArno",
			"site_admin":false,
			"id":64782667,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjY0NzgyNjY3",
			"organizations_url":"https://api.github.com/users/ReArno/orgs"
		},
		"node_id":"MDU6SXNzdWU5NjM3OTA2MzA="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-08-06T15:18:30Z",
		"title":"Adding an example of how to watch a serial port using Event Emitters and So…",
		"body":"…cketIO\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [X] other\r\n\r\n### Current behavior\r\n\r\n\r\n### New behavior\r\n\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\nAdding an example of how to listener a device from the node serial port",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4044/labels{/name}",
		"author_association":"NONE",
		"number":4044,
		"updated_at":"2022-01-29T01:57:41Z",
		"draft":false,
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4044/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":962831208,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4044/timeline",
		"pull_request":{
			"patch_url":"https://github.com/socketio/socket.io/pull/4044.patch",
			"html_url":"https://github.com/socketio/socket.io/pull/4044",
			"diff_url":"https://github.com/socketio/socket.io/pull/4044.diff",
			"url":"https://api.github.com/repos/socketio/socket.io/pulls/4044"
		},
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4044",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4044/events",
		"html_url":"https://github.com/socketio/socket.io/pull/4044",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4044/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/durandneto/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/durandneto/repos",
			"following_url":"https://api.github.com/users/durandneto/following{/other_user}",
			"starred_url":"https://api.github.com/users/durandneto/starred{/owner}{/repo}",
			"login":"durandneto",
			"followers_url":"https://api.github.com/users/durandneto/followers",
			"type":"User",
			"url":"https://api.github.com/users/durandneto",
			"subscriptions_url":"https://api.github.com/users/durandneto/subscriptions",
			"received_events_url":"https://api.github.com/users/durandneto/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/6095547?v=4",
			"events_url":"https://api.github.com/users/durandneto/events{/privacy}",
			"html_url":"https://github.com/durandneto",
			"site_admin":false,
			"id":6095547,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjYwOTU1NDc=",
			"organizations_url":"https://api.github.com/users/durandneto/orgs"
		},
		"node_id":"MDExOlB1bGxSZXF1ZXN0NzA1NTY0NzI0"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-07-27T13:25:58Z",
		"title":"Send reason for connection to server",
		"body":"**Is your feature request related to a problem? Please describe.**\r\nWhen a socket connects to the server, e.g., for a chat application, I do not know out of the box if this is a reconnect or a new connection. \r\nIf it is a reconnect, I'd like to add the user to his previous room, while a new user would get a new one, etc etc.\r\n\r\n**Describe the solution you'd like**\r\nIdeally somehow the reason for connection would be available in the 'connection' block.\r\ne.g., by quering socket.connReason\r\n\r\n```\r\nio.on(\"connection\", (socket) => {\r\n  // ...\r\n});\r\n```",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4033/labels{/name}",
		"author_association":"NONE",
		"number":4033,
		"updated_at":"2021-10-27T00:41:05Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4033/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":953882939,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4033/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4033",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4033/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4033",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4033/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/gillerby/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/gillerby/repos",
			"following_url":"https://api.github.com/users/gillerby/following{/other_user}",
			"starred_url":"https://api.github.com/users/gillerby/starred{/owner}{/repo}",
			"login":"gillerby",
			"followers_url":"https://api.github.com/users/gillerby/followers",
			"type":"User",
			"url":"https://api.github.com/users/gillerby",
			"subscriptions_url":"https://api.github.com/users/gillerby/subscriptions",
			"received_events_url":"https://api.github.com/users/gillerby/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/36923120?v=4",
			"events_url":"https://api.github.com/users/gillerby/events{/privacy}",
			"html_url":"https://github.com/gillerby",
			"site_admin":false,
			"id":36923120,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjM2OTIzMTIw",
			"organizations_url":"https://api.github.com/users/gillerby/orgs"
		},
		"node_id":"MDU6SXNzdWU5NTM4ODI5Mzk="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-07-13T08:58:22Z",
		"title":"Dynamic namespace connect sometime not triggers namespace scope with Socket io, Kubernetes",
		"body":"I have faced a strange issue with Socket io dynamic namespace, Kubernetes. Client connected to socketio server but sometimes connection events never trigger the namespace instance.\r\n\r\nI'm experiencing intermittent issue when using a regex expression for dynamic namespace.\r\n\r\n**But, In case:**\r\n-  Running a single socket.io node.\r\n- Or only one namespace\r\n- Or without namespace\r\n=> it works normally !!!\r\n\r\nThe code is working fine most of the time. It only failed when the socket.io client failed to trigger the namespace connect event.\r\n\r\n**Note**: \r\n   - I have only one the code snippet for namespace instance in my app. \r\n   - This issue occurs when running on multiple node deployed in Kubernetes with many pods.\r\n\r\n**Package**\r\n>  \"socket.io\": \"^4.1.1\",\r\n>   \"socket.io-client\": \"^4.1.1\",\r\n\r\n**Server code:**\r\n\r\n```\r\nconst tenantWorkspaces: socketio.Namespace = chatServer.io.of(/^\\/\\w+$/);\r\ntenantWorkspaces.on('connection', async (socket: socketio.Socket) => {\r\n    const tenantWorkspace = socket.nsp;\r\n    console.log('========children namespace======');\r\n\r\n    socket.on('clientEmit', (data) => {\r\n      console.log('clientEmit', data);\r\n    });\r\n\r\n    tenantWorkspace.to(socket.id).emit('serverEmit', {data: 'server emitted !!!'});\r\n\r\n    workspaceId = isString(socket.handshake.query.workspace_id) ? socket.handshake.query.workspace_id : null;\r\n\r\n    console.log(`workspace: ${workspaceId}, contact: ${contactId} connected!`); // debug\r\n};\r\n```\r\n\r\n**Client code**\r\n```\r\n     const options = {\r\n      query: {\r\n        'workspace_id': window.LINEBASE_WORKSPACE_ID || '',\r\n      },\r\n      resource: \"socket.io\",\r\n      transports: ['websocket'],\r\n      upgrade: false,\r\n    };\r\n    socket = io(`${socketUrl}/${namespace}`, options);\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log('socket connected: ' + socket.connected); // true\r\n      console.log('socketID:', socket.id);\r\n    });\r\n    \r\n    socket.on('serverEmit', (data) => {\r\n      console.log(`================ Connect namespace ${namespace} successfully ==============`, data);\r\n    })\r\n```\r\nI spent almost two weeks to find the solution but still have no result.\r\nIs there any solution for this issue ? My application has many namespaces so I needs using dynamic namespace instead of hard code.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4015/labels{/name}",
		"author_association":"NONE",
		"number":4015,
		"updated_at":"2021-10-18T07:19:59Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4015/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":943015825,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4015/timeline",
		"comments":5,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4015",
		"labels":[
			{
				"default":false,
				"color":"5a00ff",
				"name":"unable to reproduce",
				"description":"We were unable to reproduce the issue",
				"id":125457,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/unable%20to%20reproduce",
				"node_id":"MDU6TGFiZWwxMjU0NTc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4015/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4015",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4015/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/FA-QuangLT/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/FA-QuangLT/repos",
			"following_url":"https://api.github.com/users/FA-QuangLT/following{/other_user}",
			"starred_url":"https://api.github.com/users/FA-QuangLT/starred{/owner}{/repo}",
			"login":"FA-QuangLT",
			"followers_url":"https://api.github.com/users/FA-QuangLT/followers",
			"type":"User",
			"url":"https://api.github.com/users/FA-QuangLT",
			"subscriptions_url":"https://api.github.com/users/FA-QuangLT/subscriptions",
			"received_events_url":"https://api.github.com/users/FA-QuangLT/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/61675898?v=4",
			"events_url":"https://api.github.com/users/FA-QuangLT/events{/privacy}",
			"html_url":"https://github.com/FA-QuangLT",
			"site_admin":false,
			"id":61675898,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjYxNjc1ODk4",
			"organizations_url":"https://api.github.com/users/FA-QuangLT/orgs"
		},
		"node_id":"MDU6SXNzdWU5NDMwMTU4MjU="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-07-12T20:33:38Z",
		"title":"Blocking Cross origin requests through cors ",
		"body":"**Is your feature request related to a problem? Please describe.**\r\nCORS object only allows to handle CORS requests but should also allow to block them\r\n\r\n**Describe the solution you'd like**\r\nPass a whitelist of hosts to CORS object to be only allowed to request for web-socket connection.  \r\n\r\n**Describe alternatives you've considered**\r\nprovide a flag to stop all CORS requests \r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4014/labels{/name}",
		"author_association":"NONE",
		"number":4014,
		"updated_at":"2021-07-15T03:06:39Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4014/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":942424402,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4014/timeline",
		"comments":4,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4014",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4014/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4014",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4014/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/abhijatyatewari/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/abhijatyatewari/repos",
			"following_url":"https://api.github.com/users/abhijatyatewari/following{/other_user}",
			"starred_url":"https://api.github.com/users/abhijatyatewari/starred{/owner}{/repo}",
			"login":"abhijatyatewari",
			"followers_url":"https://api.github.com/users/abhijatyatewari/followers",
			"type":"User",
			"url":"https://api.github.com/users/abhijatyatewari",
			"subscriptions_url":"https://api.github.com/users/abhijatyatewari/subscriptions",
			"received_events_url":"https://api.github.com/users/abhijatyatewari/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/1773896?v=4",
			"events_url":"https://api.github.com/users/abhijatyatewari/events{/privacy}",
			"html_url":"https://github.com/abhijatyatewari",
			"site_admin":false,
			"id":1773896,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE3NzM4OTY=",
			"organizations_url":"https://api.github.com/users/abhijatyatewari/orgs"
		},
		"node_id":"MDU6SXNzdWU5NDI0MjQ0MDI="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-07-12T20:00:47Z",
		"title":"Expose io state",
		"body":"Just an idea, would it make sense to expose (properly typed) `socket.io._readyState`?\r\nThere should be 3 possible values: `'closed' | 'opening' | 'open'`.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/4013/labels{/name}",
		"author_association":"NONE",
		"number":4013,
		"updated_at":"2021-07-13T06:34:27Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/4013/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":942398001,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/4013/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/4013",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/4013/events",
		"html_url":"https://github.com/socketio/socket.io/issues/4013",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/4013/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/andrejleitner/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/andrejleitner/repos",
			"following_url":"https://api.github.com/users/andrejleitner/following{/other_user}",
			"starred_url":"https://api.github.com/users/andrejleitner/starred{/owner}{/repo}",
			"login":"andrejleitner",
			"followers_url":"https://api.github.com/users/andrejleitner/followers",
			"type":"User",
			"url":"https://api.github.com/users/andrejleitner",
			"subscriptions_url":"https://api.github.com/users/andrejleitner/subscriptions",
			"received_events_url":"https://api.github.com/users/andrejleitner/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/5689357?v=4",
			"events_url":"https://api.github.com/users/andrejleitner/events{/privacy}",
			"html_url":"https://github.com/andrejleitner",
			"site_admin":false,
			"id":5689357,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjU2ODkzNTc=",
			"organizations_url":"https://api.github.com/users/andrejleitner/orgs"
		},
		"node_id":"MDU6SXNzdWU5NDIzOTgwMDE="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-05-26T07:14:45Z",
		"title":"inter-server comm not really a replacement to customHook / customRequest",
		"body":"customRequest / customHook were triggered for all servers (including current node).\r\n\r\nserverSideEmit only works for \"other\" nodes.\r\n\r\n\r\n```\r\n        if (request.uid === this.uid) {\r\n          debug(\"ignore same uid\");\r\n          return;\r\n        }\r\n```\r\n\r\n\r\n\r\n\r\n\r\nOf course - we can execute method locally using js function, but if we want to combine answers from other nodes + current node - that requires some additional logic.\r\n\r\nProbably worth adding a switch that would allow emiting to local node as well and collect it's result in same manner as remote ones?",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3941/labels{/name}",
		"author_association":"NONE",
		"number":3941,
		"updated_at":"2021-05-27T08:14:59Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3941/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":901876296,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3941/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3941",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3941/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3941",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":2,
			"+1":2,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3941/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/fliespl/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/fliespl/repos",
			"following_url":"https://api.github.com/users/fliespl/following{/other_user}",
			"starred_url":"https://api.github.com/users/fliespl/starred{/owner}{/repo}",
			"login":"fliespl",
			"followers_url":"https://api.github.com/users/fliespl/followers",
			"type":"User",
			"url":"https://api.github.com/users/fliespl",
			"subscriptions_url":"https://api.github.com/users/fliespl/subscriptions",
			"received_events_url":"https://api.github.com/users/fliespl/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/1256832?v=4",
			"events_url":"https://api.github.com/users/fliespl/events{/privacy}",
			"html_url":"https://github.com/fliespl",
			"site_admin":false,
			"id":1256832,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjEyNTY4MzI=",
			"organizations_url":"https://api.github.com/users/fliespl/orgs"
		},
		"node_id":"MDU6SXNzdWU5MDE4NzYyOTY="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-05-07T11:20:47Z",
		"title":"Ability to get all namespaces",
		"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nI'm using [socket.io-prometheus-metrics](https://github.com/UNIwise/socket.io-prometheus-metrics) to report metrics about sockets to Prometheus and it works great with SocketIO 1/2, but not not with 3/4 due to the change in variable name for `_nsps`.\r\n\r\n**Describe the solution you'd like**\r\n\r\nCould we get an API method added to the server which will give a list of all namespaces available - something like:\r\n\r\n```js\r\npublic namespaces() {\r\n  return Object.keys(this._nsps);\r\n}\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\nI've got a typing hack in locally at the moment to workaround it.\r\n\r\n**Additional context**\r\n\r\nN/A\r\n\r\nThanks! Wonderful to see Socket.IO moving forwards again.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3911/labels{/name}",
		"author_association":"NONE",
		"number":3911,
		"updated_at":"2021-08-10T22:56:21Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3911/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":878810931,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3911/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3911",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3911/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3911",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3911/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/DataTables/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/DataTables/repos",
			"following_url":"https://api.github.com/users/DataTables/following{/other_user}",
			"starred_url":"https://api.github.com/users/DataTables/starred{/owner}{/repo}",
			"login":"DataTables",
			"followers_url":"https://api.github.com/users/DataTables/followers",
			"type":"Organization",
			"url":"https://api.github.com/users/DataTables",
			"subscriptions_url":"https://api.github.com/users/DataTables/subscriptions",
			"received_events_url":"https://api.github.com/users/DataTables/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/278219?v=4",
			"events_url":"https://api.github.com/users/DataTables/events{/privacy}",
			"html_url":"https://github.com/DataTables",
			"site_admin":false,
			"id":278219,
			"gravatar_id":"",
			"node_id":"MDEyOk9yZ2FuaXphdGlvbjI3ODIxOQ==",
			"organizations_url":"https://api.github.com/users/DataTables/orgs"
		},
		"node_id":"MDU6SXNzdWU4Nzg4MTA5MzE="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-05-06T18:54:15Z",
		"title":"Consistent socket timeout",
		"body":"Socket client and server version v4.0.2\r\nSocket redis adapter v6.1.0\r\n\r\nMy socket.io client is creating a new connection consistently every 4-5minutes.\r\nIt calls the event `connection_error` with the error `ping_timeout`.\r\nIt continues to reconnect immediately without issue.\r\n\r\nMy setup is the following.\r\nClients connect to server only to listen for messages that are emitted every ~2minutes with no expected response from the client.\r\n\r\nI am using AWS EBS with application load balancer with sticky connections.\r\n\r\n<img width=\"1013\" alt=\"Screen Shot 2021-05-06 at 17 34 43\" src=\"https://user-images.githubusercontent.com/19697277/117362440-a3692500-ae91-11eb-8b39-401af6466e7b.png\">\r\n\r\n<img width=\"636\" alt=\"image\" src=\"https://user-images.githubusercontent.com/19697277/117350822-64cc6e00-ae83-11eb-9d16-680db51e9372.png\">\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3910/labels{/name}",
		"author_association":"NONE",
		"number":3910,
		"updated_at":"2021-05-06T20:37:12Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3910/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":877872791,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3910/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3910",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3910/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3910",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3910/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/scucchiero/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/scucchiero/repos",
			"following_url":"https://api.github.com/users/scucchiero/following{/other_user}",
			"starred_url":"https://api.github.com/users/scucchiero/starred{/owner}{/repo}",
			"login":"scucchiero",
			"followers_url":"https://api.github.com/users/scucchiero/followers",
			"type":"User",
			"url":"https://api.github.com/users/scucchiero",
			"subscriptions_url":"https://api.github.com/users/scucchiero/subscriptions",
			"received_events_url":"https://api.github.com/users/scucchiero/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/19697277?v=4",
			"events_url":"https://api.github.com/users/scucchiero/events{/privacy}",
			"html_url":"https://github.com/scucchiero",
			"site_admin":false,
			"id":19697277,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE5Njk3Mjc3",
			"organizations_url":"https://api.github.com/users/scucchiero/orgs"
		},
		"node_id":"MDU6SXNzdWU4Nzc4NzI3OTE="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-04-13T08:21:56Z",
		"title":"Please update documentation to show how to reject a packet from socket middleware",
		"body":"**Is your feature request related to a problem? Please describe.**\r\nI spent about an hour messing around to figure this out, but I needed a way to drop (or reject) a packet from a middleware, without erroring out (`next(error)`). This is for an ACL I'm working on to only allow users to emit on a channel if they have permission.\r\nI have found a solution, and feel it should be included in the documentation for future reference.\r\n\r\n\r\n**Describe the solution you'd like**\r\nI would like, probably in the [socket middleware section](https://socket.io/docs/v3/server-socket-instance/#Socket-middlewares), to show a way to drop packets from a middleware (I have found a way, but any way really).\r\n\r\nI did it by simply returning from the middleware:\r\n```\r\nio.use(function(socket,next) {\r\n    socket.use(function([event,data],next) {\r\n        if(true /* some condition for dropping the packet */) return\r\n        else next()\r\n    })\r\n    next()\r\n})\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nI've only really tried the above solution I found (other than about an hour of googling and eating the docs)\r\n\r\n**Additional context**\r\nAs in my context, this functionality is very useful for user/access control, and allowed me to consolidate a good amount of code into this one middleware. This functionality is also already present, but not mentioned in the documentation and examples, and I believe this functionality could prove very popular if the documentation could mention it and have the idea in developers minds\r\n\r\n\r\n\r\n\r\nAlso, here is a fully functional example (using express and socket.io) demonstrating dropping every other packet based on a incrementing id:\r\n```\r\n\r\nconst app = require('express')()\r\n\r\nconst http = require('http').Server(app)\r\n\r\nconst io = require('socket.io')(http)\r\n\r\nio.use(function(socket,next) {\r\n\tconsole.log(\"io middleware hit\")\r\n\tsocket.use(function([event,data],next) {\r\n\t\tconsole.log(\"socket middleware hit\")\r\n\t\tif(data.ttl % 2) {\r\n\t\t\tconsole.log(\"dropping packet: \",data.ttl)\r\n\t\t\treturn\r\n\t\t} else {\r\n\t\t\tconsole.log(\"passing packet: \",data.ttl)\r\n\t\t\tnext()\r\n\t\t}\r\n\t})\r\n\tnext()\r\n})\r\nio.on(\"connection\",function(socket) {\r\n\tsocket.on(\"ping\",function(data,ack) {\r\n\t\tconsole.log(\"server got client ping: \",data.ttl)\r\n\t\tack(data)\r\n\t\tsocket.emit(\"pong\",data,function(res) {\r\n\t\t\tconsole.log(\"client acknowledged pong: \",res.ttl)\r\n\t\t})\r\n\t})\r\n})\r\nio.on(\"ping\",function(data,ack) {\r\n\tconsole.log(\"server broadcast got ping: \",data.ttl)\r\n\tack(data)\r\n\tsocket.emit(\"pong\",data)\r\n})\r\n\r\napp.get(\"/\",(req,res) => {\r\n\tres.send(`\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <title>Test</title>\r\n    </head>\r\n    <body>\r\n        <script src=\"/socket.io/socket.io.js\"></script>\r\n        <script>\r\n            var socket = io();\r\n            var pid = 0\r\n            var int\r\n            //console.log(\"awaiting socket connection\")\r\n            socket.on('connect',function() {\r\n                console.log(\"socket connected\")\r\n                int = setInterval(function() {\r\n                    let _pid = pid++\r\n                    console.log(\"client pinging server: \",_pid)\r\n                    socket.emit(\"ping\",{ttl: _pid},function(res) {\r\n                        console.log(\"Server acknowledged ping: \",res.ttl)\r\n                    })\r\n                },1000)\r\n            })\r\n            socket.on('disconnect',function() {\r\n                console.log(\"socket disconnected\")\r\n                clearInterval(int)\r\n            })\r\n            socket.on('pong',function(data,ack) {\r\n                console.log(\"client got pong: \",data.ttl)\r\n                ack(data)\r\n            })\r\n        </script>\r\n    </body>\r\n</html>\r\n\t\t`)\r\n})\r\n\r\nhttp.listen(8000,() => {\r\n\tconsole.log(\"listening on http://localhost:8000/\")\r\n})\r\n```\r\nRunning this example shows that all packets where `ttl` is odd are dropped, and no ack function is called and no error is emitted.\r\n\r\n\r\nI have not gone much into depth on this though (I got the functionality I needed), but I'm sure adding it to the documentation and having other devs look at it will uncover more features and edge cases.\r\n\r\nThank you for considering my request!",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3876/labels{/name}",
		"author_association":"NONE",
		"number":3876,
		"updated_at":"2021-04-13T08:21:56Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3876/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":856714449,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3876/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3876",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3876/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3876",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3876/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/stoneRdev/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/stoneRdev/repos",
			"following_url":"https://api.github.com/users/stoneRdev/following{/other_user}",
			"starred_url":"https://api.github.com/users/stoneRdev/starred{/owner}{/repo}",
			"login":"stoneRdev",
			"followers_url":"https://api.github.com/users/stoneRdev/followers",
			"type":"User",
			"url":"https://api.github.com/users/stoneRdev",
			"subscriptions_url":"https://api.github.com/users/stoneRdev/subscriptions",
			"received_events_url":"https://api.github.com/users/stoneRdev/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/16456386?v=4",
			"events_url":"https://api.github.com/users/stoneRdev/events{/privacy}",
			"html_url":"https://github.com/stoneRdev",
			"site_admin":false,
			"id":16456386,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE2NDU2Mzg2",
			"organizations_url":"https://api.github.com/users/stoneRdev/orgs"
		},
		"node_id":"MDU6SXNzdWU4NTY3MTQ0NDk="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-04-12T23:24:34Z",
		"title":"Function after socket.emit is not executed",
		"body":"**Describe the bug**\r\nAfter socket emits error there is no code executed after that.\r\n\r\n**To Reproduce**\r\nMy code is for work with Twitter stream\r\n***Server***\r\n````\r\n.stream\r\n            .on(\"data\", (data) => {\r\n                console.log(\"pojawily sie jakie dane\");\r\n                    try {\r\n                        const json = JSON.parse(data);\r\n                        if (json.connection_issue) {\r\n                            socket.emit(\"error\",json);\r\n                            reconnect(stream,socket,token); //not executed\r\n\r\n                        } else {\r\n                            if (json.data) {\r\n                                socket.emit(\"tweet\",json);\r\n                                fs.appendFileSync(\"log.txt\",json); // not executed\r\n                            }\r\n                            else {\r\n                              \r\n                                socket.emit(\"AuthError\",json);\r\n                                console.log(\"trying to reconnect\"); //not executed\r\n                                reconnect(stream,socket,token,timeout); //not executed\r\n                            }\r\n                        }\r\n\r\n\r\n````\r\n\r\n\r\n**Expected behavior**\r\nNormal code execution\r\n\r\n**Platform:**\r\n - Device: VPS\r\n - OS: Ubuntu 18.04\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3873/labels{/name}",
		"author_association":"NONE",
		"number":3873,
		"updated_at":"2022-01-20T12:42:36Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3873/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":856432125,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3873/timeline",
		"comments":9,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3873",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			},
			{
				"default":false,
				"color":"B9DDCE",
				"name":"needs investigation",
				"description":"",
				"id":2833344293,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/needs%20investigation",
				"node_id":"MDU6TGFiZWwyODMzMzQ0Mjkz"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3873/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3873",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3873/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Behinder/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Behinder/repos",
			"following_url":"https://api.github.com/users/Behinder/following{/other_user}",
			"starred_url":"https://api.github.com/users/Behinder/starred{/owner}{/repo}",
			"login":"Behinder",
			"followers_url":"https://api.github.com/users/Behinder/followers",
			"type":"User",
			"url":"https://api.github.com/users/Behinder",
			"subscriptions_url":"https://api.github.com/users/Behinder/subscriptions",
			"received_events_url":"https://api.github.com/users/Behinder/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/591766?v=4",
			"events_url":"https://api.github.com/users/Behinder/events{/privacy}",
			"html_url":"https://github.com/Behinder",
			"site_admin":false,
			"id":591766,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjU5MTc2Ng==",
			"organizations_url":"https://api.github.com/users/Behinder/orgs"
		},
		"node_id":"MDU6SXNzdWU4NTY0MzIxMjU="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-04-12T00:05:14Z",
		"title":"[Typescript] `Socket` from `socket.io` cannot be unioned with `Socket` from `socket.io-client`",
		"body":"**Describe the bug**\r\n\r\nIn 3.x of socket.io I could do the following:\r\n\r\n```ts\r\nimport {Socket as ServerSocket} from 'socket.io';\r\nimport {Socket as ClientSocket} from 'socket.io-client';\r\n\r\nfunction doStuff(ws: ClientSocket | ServerSocket) => {\r\n\tws.on('some-event', () => {\r\n\t\t// ...\r\n\t});\r\n}\r\n```\r\n\r\nIn 4.x this now produces an error on the `ws.on` call:\r\n\r\n```\r\n[tsserver 2349] [E] This expression is not callable.\r\n  Each member of the union type '(<Ev extends string>(ev: Ev, listener: ReservedOrUserListener<SocketReservedEvents, DefaultEventsMap, Ev>) => Socket<...>) | (<Ev extends string>(ev: Ev, listener: FallbackToUntypedListener<...>) => Socket<...>)' has signatures, but none of those signatures are compatible with each other.\r\n```\r\n\r\n**To Reproduce**\r\n\r\nSocket.IO server / client version: `4.0.0`\r\n\r\nSee above\r\n\r\n**Expected behavior**\r\nI realize this was a major version bump between 3 and 4, so I can understand if this issue needs to be closed.\r\n\r\nThis also might be more of a typescript problem than anything else. I know the templated emitter feature was added in 4 (which I am looking forward to using once I get around this!) which I assume is what has made the method signatures incompatible?\r\n\r\nI noticed I can \"fix\" this by doing\r\n\r\n```tsx\r\nconst doStuff = (ws: ClientSocket | ServerSocket) => {\r\n  if (ws instanceof ClientSocket) {\r\n    ws.on('some-event', () => {\r\n      // ...\r\n    });\r\n  }\r\n\r\n  if (ws instanceof ServerSocket) {\r\n    ws.on('some-event', () => {\r\n      // ...\r\n    });\r\n  }\r\n};\r\n```\r\n\r\nwhich is pretty goofy.\r\n\r\n**Additional context**\r\nI am on Typescript 4.0.2",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3872/labels{/name}",
		"author_association":"NONE",
		"number":3872,
		"updated_at":"2021-05-06T12:54:52Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3872/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":855441435,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3872/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3872",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3872/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3872",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3872/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/evanpurkhiser/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/evanpurkhiser/repos",
			"following_url":"https://api.github.com/users/evanpurkhiser/following{/other_user}",
			"starred_url":"https://api.github.com/users/evanpurkhiser/starred{/owner}{/repo}",
			"login":"evanpurkhiser",
			"followers_url":"https://api.github.com/users/evanpurkhiser/followers",
			"type":"User",
			"url":"https://api.github.com/users/evanpurkhiser",
			"subscriptions_url":"https://api.github.com/users/evanpurkhiser/subscriptions",
			"received_events_url":"https://api.github.com/users/evanpurkhiser/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/1421724?v=4",
			"events_url":"https://api.github.com/users/evanpurkhiser/events{/privacy}",
			"html_url":"https://github.com/evanpurkhiser",
			"site_admin":false,
			"id":1421724,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE0MjE3MjQ=",
			"organizations_url":"https://api.github.com/users/evanpurkhiser/orgs"
		},
		"node_id":"MDU6SXNzdWU4NTU0NDE0MzU="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-04-02T09:41:45Z",
		"title":"Include cookie-related CORS config in passport-example",
		"body":"### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other: update an example\r\n\r\n### Current behavior\r\n\r\nExample works without problems, but implicitly relies on same-origin cookie sending behaviour which isn't always the case in real implementations. \r\n\r\n### New behavior\r\n\r\nMakes the reliance on same-origin cookie behaviour explicit and add sample CORS configuration that while not strictly needed in the example, are useful when adapting the example to real world scenario. Makes the example a tad bit more \"complete\".\r\n\r\n### Other Info\r\n\r\nAdding this is perhaps important because the configuration affects a library (`express-session`) that users may not directly work with, so may not have knowledge of correct configuration. Moreover, the library itself is centric to `express` so it doesn't offer `socket.io` configuration information, so this might be the best place to put this. \r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3864/labels{/name}",
		"author_association":"NONE",
		"number":3864,
		"updated_at":"2021-04-02T09:44:45Z",
		"draft":false,
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3864/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":849114182,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3864/timeline",
		"pull_request":{
			"patch_url":"https://github.com/socketio/socket.io/pull/3864.patch",
			"html_url":"https://github.com/socketio/socket.io/pull/3864",
			"diff_url":"https://github.com/socketio/socket.io/pull/3864.diff",
			"url":"https://api.github.com/repos/socketio/socket.io/pulls/3864"
		},
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3864",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3864/events",
		"html_url":"https://github.com/socketio/socket.io/pull/3864",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":3,
			"+1":3,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3864/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/peey/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/peey/repos",
			"following_url":"https://api.github.com/users/peey/following{/other_user}",
			"starred_url":"https://api.github.com/users/peey/starred{/owner}{/repo}",
			"login":"peey",
			"followers_url":"https://api.github.com/users/peey/followers",
			"type":"User",
			"url":"https://api.github.com/users/peey",
			"subscriptions_url":"https://api.github.com/users/peey/subscriptions",
			"received_events_url":"https://api.github.com/users/peey/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/4688870?v=4",
			"events_url":"https://api.github.com/users/peey/events{/privacy}",
			"html_url":"https://github.com/peey",
			"site_admin":false,
			"id":4688870,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ2ODg4NzA=",
			"organizations_url":"https://api.github.com/users/peey/orgs"
		},
		"node_id":"MDExOlB1bGxSZXF1ZXN0NjA3OTQyNDQz"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-03-23T14:24:21Z",
		"title":"Add example building to CI",
		"body":"### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\nThe examples aren't built by CI.\r\n\r\n### New behavior\r\n\r\nThe examples that can be built are now built as part of CI.\r\n\r\n### Other information (e.g. related issues)\r\n\r\nOpening this to ensure that PRs like #3855 are checked as part of CI.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3856/labels{/name}",
		"author_association":"CONTRIBUTOR",
		"number":3856,
		"updated_at":"2021-03-31T11:48:03Z",
		"draft":false,
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3856/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":838782500,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3856/timeline",
		"pull_request":{
			"patch_url":"https://github.com/socketio/socket.io/pull/3856.patch",
			"html_url":"https://github.com/socketio/socket.io/pull/3856",
			"diff_url":"https://github.com/socketio/socket.io/pull/3856.diff",
			"url":"https://api.github.com/repos/socketio/socket.io/pulls/3856"
		},
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3856",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3856/events",
		"html_url":"https://github.com/socketio/socket.io/pull/3856",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3856/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/MaximeKjaer/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/MaximeKjaer/repos",
			"following_url":"https://api.github.com/users/MaximeKjaer/following{/other_user}",
			"starred_url":"https://api.github.com/users/MaximeKjaer/starred{/owner}{/repo}",
			"login":"MaximeKjaer",
			"followers_url":"https://api.github.com/users/MaximeKjaer/followers",
			"type":"User",
			"url":"https://api.github.com/users/MaximeKjaer",
			"subscriptions_url":"https://api.github.com/users/MaximeKjaer/subscriptions",
			"received_events_url":"https://api.github.com/users/MaximeKjaer/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/990794?v=4",
			"events_url":"https://api.github.com/users/MaximeKjaer/events{/privacy}",
			"html_url":"https://github.com/MaximeKjaer",
			"site_admin":false,
			"id":990794,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjk5MDc5NA==",
			"organizations_url":"https://api.github.com/users/MaximeKjaer/orgs"
		},
		"node_id":"MDExOlB1bGxSZXF1ZXN0NTk4OTAyODc2"
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-02-04T10:18:45Z",
		"title":"Cleanup and unify access to request details",
		"body":"There are `socket.request.headers`, `socket.conn.request.headers` and `socket.handshake.headers` all referencing the same thing, so this is just a suggestion for a clearer interface around request data.\r\n\r\nSocket.IO server version: `3.1.0`\r\n\r\nhttps://github.com/socketio/socket.io/blob/3.1.0/lib/socket.ts#L126\r\nhttps://github.com/socketio/socket.io/blob/3.1.0/lib/socket.ts#L587-L589\r\nhttps://github.com/socketio/socket.io/blob/3.1.0/lib/socket.ts#L596-L598",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3792/labels{/name}",
		"author_association":"NONE",
		"number":3792,
		"updated_at":"2022-10-14T07:09:19Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3792/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":801138973,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3792/timeline",
		"comments":3,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3792",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"milestone":{
			"creator":{
				"gists_url":"https://api.github.com/users/darrachequesne/gists{/gist_id}",
				"repos_url":"https://api.github.com/users/darrachequesne/repos",
				"following_url":"https://api.github.com/users/darrachequesne/following{/other_user}",
				"starred_url":"https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
				"login":"darrachequesne",
				"followers_url":"https://api.github.com/users/darrachequesne/followers",
				"type":"User",
				"url":"https://api.github.com/users/darrachequesne",
				"subscriptions_url":"https://api.github.com/users/darrachequesne/subscriptions",
				"received_events_url":"https://api.github.com/users/darrachequesne/received_events",
				"avatar_url":"https://avatars.githubusercontent.com/u/13031701?v=4",
				"events_url":"https://api.github.com/users/darrachequesne/events{/privacy}",
				"html_url":"https://github.com/darrachequesne",
				"site_admin":false,
				"id":13031701,
				"gravatar_id":"",
				"node_id":"MDQ6VXNlcjEzMDMxNzAx",
				"organizations_url":"https://api.github.com/users/darrachequesne/orgs"
			},
			"created_at":"2022-05-12T09:49:19Z",
			"title":"5.0.0",
			"closed_issues":0,
			"url":"https://api.github.com/repos/socketio/socket.io/milestones/39",
			"labels_url":"https://api.github.com/repos/socketio/socket.io/milestones/39/labels",
			"number":39,
			"updated_at":"2022-12-08T06:27:50Z",
			"html_url":"https://github.com/socketio/socket.io/milestone/39",
			"id":7972363,
			"state":"open",
			"open_issues":4,
			"node_id":"MI_kwDOAAiDnM4AeaYL"
		},
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3792/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3792",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3792/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/andrejleitner/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/andrejleitner/repos",
			"following_url":"https://api.github.com/users/andrejleitner/following{/other_user}",
			"starred_url":"https://api.github.com/users/andrejleitner/starred{/owner}{/repo}",
			"login":"andrejleitner",
			"followers_url":"https://api.github.com/users/andrejleitner/followers",
			"type":"User",
			"url":"https://api.github.com/users/andrejleitner",
			"subscriptions_url":"https://api.github.com/users/andrejleitner/subscriptions",
			"received_events_url":"https://api.github.com/users/andrejleitner/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/5689357?v=4",
			"events_url":"https://api.github.com/users/andrejleitner/events{/privacy}",
			"html_url":"https://github.com/andrejleitner",
			"site_admin":false,
			"id":5689357,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjU2ODkzNTc=",
			"organizations_url":"https://api.github.com/users/andrejleitner/orgs"
		},
		"node_id":"MDU6SXNzdWU4MDExMzg5NzM="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-01-23T02:45:13Z",
		"title":"QUIC support",
		"body":"It would be super awesome if socket.io can use QUIC as one of its transport layers.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3769/labels{/name}",
		"author_association":"NONE",
		"number":3769,
		"updated_at":"2021-06-22T21:28:58Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3769/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":792416753,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3769/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3769",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3769/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3769",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":7,
			"+1":7,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3769/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/dzcpy/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/dzcpy/repos",
			"following_url":"https://api.github.com/users/dzcpy/following{/other_user}",
			"starred_url":"https://api.github.com/users/dzcpy/starred{/owner}{/repo}",
			"login":"dzcpy",
			"followers_url":"https://api.github.com/users/dzcpy/followers",
			"type":"User",
			"url":"https://api.github.com/users/dzcpy",
			"subscriptions_url":"https://api.github.com/users/dzcpy/subscriptions",
			"received_events_url":"https://api.github.com/users/dzcpy/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/203980?v=4",
			"events_url":"https://api.github.com/users/dzcpy/events{/privacy}",
			"html_url":"https://github.com/dzcpy",
			"site_admin":false,
			"id":203980,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjIwMzk4MA==",
			"organizations_url":"https://api.github.com/users/dzcpy/orgs"
		},
		"node_id":"MDU6SXNzdWU3OTI0MTY3NTM="
	},
	{
		"assignees":[
			
		],
		"created_at":"2021-01-13T20:03:07Z",
		"title":"Unstable connection using socket.io in an Electron-Vue app",
		"body":"**Describe the bug**\r\nI'm using socket.io in an Electron - Vue app to connect to a server running on Raspberry Pi.\r\n\r\nBut the connection is very unstable it connects and disconnects randomly. Sometimes the connection seems to be stable for a longer time in minutes and sometimes it toggles within seconds.\r\n\r\nI have not a lot of experience in debugging and don't know how to find out what happens. I don't think that it is a network problem because I'm running only a few devices on my network (1 to 4 smartphones and computers) and I do not have other network problems.\r\n\r\nThe following errors are from a time window < 1 minute. \r\n\r\n*Client Errors*\r\n\r\n```\r\n┏ Electron -------------------\r\n  SocketIO: Connected HQW367HrKw6LlID7AAAA\r\n  SocketIO: Disconnected reason : transport error\r\n  SocketIO: Connected wgU-FJtmmuarhDsRAAAB\r\n  SocketIO: Disconnected reason : transport error\r\n  SocketIO: Connected QTC_BscYa8PzKXbqAAAC\r\n  SocketIO: Disconnected reason : transport error\r\n  SocketIO: Connected DQF4Q8ErANH3AWxDAAAD\r\n  SocketIO: Disconnected reason : transport error\r\n  SocketIO: Connected QXmbxbViXnvLQ7aeAAAE\r\n  SocketIO: Disconnected reason : transport error\r\n  SocketIO: Connected I9IOwcHWz49rvXZCAAAF\r\n  SocketIO: Disconnected reason : transport error\r\n```\r\n\r\n*Server errors*\r\n```\r\nUser connected HQW367HrKw6LlID7AAAA\r\nUser connected wgU-FJtmmuarhDsRAAAB\r\nUser disconnected wgU-FJtmmuarhDsRAAAB\r\n--> still CONNECTED wgU-FJtmmuarhDsRAAAB\r\nUser connected QTC_BscYa8PzKXbqAAAC\r\nUser connected DQF4Q8ErANH3AWxDAAAD\r\nUser connected QXmbxbViXnvLQ7aeAAAE\r\nUser connected I9IOwcHWz49rvXZCAAAF\r\nUser connected Dj0TA_UwJW2WEwJnAAAG\r\nUser disconnected HQW367HrKw6LlID7AAAA\r\n--> still CONNECTED HQW367HrKw6LlID7AAAA\r\nUser disconnected QTC_BscYa8PzKXbqAAAC\r\n--> still CONNECTED QTC_BscYa8PzKXbqAAAC\r\nUser disconnected DQF4Q8ErANH3AWxDAAAD\r\n--> still CONNECTED DQF4Q8ErANH3AWxDAAAD\r\nUser disconnected QXmbxbViXnvLQ7aeAAAE\r\n--> still CONNECTED QXmbxbViXnvLQ7aeAAAE\r\nUser disconnected I9IOwcHWz49rvXZCAAAF\r\n--> still CONNECTED I9IOwcHWz49rvXZCAAAF\r\n\r\n```\r\n\r\n**To Reproduce**\r\n\r\n*Server*\r\n\r\n```js\r\nimport { Server } from \"socket.io\";\r\n\r\nconst io = new Server(3000, {});\r\n\r\nio.on(\"connection\", (socket) => {\r\n  console.log(`connect ${socket.id}`);\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(`disconnect ${socket.id}`);\r\n  });\r\n});\r\n```\r\n\r\nSocket.IO client version: `x.y.z`\r\n\r\n*Client*\r\n\r\n```js\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io('http://name.local:3000', { 'forceNew':true });\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(`connect ${socket.id}`);\r\n});\r\n\r\nsocket.on(\"disconnect\", () => {\r\n  console.log(\"disconnect\");\r\n});\r\n```\r\n\r\n*Client Dependecies*\r\n```\r\n\"dependencies\": {\r\n    \"bootstrap\": \"^4.5.2\",\r\n    \"bootstrap-vue\": \"^2.17.3\",\r\n    \"sharp\": \"^0.26.2\",\r\n    \"simple-statistics\": \"^7.3.2\",\r\n    \"socket.io\": \"^2.3.0\",\r\n    \"vue\": \"^2.6.12\",\r\n    \"vue-electron\": \"^1.0.6\",\r\n    \"vue-router\": \"^3.0.1\",\r\n    \"vuex\": \"^3.0.1\",\r\n    \"vuex-electron\": \"^1.0.0\",\r\n    \"xstate\": \"^4.13.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"ajv\": \"^6.5.0\",\r\n    \"babel-core\": \"^6.26.3\",\r\n    \"babel-loader\": \"^7.1.4\",\r\n    \"babel-minify-webpack-plugin\": \"^0.3.1\",\r\n    \"babel-plugin-transform-runtime\": \"^6.23.0\",\r\n    \"babel-preset-env\": \"^1.7.0\",\r\n    \"babel-preset-stage-0\": \"^6.24.1\",\r\n    \"babel-register\": \"^6.26.0\",\r\n    \"cfonts\": \"^2.1.2\",\r\n    \"chalk\": \"^2.4.1\",\r\n    \"copy-webpack-plugin\": \"^4.5.1\",\r\n    \"cross-env\": \"^5.1.6\",\r\n    \"css-loader\": \"^0.28.11\",\r\n    \"del\": \"^3.0.0\",\r\n    \"devtron\": \"^1.4.0\",\r\n    \"electron\": \"^10.1.2\",\r\n    \"electron-builder\": \"^20.19.2\",\r\n    \"electron-debug\": \"^1.5.0\",\r\n    \"electron-devtools-installer\": \"^2.2.4\",\r\n    \"file-loader\": \"^1.1.11\",\r\n    \"html-webpack-plugin\": \"^3.2.0\",\r\n    \"mini-css-extract-plugin\": \"0.4.0\",\r\n    \"multispinner\": \"^0.2.1\",\r\n    \"node-loader\": \"^0.6.0\",\r\n    \"style-loader\": \"^0.21.0\",\r\n    \"url-loader\": \"^1.0.1\",\r\n    \"vue-html-loader\": \"^1.2.4\",\r\n    \"vue-loader\": \"^15.2.4\",\r\n    \"vue-style-loader\": \"^4.1.0\",\r\n    \"vue-template-compiler\": \"^2.5.16\",\r\n    \"webpack\": \"^4.15.1\",\r\n    \"webpack-cli\": \"^3.0.8\",\r\n    \"webpack-dev-server\": \"^3.1.4\",\r\n    \"webpack-hot-middleware\": \"^2.22.2\",\r\n    \"webpack-merge\": \"^4.1.3\"\r\n  }\r\n\r\n```\r\n*Server Dependecies*\r\n```\r\n  \"dependencies\": {\r\n    \"chalk\": \"^4.1.0\",\r\n    \"ejs\": \"^3.1.5\",\r\n    \"express\": \"^4.17.1\",\r\n    \"path\": \"^0.12.7\",\r\n    \"polycrc\": \"^1.0.1\",\r\n    \"raspi\": \"^6.0.1\",\r\n    \"raspi-board\": \"^7.3.3\",\r\n    \"raspi-gpio\": \"^6.2.2\",\r\n    \"raspi-peripheral\": \"^3.0.4\",\r\n    \"raspi-pwm\": \"^6.0.0\",\r\n    \"serialport\": \"^9.0.2\",\r\n    \"serve-favicon\": \"^2.5.0\",\r\n    \"simple-statistics\": \"^7.3.0\",\r\n    \"socket.io\": \"^2.3.0\",\r\n    \"systeminformation\": \"^4.27.10\"\r\n  }\r\n\r\n```\r\n\r\n**Expected behavior**\r\nConnection should be persistent.\r\n\r\n**Platform:**\r\nThe client is running on WIN10 PC and the server on Raspberry Pi 4 using Raspian 10 (buster).\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3753/labels{/name}",
		"author_association":"NONE",
		"number":3753,
		"updated_at":"2022-09-16T14:17:01Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3753/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":785403629,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3753/timeline",
		"comments":7,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3753",
		"labels":[
			{
				"default":true,
				"color":"d73a4a",
				"name":"bug",
				"description":"Something isn't working",
				"id":80315,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/bug",
				"node_id":"MDU6TGFiZWw4MDMxNQ=="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3753/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3753",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":3,
			"+1":3,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3753/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/groboter/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/groboter/repos",
			"following_url":"https://api.github.com/users/groboter/following{/other_user}",
			"starred_url":"https://api.github.com/users/groboter/starred{/owner}{/repo}",
			"login":"groboter",
			"followers_url":"https://api.github.com/users/groboter/followers",
			"type":"User",
			"url":"https://api.github.com/users/groboter",
			"subscriptions_url":"https://api.github.com/users/groboter/subscriptions",
			"received_events_url":"https://api.github.com/users/groboter/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/46343293?v=4",
			"events_url":"https://api.github.com/users/groboter/events{/privacy}",
			"html_url":"https://github.com/groboter",
			"site_admin":false,
			"id":46343293,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ2MzQzMjkz",
			"organizations_url":"https://api.github.com/users/groboter/orgs"
		},
		"node_id":"MDU6SXNzdWU3ODU0MDM2Mjk="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-12-12T19:48:26Z",
		"title":"AWS Api Gateway websocket always reconnected",
		"body":"Hi!\r\n\r\n\r\n![DeepinScreenshot_выберите-область_20201212220207](https://user-images.githubusercontent.com/5888590/101993392-59f22080-3ccb-11eb-8058-cc0c88adcb28.png)\r\n\r\n`\r\nconst socket = io(\"wss://server.com\", {\r\n  transports: [\"websocket\"],\r\n  path: \"/\",\r\n});\r\n`\r\n\r\nBackend AWS Gateway API\r\n\r\nWhen connected invoked lamda for $connection, but then reconnect again.\r\n\r\nI used vue-native-websocket it`s ok.\r\n\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3727/labels{/name}",
		"author_association":"NONE",
		"number":3727,
		"updated_at":"2020-12-12T19:48:26Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3727/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":764278539,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3727/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3727",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3727/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3727",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3727/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Feduch/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Feduch/repos",
			"following_url":"https://api.github.com/users/Feduch/following{/other_user}",
			"starred_url":"https://api.github.com/users/Feduch/starred{/owner}{/repo}",
			"login":"Feduch",
			"followers_url":"https://api.github.com/users/Feduch/followers",
			"type":"User",
			"url":"https://api.github.com/users/Feduch",
			"subscriptions_url":"https://api.github.com/users/Feduch/subscriptions",
			"received_events_url":"https://api.github.com/users/Feduch/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/5888590?v=4",
			"events_url":"https://api.github.com/users/Feduch/events{/privacy}",
			"html_url":"https://github.com/Feduch",
			"site_admin":false,
			"id":5888590,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjU4ODg1OTA=",
			"organizations_url":"https://api.github.com/users/Feduch/orgs"
		},
		"node_id":"MDU6SXNzdWU3NjQyNzg1Mzk="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-11-24T10:02:36Z",
		"title":"Perpetual https disconnections over HTTP/2 (due to missing \"Keep-Alive\" header?)",
		"body":"Hello :). I'd like to report a possible bug.\r\n\r\n### Current behaviour\r\n\r\nAfter having developed my application in an unsecured context using HTTP 1.1 (all well), I have now deployed it to a HTTP 2 server using HTTPS. Again, all fine and dandy. For 30 seconds... :)\r\n\r\nAfter that, the socket disconnects and connects again. And again. And again.\r\n\r\n![image](https://user-images.githubusercontent.com/60734380/100077688-f0f15880-2e42-11eb-8811-90d33661f87a.png)\r\n\r\nI'd like to somehow fiddle this in your example, but I'd need to run it behind a load balancer that handles the HTTPS layer, and there's no easy way for me to do that.\r\n\r\n### Expected behaviour\r\n\r\nThat it doesn't drop my connection :). To be clear: all communication works JUST FINE even after a disconnect. The socket disconnects and then immediately reconnects. But this is a problem for me because I lose the handle on a stream server-side. I am using a stream over socket to communicate.\r\n\r\nWhat I saw missing from the server response are the Connection: keep-alive and Keep-Alive: timeout=5 headers that I get on my HTTP 1.1 server. The code is absolutely identical and communication does work just fine.\r\n\r\nPerhaps socket.io has some smart way of working over HTTP 2 but I couldn't find anything about this in the documentation.\r\n\r\nIt's also interesting that the socket client DOES request the keep-alive header. But alas, nothing is returned and that's why maybe the socket disconnects :(\r\n\r\n### Setup\r\n\r\nNodeJS Express web server, simple HTTP, but routed through a Load Balancer (via KONG) which only accepts HTTPS connection. The Load Balancer handles the HTTPS certificate. The Load Balancer also strips those headers away from the response.\r\n\r\nI am using _socket.io-stream_ for communication. I'm basically sending a stream object over the socket and all operations are then made via that stream.\r\n\r\nOf course, I'd be happy to assist in debugging this in any way I can.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3704/labels{/name}",
		"author_association":"NONE",
		"number":3704,
		"updated_at":"2020-11-26T07:21:43Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3704/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":749560244,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3704/timeline",
		"comments":3,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3704",
		"labels":[
			{
				"default":true,
				"color":"DDDDDD",
				"name":"documentation",
				"description":"Improvements or additions to documentation",
				"id":206558,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/documentation",
				"node_id":"MDU6TGFiZWwyMDY1NTg="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3704/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3704",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3704/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/mihaibrana/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/mihaibrana/repos",
			"following_url":"https://api.github.com/users/mihaibrana/following{/other_user}",
			"starred_url":"https://api.github.com/users/mihaibrana/starred{/owner}{/repo}",
			"login":"mihaibrana",
			"followers_url":"https://api.github.com/users/mihaibrana/followers",
			"type":"User",
			"url":"https://api.github.com/users/mihaibrana",
			"subscriptions_url":"https://api.github.com/users/mihaibrana/subscriptions",
			"received_events_url":"https://api.github.com/users/mihaibrana/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/60734380?v=4",
			"events_url":"https://api.github.com/users/mihaibrana/events{/privacy}",
			"html_url":"https://github.com/mihaibrana",
			"site_admin":false,
			"id":60734380,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjYwNzM0Mzgw",
			"organizations_url":"https://api.github.com/users/mihaibrana/orgs"
		},
		"node_id":"MDU6SXNzdWU3NDk1NjAyNDQ="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-11-23T08:32:58Z",
		"title":"Eliminate high coupling to `debug`",
		"body":"### You want to:\r\n\r\n* [ ] report a *bug*\r\n* [x] request a *feature*\r\n\r\n### Implementation\r\n\r\nI'd be willing to create a PR for this feature.\r\n\r\n### Subject of the feature\r\n\r\nReduce coupling and footprint of minified file by using `anylogger` i.s.o `debug`\r\n\r\n### Problem\r\n\r\nCurrently, this library has [a dependency](https://github.com/socketio/socket.io/blob/3.0.3/package.json#L44) on [`debug`](https://npmjs.com/package/debug). Though that is an excellent library, this dependency has 2 major drawbacks:\r\n\r\n* This library is now forcing `debug` onto all developers that use this library (high coupling)\r\n* `debug` is 3.1kB minified and gzipped, directly adding 3.1kB to the minimum footprint of this library\r\n\r\n### Alternatives\r\n\r\nPlease have a look at [`anylogger`](https://npmjs.com/package/anylogger). It's a logging facade specifically designed for libraries. It achieves these goals:\r\n\r\n* Decouple the library from the underlying logging framework\r\n* Reduce the minimal bundle footprint. Anylogger is only 370 bytes.\r\n\r\nThe decoupling is achieved by only including the minimal facade to allow client code to do logging and using adapters to back that facade with an actual logging framework. The reduced minimal footprint follows naturally from this decoupling as the bulk of the code lives in the adapter or logging library.\r\n\r\nThere are already adapters for some popular logging frameworks and more adapters can easily be created:\r\n\r\n* [`anylogger-console`](https://npmjs.com/package/anylogger-console) (to use the console i.s.o some logging framework)\r\n* [`anylogger-debug`](https://npmjs.com/package/anylogger-debug)\r\n* [`anylogger-loglevel`](https://npmjs.com/package/anylogger-loglevel)\r\n* [`anylogger-log4js`](https://npmjs.com/package/anylogger-log4js)\r\n* [`ulog`](https://npmjs.com/package/ulog) (logger with native anylogger support)\r\n\r\nIf this library were to switch to `anylogger`, you could still install `debug` as a dev-dependency and then `require('anylogger-debug')` in your tests to have your tests work exactly as they always did, with `debug` as the logging framework, while still decoupling it from `debug` for all clients.\r\n\r\n> *Disclaimer*: `anylogger` was written by me so I'm self-advertising here. However I do honestly believe it is the best solution in this situation and `anylogger` was written specifically to decrease coupling between libraries and logging frameworks because for any large application, devs typically end up with multiple loggers in their application because some libraries depend on `debug`, others on `loglevel`, yet others on `log4js` and so on. This hurts bundle size badly as we add multiple kB of logging libraries to it.\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3702/labels{/name}",
		"author_association":"CONTRIBUTOR",
		"number":3702,
		"updated_at":"2020-12-05T16:32:15Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3702/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":748591417,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3702/timeline",
		"comments":4,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3702",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3702/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3702",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3702/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Download/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Download/repos",
			"following_url":"https://api.github.com/users/Download/following{/other_user}",
			"starred_url":"https://api.github.com/users/Download/starred{/owner}{/repo}",
			"login":"Download",
			"followers_url":"https://api.github.com/users/Download/followers",
			"type":"User",
			"url":"https://api.github.com/users/Download",
			"subscriptions_url":"https://api.github.com/users/Download/subscriptions",
			"received_events_url":"https://api.github.com/users/Download/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/153391?v=4",
			"events_url":"https://api.github.com/users/Download/events{/privacy}",
			"html_url":"https://github.com/Download",
			"site_admin":false,
			"id":153391,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE1MzM5MQ==",
			"organizations_url":"https://api.github.com/users/Download/orgs"
		},
		"node_id":"MDU6SXNzdWU3NDg1OTE0MTc="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-11-08T16:44:37Z",
		"title":"dynamicNsp's event disappear",
		"body":"\r\n### You want to:\r\n\r\n* [x] report a *bug*\r\n* [ ] request a *feature*\r\n`\r\n### Current behaviour\r\n\r\nNow i use \r\nSocket.io 2.3.0 in pure node v12.19.0\r\nwith socket.io-redis and sticky-session\r\n\r\n*What is actually happening?*\r\n\r\nI use dynamicNsp and run for days, namespace connections are good, but events disappear. Below is the debug logs \r\n\r\n\r\n### Steps to reproduce (if the current behaviour is a bug)\r\n\r\n```\r\n### Socket Code\r\nio.of(/^\\/dynamic-\\d+$/).on(\"connection\", sock => {\r\n\tconst newNamespace = sock.nsp.name;\r\n\tconst { position, entryway } = sock.handshake.query;\r\n\tconst id = sock.id;\r\n\r\n\tif (!position&& !entryway ) {\r\n\t\terrorLog(\"sock.disconnect\", \"not enough querys\");\r\n\t\tsock.disconnect();\r\n\t}\r\n\r\n\trpush(id, sock.id);\r\n\trpush(newNamespace, `${entryway}-${id}`);\r\n\tSset(sock.id, 0);\r\n\r\n\tsock.emit(\"firstInit\", {\r\n\t\tnsp: newNamespace\r\n\t});\r\n\r\n\tsock.on(\"disconnect\", (reason) => {\r\n\t\tlrem(id, sock.id).catch(err => {\r\n\t\t\terrorLog(\"redis.lrem\", err);\r\n\t\t});\r\n\t\tlrem(newNamespace, `${entryway}-${id}`).catch(err => {\r\n\t\t\terrorLog(\"redis.lrem\", err);\r\n\t\t});\r\n\t\tSdel(id).catch(err => {\r\n\t\t\terrorLog(\"Sdel\", err);\r\n\t\t});\r\n\t});\r\n\r\n\tsock.adapter.on(\"error\", err => {\r\n\t\terrorLog(\"sock.adapter.error\", err);\r\n\t});\r\n});\r\n```\r\n\r\n\r\n```\r\n### Right Connection\r\n2020-11-04T08:14:48.482Z socket.io:socket joined room [ 'fLJvxyV-TBCRHV0UAAhx' ]\r\n2020-11-04T08:14:48.503Z engine:ws received \"40/dynamic-1?position=S&entryway=A\"\r\n2020-11-04T08:14:48.503Z engine:socket packet\r\n2020-11-04T08:14:48.503Z socket.io-parser decoded 0/dynamic-1?position=S&entryway=A as {\"type\":0,\"nsp\":\"/dynamic-1?position=S&entryway=A\"}\r\n2020-11-04T08:14:48.503Z socket.io:client connecting to namespace /dynamic-1\r\n2020-11-04T08:14:48.503Z socket.io:namespace adding socket to nsp /dynamic-1\r\n2020-11-04T08:14:48.503Z socket.io:socket socket connected - writing packet\r\n2020-11-04T08:14:48.503Z socket.io:socket joining room /dynamic-1#fLJvxyV-TBCRHV0UAAhx\r\n2020-11-04T08:14:48.503Z socket.io:client writing packet {\"type\":0,\"nsp\":\"/dynamic-1\"}\r\n2020-11-04T08:14:48.503Z socket.io-parser encoding packet {\"type\":0,\"nsp\":\"/dynamic-1\"}\r\n2020-11-04T08:14:48.503Z socket.io-parser encoded {\"type\":0,\"nsp\":\"/dynamic-1\"} as 0/dynamic-1,\r\n2020-11-04T08:14:48.503Z engine:socket sending packet \"message\" (0/dynamic-1,)\r\n2020-11-04T08:14:48.503Z engine:socket flushing buffer to transport\r\n2020-11-04T08:14:48.503Z engine:ws writing \"40/dynamic-1,\"\r\n### here is custom events debug log\r\n2020-11-04T08:14:48.504Z socket.io:socket joining room 1\r\n2020-11-04T08:14:48.504Z socket.io:client writing packet {\"type\":2,\"data\":[\"firstInit\",{\"nsp\":\"/dynamic-1\"}],\"nsp\":\"/dynamic-1\"}\r\n2020-11-04T08:14:48.504Z socket.io-parser encoding packet {\"type\":2,\"data\":[\"firstInit\",{\"nsp\":\"/dynamic-1\"}],\"nsp\":\"/dynamic-1\"}\r\n2020-11-04T08:14:48.504Z socket.io-parser encoded {\"type\":2,\"data\":[\"firstInit\",{\"nsp\":\"/dynamic-1\"}],\"nsp\":\"/dynamic-1\"} as 2/dynamic-1,[\"firstInit\",{\"nsp\":\"/dynamic-1\"}]\r\n2020-11-04T08:14:48.504Z engine:socket sending packet \"message\" (2/dynamic-1,[\"firstInit\",{\"nsp\":\"/dynamic-1\"}])\r\n2020-11-04T08:14:48.504Z socket.io:socket joined room [ '/dynamic-1#fLJvxyV-TBCRHV0UAAhx' ]\r\n2020-11-04T08:14:48.504Z engine:socket flushing buffer to transport\r\n2020-11-04T08:14:48.504Z engine:ws writing \"42/dynamic-1,[\"firstInit\",{\"nsp\":\"/dynamic-1\"}]\"\r\n```\r\n\r\n```\r\n### Connection since event disappeared\r\n2020-11-04T08:13:51.933Z socket.io:socket joined room [ 'X7ENzcAJuF85lfi9AAhv' ]\r\n2020-11-04T08:13:51.951Z engine:ws received \"40/dynamic-1?position=S&entryway=A\"\r\n2020-11-04T08:13:51.951Z engine:socket packet\r\n2020-11-04T08:13:51.951Z socket.io-parser decoded 0/dynamic-1?position=S&entryway=A as {\"type\":0,\"nsp\":\"/dynamic-1?position=S&entryway=A\"}\r\n2020-11-04T08:13:51.951Z socket.io:client connecting to namespace /dynamic-1\r\n2020-11-04T08:13:51.951Z socket.io:namespace adding socket to nsp /dynamic-1\r\n2020-11-04T08:13:51.951Z socket.io:socket socket connected - writing packet\r\n2020-11-04T08:13:51.951Z socket.io:socket joining room /dynamic-1#X7ENzcAJuF85lfi9AAhv\r\n2020-11-04T08:13:51.951Z socket.io:client writing packet {\"type\":0,\"nsp\":\"/dynamic-1\"}\r\n2020-11-04T08:13:51.951Z socket.io-parser encoding packet {\"type\":0,\"nsp\":\"/dynamic-1\"}\r\n2020-11-04T08:13:51.951Z socket.io-parser encoded {\"type\":0,\"nsp\":\"/dynamic-1\"} as 0/dynamic-1,\r\n2020-11-04T08:13:51.951Z engine:socket sending packet \"message\" (0/dynamic-1,)\r\n2020-11-04T08:13:51.951Z engine:socket flushing buffer to transport\r\n2020-11-04T08:13:51.951Z engine:ws writing \"40/dynamic-1,\"\r\n2020-11-04T08:13:51.951Z socket.io:socket joined room [ '/dynamic-1#X7ENzcAJuF85lfi9AAhv' ]\r\n### and nothing events\r\n2020-11-04T08:13:52.287Z axm:services:metrics refreshing metrics value \r\n2020-11-04T08:13:52.288Z axm:services:metrics sending update metrics value to transporter \r\n2020-11-04T08:13:52.567Z axm:services:metrics refreshing metrics value\r\n2020-11-04T08:13:52.568Z axm:services:metrics sending update metrics value to transporter\r\n```\r\n\r\n### Expected behaviour\r\n\r\n*What is expected?*\r\nafter connection, namespace event is write redis and send firstInit event but all event is ignore\r\n\r\n### Setup\r\n- OS: linux\r\n- clients: socket.io-java\r\n- socket.io version: 2.3.0\r\n\r\n### Other information (e.g. stacktraces, related issues, suggestions how to fix)\r\n\r\nthis bug is fixed at 3.0.0?? \r\n\r\nif it fixed 3.0.0, i use client connect with [socket.io-client-java](https://github.com/socketio/socket.io-client-java)  but client-java still support 2.x.0 so how can i fix it temporarily\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3683/labels{/name}",
		"author_association":"NONE",
		"number":3683,
		"updated_at":"2020-11-26T06:21:00Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3683/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":738505405,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3683/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3683",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3683/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3683",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3683/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/yonghun8343/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/yonghun8343/repos",
			"following_url":"https://api.github.com/users/yonghun8343/following{/other_user}",
			"starred_url":"https://api.github.com/users/yonghun8343/starred{/owner}{/repo}",
			"login":"yonghun8343",
			"followers_url":"https://api.github.com/users/yonghun8343/followers",
			"type":"User",
			"url":"https://api.github.com/users/yonghun8343",
			"subscriptions_url":"https://api.github.com/users/yonghun8343/subscriptions",
			"received_events_url":"https://api.github.com/users/yonghun8343/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/29235778?v=4",
			"events_url":"https://api.github.com/users/yonghun8343/events{/privacy}",
			"html_url":"https://github.com/yonghun8343",
			"site_admin":false,
			"id":29235778,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI5MjM1Nzc4",
			"organizations_url":"https://api.github.com/users/yonghun8343/orgs"
		},
		"node_id":"MDU6SXNzdWU3Mzg1MDU0MDU="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-11-07T08:00:58Z",
		"title":"Any way we can make socket.io easier to debug with a debugger",
		"body":"I noticed that whenever I go in with an IDE debugger for socket.io I cannot debug because as I am working through the code the connection is closed and I cannot go to the next step and I am forced to use log statements and try my best to debug the problem. Is there a better solution that could allow me to use the debugger and go through the code slowly without the connection being closed?",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3680/labels{/name}",
		"author_association":"NONE",
		"number":3680,
		"updated_at":"2020-11-07T08:00:58Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3680/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":738196042,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3680/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3680",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3680/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3680",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3680/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/nh916/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/nh916/repos",
			"following_url":"https://api.github.com/users/nh916/following{/other_user}",
			"starred_url":"https://api.github.com/users/nh916/starred{/owner}{/repo}",
			"login":"nh916",
			"followers_url":"https://api.github.com/users/nh916/followers",
			"type":"User",
			"url":"https://api.github.com/users/nh916",
			"subscriptions_url":"https://api.github.com/users/nh916/subscriptions",
			"received_events_url":"https://api.github.com/users/nh916/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/26590757?v=4",
			"events_url":"https://api.github.com/users/nh916/events{/privacy}",
			"html_url":"https://github.com/nh916",
			"site_admin":false,
			"id":26590757,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI2NTkwNzU3",
			"organizations_url":"https://api.github.com/users/nh916/orgs"
		},
		"node_id":"MDU6SXNzdWU3MzgxOTYwNDI="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-10-05T22:55:31Z",
		"title":"Adapter life-cycle management and long-running process functionality",
		"body":"### You want to:\r\n\r\n* [ ] report a *bug*\r\n* [x] request a *feature*\r\n\r\n### Current behaviour\r\n\r\n* socket.io instantiates an adapter, but does not wait for a callback that it is ready. This works fine for many scenarios, but not one where the adapter needs to spool up long-running processes where the adapter is not ready to do work until they are completed. Connections from clients are handled immediately, and if you use a simple pattern of emit-on-connect from client, an early client can easily connect prior to adapter readiness.\r\n* socket.io calls functions on the adapter, and then immediately invokes its own internal callback function with an argument of `null`.\r\n* socket.io does not notify its adapter that it is shutting down (closing). As a result, there is no opportunity to stop long-running processes within the socket or disconnect from whatever scale-out solution is being used.\r\n\r\n### Expected behaviour\r\n\r\n* socket.io should pass a callback to the adapter constructor and wait for it to be called prior to continuing to stand up.\r\n* socket.io should pass a callback function to adapter functions and then use that to trigger callback to the rest of the socket.io stack.\r\n* socket.io should call a method on the adapter to indicate shutdown. It need not wait for a callback, because if shutdown fails, what are you going to do -- not shut down? The in-memory adapter can simply make this function a no-op. While I haven't reviewed the Redis adapter in enough depth to see if there is utility to this function in that adapter, I would imagine that it would be good to detach from Redis to return system resources.\r\n\r\n### Other information (e.g. stacktraces, related issues, suggestions how to fix)\r\n\r\nThis is particularly critical for the adapter that I have built that works with AWS SQS/SNS:\r\n[https://github.com/thinkalpha/socket.io-sqs](https://github.com/thinkalpha/socket.io-sqs) ([socket.io-sqs](https://www.npmjs.com/package/socket.io-sqs) on npm)\r\n\r\nFor example, actions like `addAll` can't be properly handled in time; e.g. if you `addAll` a socket to room xxx and then immediately `.to(xxx).emit(...)`, your message doesn't necessarily end up back at that socket.",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3662/labels{/name}",
		"author_association":"NONE",
		"number":3662,
		"updated_at":"2021-04-07T22:24:12Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3662/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":715215638,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3662/timeline",
		"comments":10,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3662",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3662/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3662",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3662/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/bytenik/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/bytenik/repos",
			"following_url":"https://api.github.com/users/bytenik/following{/other_user}",
			"starred_url":"https://api.github.com/users/bytenik/starred{/owner}{/repo}",
			"login":"bytenik",
			"followers_url":"https://api.github.com/users/bytenik/followers",
			"type":"User",
			"url":"https://api.github.com/users/bytenik",
			"subscriptions_url":"https://api.github.com/users/bytenik/subscriptions",
			"received_events_url":"https://api.github.com/users/bytenik/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/441347?v=4",
			"events_url":"https://api.github.com/users/bytenik/events{/privacy}",
			"html_url":"https://github.com/bytenik",
			"site_admin":false,
			"id":441347,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ0MTM0Nw==",
			"organizations_url":"https://api.github.com/users/bytenik/orgs"
		},
		"node_id":"MDU6SXNzdWU3MTUyMTU2Mzg="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-09-24T11:09:35Z",
		"title":"quality of service features",
		"body":"### You want to:\r\n\r\n* [ ] report a *bug*\r\n* [x] request a *feature*\r\n\r\n### Current behaviour\r\n\r\nIt seems like socket.io does not support quality of service features yet like e.g. MQTT does [like e.g. explained here](https://www.hivemq.com/blog/mqtt-essentials-part-6-mqtt-quality-of-service-levels/). I'm not sure if it's possible to build some or all QoS features into socket.io. Or if it's possible at all because I don't know the socket.io architecture. However would be nice to have QoS features or at least some section in the docs about socket.io message transmission reliability.\r\n\r\n### Steps to reproduce (if the current behaviour is a bug)\r\n\r\nNA\r\n\r\n### Expected behaviour\r\n\r\nNA\r\n\r\n### Setup\r\n\r\nNA\r\n\r\n### Other information (e.g. stacktraces, related issues, suggestions how to fix)\r\n\r\nNA\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3649/labels{/name}",
		"author_association":"NONE",
		"number":3649,
		"updated_at":"2020-10-05T11:52:59Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3649/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":708077680,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3649/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3649",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3649/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3649",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3649/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/fkromer/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/fkromer/repos",
			"following_url":"https://api.github.com/users/fkromer/following{/other_user}",
			"starred_url":"https://api.github.com/users/fkromer/starred{/owner}{/repo}",
			"login":"fkromer",
			"followers_url":"https://api.github.com/users/fkromer/followers",
			"type":"User",
			"url":"https://api.github.com/users/fkromer",
			"subscriptions_url":"https://api.github.com/users/fkromer/subscriptions",
			"received_events_url":"https://api.github.com/users/fkromer/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/10199742?v=4",
			"events_url":"https://api.github.com/users/fkromer/events{/privacy}",
			"html_url":"https://github.com/fkromer",
			"site_admin":false,
			"id":10199742,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjEwMTk5NzQy",
			"organizations_url":"https://api.github.com/users/fkromer/orgs"
		},
		"node_id":"MDU6SXNzdWU3MDgwNzc2ODA="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-09-03T21:43:05Z",
		"title":"socket.io c++ client, SSL",
		"body":"Hi,\r\n\r\nI am currently using this socket.io c++ client: https://socket.io/blog/socket-io-cpp/. However, it looks like the project hasn't been maintained since 2015.\r\n\r\nIt works well, and there is a tls (ssl) c++ library build target, but I am not sure if it is actually using ssl or simply defaulting to http? I am not passing any ssl certicates to the client, so I am not 100% that it is actually using https to connect to the socket.io server. I am passing an https url to the client, and the socket.io server is listening on the https port, so it appears to be working, but is there a way I can confirm this?\r\n\r\nI am also posting this to the GitHub for that project, but if anyone has any input, it would be greatly appreciated.\r\n\r\nThanks,\r\nGabe\r\n\r\n**Note**: for support questions, please use one of these channels: [stackoverflow](http://stackoverflow.com/questions/tagged/socket.io) or [slack](https://socketio.slack.com)\r\n\r\nFor bug reports and feature requests for the **Swift client**, please open an issue [there](https://github.com/socketio/socket.io-client-swift).\r\n\r\nFor bug reports and feature requests for the **Java client**, please open an issue [there](https://github.com/socketio/socket.io-client-java).\r\n\r\n### You want to:\r\n\r\n* [x] report a *bug*\r\n* [ ] request a *feature*\r\n\r\n### Current behaviour\r\n\r\n*What is actually happening?*\r\n\r\n### Steps to reproduce (if the current behaviour is a bug)\r\n\r\n**Note**: the best way (and by that we mean **the only way**) to get a quick answer is to provide a failing test case by forking the following [fiddle](https://github.com/socketio/socket.io-fiddle).\r\n\r\n### Expected behaviour\r\n\r\n*What is expected?*\r\n\r\n### Setup\r\n- OS:\r\n- browser:\r\n- socket.io version:\r\n\r\n### Other information (e.g. stacktraces, related issues, suggestions how to fix)\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3641/labels{/name}",
		"author_association":"NONE",
		"number":3641,
		"updated_at":"2020-09-03T21:43:05Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3641/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":692400781,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3641/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3641",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3641/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3641",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3641/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/gweinstock/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/gweinstock/repos",
			"following_url":"https://api.github.com/users/gweinstock/following{/other_user}",
			"starred_url":"https://api.github.com/users/gweinstock/starred{/owner}{/repo}",
			"login":"gweinstock",
			"followers_url":"https://api.github.com/users/gweinstock/followers",
			"type":"User",
			"url":"https://api.github.com/users/gweinstock",
			"subscriptions_url":"https://api.github.com/users/gweinstock/subscriptions",
			"received_events_url":"https://api.github.com/users/gweinstock/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/7947775?v=4",
			"events_url":"https://api.github.com/users/gweinstock/events{/privacy}",
			"html_url":"https://github.com/gweinstock",
			"site_admin":false,
			"id":7947775,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjc5NDc3NzU=",
			"organizations_url":"https://api.github.com/users/gweinstock/orgs"
		},
		"node_id":"MDU6SXNzdWU2OTI0MDA3ODE="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-06-26T07:26:51Z",
		"title":"New Socket Connection establishes before existing disconnects on server.",
		"body":"Hi Team,\r\n\r\nI have a usecase where i send userid in the query params while making the socket io connection to the server. and this userid is stored on the server so that any new socket request coming with same userid should not be allowed as long as the socket connection is open with this userid. This works fine.\r\n\r\nBut when using this on an android client device and switching mobile data off/on for a split second would initiate a new socket connection and the existing one is not closed at the server and server waits for pingTimeout + pingInterval before it detects the disconnect event on this socket. and since the existing one is not closed and a new socket request with same userid is made to the server, I reject this new connection. Ideally as soon as mobile data is switched off, the socket connection on both the client and server should be disconnected before making a new connection from the same client.\r\n\r\nPlease help me with this issue, \r\n\r\nThanks in Advance,\r\nAmit M",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3616/labels{/name}",
		"author_association":"NONE",
		"number":3616,
		"updated_at":"2021-12-10T07:36:28Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3616/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":646067147,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3616/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3616",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3616/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3616",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3616/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/madabhaviamit/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/madabhaviamit/repos",
			"following_url":"https://api.github.com/users/madabhaviamit/following{/other_user}",
			"starred_url":"https://api.github.com/users/madabhaviamit/starred{/owner}{/repo}",
			"login":"madabhaviamit",
			"followers_url":"https://api.github.com/users/madabhaviamit/followers",
			"type":"User",
			"url":"https://api.github.com/users/madabhaviamit",
			"subscriptions_url":"https://api.github.com/users/madabhaviamit/subscriptions",
			"received_events_url":"https://api.github.com/users/madabhaviamit/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/29198504?v=4",
			"events_url":"https://api.github.com/users/madabhaviamit/events{/privacy}",
			"html_url":"https://github.com/madabhaviamit",
			"site_admin":false,
			"id":29198504,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI5MTk4NTA0",
			"organizations_url":"https://api.github.com/users/madabhaviamit/orgs"
		},
		"node_id":"MDU6SXNzdWU2NDYwNjcxNDc="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-05-07T22:58:46Z",
		"title":"Responsive issue, Desktop-mobile are painting on different object",
		"body":"On the demo page https://socketio-whiteboard-zmx4.herokuapp.com if you open it in deskop and mobile, and then you start painting on desktop, you will get different results on mobile. Explained in video.\r\n\r\nhttps://www.youtube.com/watch?v=swK1lRBEgj4",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3596/labels{/name}",
		"author_association":"NONE",
		"number":3596,
		"updated_at":"2020-05-07T22:58:46Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3596/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":614395166,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3596/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3596",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3596/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3596",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3596/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/qasim483/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/qasim483/repos",
			"following_url":"https://api.github.com/users/qasim483/following{/other_user}",
			"starred_url":"https://api.github.com/users/qasim483/starred{/owner}{/repo}",
			"login":"qasim483",
			"followers_url":"https://api.github.com/users/qasim483/followers",
			"type":"User",
			"url":"https://api.github.com/users/qasim483",
			"subscriptions_url":"https://api.github.com/users/qasim483/subscriptions",
			"received_events_url":"https://api.github.com/users/qasim483/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/9293480?v=4",
			"events_url":"https://api.github.com/users/qasim483/events{/privacy}",
			"html_url":"https://github.com/qasim483",
			"site_admin":false,
			"id":9293480,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjkyOTM0ODA=",
			"organizations_url":"https://api.github.com/users/qasim483/orgs"
		},
		"node_id":"MDU6SXNzdWU2MTQzOTUxNjY="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-05-05T21:02:25Z",
		"title":"memory leak if compression is enabled, on payload bigger than 25kb (or less too, if is converted into string)",
		"body":"# You want to:\r\n\r\n* [x] report a *bug*\r\n* [ ] request a *feature*\r\n\r\n### Current behaviour\r\n\r\nIf you pass a payload (string or binary) of more than 25kb, you get not only 1000x latency, but also an infinite memory leak. Looks like sender objects are not \"dequequed\".\r\n### Steps to reproduce (if the current behaviour is a bug)\r\n\r\n![screenshot-heap-snapshot](https://user-images.githubusercontent.com/375696/81115494-2d3a8700-8efa-11ea-9548-c8c5f1e6da21.jpg)\r\n\r\n[Here](https://github.com/ipsilondev/socket.io-fiddle) is the fiddle to reproduce the case, including memory heap snapshot. Just run server.js and then client.js with Node.js.\r\n\r\n### Expected behaviour\r\n\r\nNot to have a memory leak\r\n### Setup\r\n- OS: Linux Ubuntu 19.10\r\n- browser: Server version, nodejs\r\n- socket.io version: 2.3.0\r\n- NodeJS: v12.15.0\r\n\r\n### Other information (e.g. stacktraces, related issues, suggestions how to fix)\r\n\r\nI have been digging the engine.io & Websocket code. I know for a fact, that the [dequeue function at sender.js](https://github.com/websockets/ws/blob/master/lib/sender.js#L352) is not called and that generates the memory leak. Like that function works on the premise of the `_deflating` prop, made me think that disabling compression would help (and it did). In the example i provide, can also be observed that passing a less than 25kb payload but as string, has the same result. Unfortunately, i don't have the time to dig more into an unknown codebase for now, if this is not fixed in the future, i'll look at it again in more detail to help as much as i can.\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3595/labels{/name}",
		"author_association":"NONE",
		"number":3595,
		"updated_at":"2020-05-05T21:03:31Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3595/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":612893057,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3595/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3595",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3595/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3595",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":5,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":5,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3595/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/shadowofsoul/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/shadowofsoul/repos",
			"following_url":"https://api.github.com/users/shadowofsoul/following{/other_user}",
			"starred_url":"https://api.github.com/users/shadowofsoul/starred{/owner}{/repo}",
			"login":"shadowofsoul",
			"followers_url":"https://api.github.com/users/shadowofsoul/followers",
			"type":"User",
			"url":"https://api.github.com/users/shadowofsoul",
			"subscriptions_url":"https://api.github.com/users/shadowofsoul/subscriptions",
			"received_events_url":"https://api.github.com/users/shadowofsoul/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/375696?v=4",
			"events_url":"https://api.github.com/users/shadowofsoul/events{/privacy}",
			"html_url":"https://github.com/shadowofsoul",
			"site_admin":false,
			"id":375696,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjM3NTY5Ng==",
			"organizations_url":"https://api.github.com/users/shadowofsoul/orgs"
		},
		"node_id":"MDU6SXNzdWU2MTI4OTMwNTc="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-04-23T18:47:09Z",
		"title":"Socket server do not leave polling mode after connection is cut",
		"body":"# You want to:\r\n\r\n* [x] report a *bug*\r\n* [ ] request a *feature*\r\n\r\n### Current behaviour\r\n\r\nI recently detected a really strange behavior that is from what I observed a malfunction in socket.io server.\r\n\r\nMy socket is configured like this (configureSocketServer being the function where the socket.on etc are set): \r\n```\r\n  const socketServer = io(httpServer, {\r\n    transports: ['polling', 'websocket'],\r\n    origins: [appConfig.appDomain],\r\n  });\r\n  socketServer.origins((origin, callback) => {\r\n    if (!origin.startsWith(appConfig.appDomain)) {\r\n      return callback('origin not allowed', false);\r\n    }\r\n    callback(null, true);\r\n  });\r\n  configureSocketServer(socketServer);\r\n  httpServer.listen(appConfig.port);\r\n\r\n```\r\n\r\nThe scenario is the following : I have a socket.io server set in a docker behind an nginx docker with something like 1000 socket clients connected to it (client being android / iOS or browser implementations of socket.io). I If I restart the nginx docker, sockets become crazy: \r\n- socket keep on polling and never upgrade to websocket\r\n- server seems to be unable to free memory (see memory usage capture)\r\n\r\nTo provide some figures, today we add a little incident today around 13:00 that cut connections for like 5 seconds. At 14:00 we decided to restart socket.io server. \r\nFrom 13:40 to 13:50 we had 23910 socket request on nginx server with 23202 being polling (97%)\r\nFrom 14:20 to 14:40 we only have 1463 socket request and with 1202 being polling (80%)\r\n\r\nWhat makes me think that the problem relies in the server : \r\n - every client seems to go crazy whatever the implementation (js, java or swift)\r\n - if I restart nginx at night (and not socket.io-server), socket polling occurs all night until the morning and when people start to connect, I need to restart my socket-io server.\r\n - when I restart socket server everything goes back to normal\r\n\r\n\r\n### Other information (e.g. stacktraces, related issues, suggestions how to fix)\r\n<img width=\"1010\" alt=\"Capture d’écran 2020-04-23 à 20 15 05\" src=\"https://user-images.githubusercontent.com/9982166/80134808-98519880-859f-11ea-9273-1b55e1bca24a.png\">\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3583/labels{/name}",
		"author_association":"NONE",
		"number":3583,
		"updated_at":"2020-04-23T18:48:31Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3583/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":605773467,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3583/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3583",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3583/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3583",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":3,
			"+1":1,
			"rocket":0,
			"hooray":0,
			"eyes":2,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3583/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/mbouxin/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/mbouxin/repos",
			"following_url":"https://api.github.com/users/mbouxin/following{/other_user}",
			"starred_url":"https://api.github.com/users/mbouxin/starred{/owner}{/repo}",
			"login":"mbouxin",
			"followers_url":"https://api.github.com/users/mbouxin/followers",
			"type":"User",
			"url":"https://api.github.com/users/mbouxin",
			"subscriptions_url":"https://api.github.com/users/mbouxin/subscriptions",
			"received_events_url":"https://api.github.com/users/mbouxin/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/9982166?v=4",
			"events_url":"https://api.github.com/users/mbouxin/events{/privacy}",
			"html_url":"https://github.com/mbouxin",
			"site_admin":false,
			"id":9982166,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjk5ODIxNjY=",
			"organizations_url":"https://api.github.com/users/mbouxin/orgs"
		},
		"node_id":"MDU6SXNzdWU2MDU3NzM0Njc="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-02-14T13:37:41Z",
		"title":"No CORS headers are set on the client javascript file",
		"body":"### You want to:\r\n\r\n* [x] report a *bug*\r\n* [ ] request a *feature*\r\n\r\n### Current behaviour\r\n\r\nWhen serving the client via settings the `serveClient` option, the client is not served with the same CORS headers as the actual socket.io server.\r\n\r\n### Steps to reproduce (if the current behaviour is a bug)\r\n\r\nStart a server with `serveClient: true` and request `/socket.io/socket.io.js` with an `Origin` header set.\r\n\r\nObserve that the response does not have any `Access-Control-Allow-Origin` header set.\r\n\r\n### Expected behaviour\r\n\r\nThat the response has the same CORS headers as the normal operation.\r\n\r\n### Other information (e.g. stacktraces, related issues, suggestions how to fix)\r\n\r\n[This function](https://github.com/socketio/socket.io/blob/47161a65d40c2587535de750ac4c7d448e5842ba/lib/index.js#L357-L378) (and the corresponding `serveMap`) should do the same origin checking as [this code](https://github.com/socketio/socket.io/blob/47161a65d40c2587535de750ac4c7d448e5842ba/lib/index.js#L69-L95).",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3552/labels{/name}",
		"author_association":"NONE",
		"number":3552,
		"updated_at":"2022-02-03T16:58:34Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3552/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":565331465,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3552/timeline",
		"comments":8,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3552",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			},
			{
				"default":true,
				"color":"5ACF44",
				"name":"good first issue",
				"description":"Good issue for new contributors to get started with",
				"id":3584872255,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/good%20first%20issue",
				"node_id":"LA_kwDOAAiDnM7VrM8_"
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3552/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3552",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3552/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/aeons/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/aeons/repos",
			"following_url":"https://api.github.com/users/aeons/following{/other_user}",
			"starred_url":"https://api.github.com/users/aeons/starred{/owner}{/repo}",
			"login":"aeons",
			"followers_url":"https://api.github.com/users/aeons/followers",
			"type":"User",
			"url":"https://api.github.com/users/aeons",
			"subscriptions_url":"https://api.github.com/users/aeons/subscriptions",
			"received_events_url":"https://api.github.com/users/aeons/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/1432894?v=4",
			"events_url":"https://api.github.com/users/aeons/events{/privacy}",
			"html_url":"https://github.com/aeons",
			"site_admin":false,
			"id":1432894,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE0MzI4OTQ=",
			"organizations_url":"https://api.github.com/users/aeons/orgs"
		},
		"node_id":"MDU6SXNzdWU1NjUzMzE0NjU="
	},
	{
		"assignees":[
			
		],
		"created_at":"2020-01-01T03:11:59Z",
		"title":"How about integrate all js packages in a monorepo like babel?",
		"body":"It should be easier to learn the whole structure of the project",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3533/labels{/name}",
		"author_association":"NONE",
		"number":3533,
		"updated_at":"2020-01-01T03:11:59Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3533/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":544303780,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3533/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3533",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3533/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3533",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3533/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/R4M80MrX/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/R4M80MrX/repos",
			"following_url":"https://api.github.com/users/R4M80MrX/following{/other_user}",
			"starred_url":"https://api.github.com/users/R4M80MrX/starred{/owner}{/repo}",
			"login":"R4M80MrX",
			"followers_url":"https://api.github.com/users/R4M80MrX/followers",
			"type":"User",
			"url":"https://api.github.com/users/R4M80MrX",
			"subscriptions_url":"https://api.github.com/users/R4M80MrX/subscriptions",
			"received_events_url":"https://api.github.com/users/R4M80MrX/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/29365693?v=4",
			"events_url":"https://api.github.com/users/R4M80MrX/events{/privacy}",
			"html_url":"https://github.com/R4M80MrX",
			"site_admin":false,
			"id":29365693,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI5MzY1Njkz",
			"organizations_url":"https://api.github.com/users/R4M80MrX/orgs"
		},
		"node_id":"MDU6SXNzdWU1NDQzMDM3ODA="
	},
	{
		"assignees":[
			
		],
		"created_at":"2019-11-06T20:01:18Z",
		"title":"Question: Support and development golang implementation socket.io and go-engine.io",
		"body":"Hi, everyone!\r\nDo you wanna support and development implementation socket.io and engine.io in pure golang.\r\nLink to [go-socket.io](https://github.com/googollee/go-socket.io) and link to [go-engine.io](https://github.com/googollee/go-engine.io)",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3511/labels{/name}",
		"author_association":"NONE",
		"number":3511,
		"updated_at":"2020-09-15T14:35:14Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3511/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":518702153,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3511/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3511",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3511/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3511",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3511/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/sshaplygin/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/sshaplygin/repos",
			"following_url":"https://api.github.com/users/sshaplygin/following{/other_user}",
			"starred_url":"https://api.github.com/users/sshaplygin/starred{/owner}{/repo}",
			"login":"sshaplygin",
			"followers_url":"https://api.github.com/users/sshaplygin/followers",
			"type":"User",
			"url":"https://api.github.com/users/sshaplygin",
			"subscriptions_url":"https://api.github.com/users/sshaplygin/subscriptions",
			"received_events_url":"https://api.github.com/users/sshaplygin/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/14343349?v=4",
			"events_url":"https://api.github.com/users/sshaplygin/events{/privacy}",
			"html_url":"https://github.com/sshaplygin",
			"site_admin":false,
			"id":14343349,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE0MzQzMzQ5",
			"organizations_url":"https://api.github.com/users/sshaplygin/orgs"
		},
		"node_id":"MDU6SXNzdWU1MTg3MDIxNTM="
	},
	{
		"assignees":[
			
		],
		"created_at":"2019-05-28T20:48:14Z",
		"title":"Support for multiple server callback calls",
		"body":"\r\n### You want to:\r\n\r\n* [ ] report a *bug*\r\n* [x] request a *feature*\r\n\r\n### Current behaviour\r\n\r\nA callback defined like so:\r\n\r\n```\r\nsocket.emit(\"message\", data, function callback(err)\r\n{\r\n\r\n});\r\n```\r\n\r\nCan only be called once on the receiving end (inside `socket.on()`). Any further calls to it seem to be completely ignored.\r\n\r\n### Requested behaviour\r\n\r\nIt would be nice if more than one call could be acknowledged, although I don't know how viable this is. \r\n\r\nMy current usecase is that I have a server that tells a client to download a certain file from Google Drive. I am trying to get regular progress updates from said client as it completes chunks of that download so the server can display to the user a percentage completed.\r\n\r\nI could potentially achieve this using multiple handlers and having the client emit new events whenever it reports progress, but that would not only require more code but also to keep track of an id for each of these event chains that gets started (since there might be multiple downloads going on).\r\n\r\n### Setup\r\n- OS: Windows 10\r\n- socket.io version: 2.2.0\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3450/labels{/name}",
		"author_association":"NONE",
		"number":3450,
		"updated_at":"2021-06-17T11:35:58Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3450/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":449470243,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3450/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3450",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3450/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3450",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":2,
			"+1":2,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3450/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Drithyl/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Drithyl/repos",
			"following_url":"https://api.github.com/users/Drithyl/following{/other_user}",
			"starred_url":"https://api.github.com/users/Drithyl/starred{/owner}{/repo}",
			"login":"Drithyl",
			"followers_url":"https://api.github.com/users/Drithyl/followers",
			"type":"User",
			"url":"https://api.github.com/users/Drithyl",
			"subscriptions_url":"https://api.github.com/users/Drithyl/subscriptions",
			"received_events_url":"https://api.github.com/users/Drithyl/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/28873180?v=4",
			"events_url":"https://api.github.com/users/Drithyl/events{/privacy}",
			"html_url":"https://github.com/Drithyl",
			"site_admin":false,
			"id":28873180,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI4ODczMTgw",
			"organizations_url":"https://api.github.com/users/Drithyl/orgs"
		},
		"node_id":"MDU6SXNzdWU0NDk0NzAyNDM="
	},
	{
		"assignees":[
			
		],
		"created_at":"2019-04-10T12:03:36Z",
		"title":"Can you recommend a golang client library to match socket. io by nodejs ?",
		"body":"",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3428/labels{/name}",
		"author_association":"NONE",
		"number":3428,
		"updated_at":"2020-09-15T14:39:21Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3428/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":431464867,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3428/timeline",
		"comments":5,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3428",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3428/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3428",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3428/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Mountains-and-rivers/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Mountains-and-rivers/repos",
			"following_url":"https://api.github.com/users/Mountains-and-rivers/following{/other_user}",
			"starred_url":"https://api.github.com/users/Mountains-and-rivers/starred{/owner}{/repo}",
			"login":"Mountains-and-rivers",
			"followers_url":"https://api.github.com/users/Mountains-and-rivers/followers",
			"type":"User",
			"url":"https://api.github.com/users/Mountains-and-rivers",
			"subscriptions_url":"https://api.github.com/users/Mountains-and-rivers/subscriptions",
			"received_events_url":"https://api.github.com/users/Mountains-and-rivers/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/15889219?v=4",
			"events_url":"https://api.github.com/users/Mountains-and-rivers/events{/privacy}",
			"html_url":"https://github.com/Mountains-and-rivers",
			"site_admin":false,
			"id":15889219,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE1ODg5MjE5",
			"organizations_url":"https://api.github.com/users/Mountains-and-rivers/orgs"
		},
		"node_id":"MDU6SXNzdWU0MzE0NjQ4Njc="
	},
	{
		"assignees":[
			
		],
		"created_at":"2018-12-17T13:25:49Z",
		"title":"Volatile not behaving as expected",
		"body":"### You want to:\r\n\r\n* [x] report a *bug*\r\n\r\n### Current behaviour\r\n\r\nServer sends (volatile!) messages in a rate of 300KB/s. Client's bandwidth is 150KB/s.\r\nClient receives (almost all) messages in order, with an increasing delay as time goes by.\r\n\r\nServer drops messages when transport is not writable, but it only happens once/twice every 10/20 messages. According to this setup it should drop every other message.\r\n\r\n### Steps to reproduce (if the current behaviour is a bug)\r\n\r\n**Server**\r\nClone the following test project\r\n\r\nhttps://github.com/shaiperfecto/socket.io-volatile-bug\r\n\r\n> npm install; npm start\r\n\r\nServer starts at port 8081\r\n\r\n**Client**\r\nBrowse to http://<ip of server>:8081\r\n\r\nMake sure you limit your network connection (either using Chrome devtools, I used Network link conditioner [](https://nshipster.com/network-link-conditioner/) to 150KB/s\r\n\r\n### Expected behaviour\r\n\r\nServer should drop messages when the client is still receiving the previously sent message\r\n\r\n### Setup\r\n- OS: MacOS High Sierra\r\n- browser: Chrome\r\n- socket.io version: Latest\r\n\r\n### Other information (e.g. stacktraces, related issues, suggestions how to fix)\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3388/labels{/name}",
		"author_association":"NONE",
		"number":3388,
		"updated_at":"2019-04-10T11:31:58Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3388/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":391710949,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3388/timeline",
		"comments":1,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3388",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3388/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3388",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3388/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/shaiperfecto/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/shaiperfecto/repos",
			"following_url":"https://api.github.com/users/shaiperfecto/following{/other_user}",
			"starred_url":"https://api.github.com/users/shaiperfecto/starred{/owner}{/repo}",
			"login":"shaiperfecto",
			"followers_url":"https://api.github.com/users/shaiperfecto/followers",
			"type":"User",
			"url":"https://api.github.com/users/shaiperfecto",
			"subscriptions_url":"https://api.github.com/users/shaiperfecto/subscriptions",
			"received_events_url":"https://api.github.com/users/shaiperfecto/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/29425693?v=4",
			"events_url":"https://api.github.com/users/shaiperfecto/events{/privacy}",
			"html_url":"https://github.com/shaiperfecto",
			"site_admin":false,
			"id":29425693,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjI5NDI1Njkz",
			"organizations_url":"https://api.github.com/users/shaiperfecto/orgs"
		},
		"node_id":"MDU6SXNzdWUzOTE3MTA5NDk="
	},
	{
		"assignees":[
			
		],
		"created_at":"2018-10-11T21:13:51Z",
		"title":"Why are volatile messages rapidly sent by the server not being received by the client?",
		"body":"### You want to:\r\n\r\n* [x] report a *bug*\r\n* [ ] request a *feature*\r\n\r\n### Current behaviour\r\n\r\nWhen firing off multiple emits from the server, I am getting a behavior I was not expecting for `volatile` messages.\r\n\r\nWhen I do a regular `emit` in rapid succession via a loop, all messages are received by the client and can be inspected via chrome network inspector. When I change to doing `volatile.emit`, I am only receiving the first message (of 100).\r\n\r\nThe question is, why is this the case?\r\n\r\nAdditionally, I noticed that if I had a 50ms delay to sending each `volatile.emit` message via `setTimeout()` then all messages are sent correctly (but of course with a delay). What factors go into this method working as expected, but not immediate `volatile.emit`s working like regular `emit`s?\r\n\r\n### Steps to reproduce (if the current behaviour is a bug)\r\n\r\nBelow is a link to a repo that is a setup of my test between volatile and non volatile messages. https://github.com/GStipick/socketioVolatileTest\r\n\r\n### Expected behaviour\r\n\r\nFrom my understanding of: [The Documentation for volatile messages](https://socket.io/docs/#Sending-volatile-messages) , I would expect all of the messages to be sent, even if they are not received by the client. If they are indeed being sent, then why is `emit` able to be received for all messages, while `volatile.emit` is not?\r\n\r\n### Setup\r\n- OS: Windows 10 (Version 1803) [OS Build 17134.285]\r\n- browser: Firefox/Chrome\r\n- socket.io version: 2.1.1\r\n- node.js version: 10.9.0",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3350/labels{/name}",
		"author_association":"NONE",
		"number":3350,
		"updated_at":"2022-04-05T23:13:39Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3350/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":369307593,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3350/timeline",
		"comments":5,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3350",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3350/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3350",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":2,
			"+1":2,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3350/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/GStipick/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/GStipick/repos",
			"following_url":"https://api.github.com/users/GStipick/following{/other_user}",
			"starred_url":"https://api.github.com/users/GStipick/starred{/owner}{/repo}",
			"login":"GStipick",
			"followers_url":"https://api.github.com/users/GStipick/followers",
			"type":"User",
			"url":"https://api.github.com/users/GStipick",
			"subscriptions_url":"https://api.github.com/users/GStipick/subscriptions",
			"received_events_url":"https://api.github.com/users/GStipick/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/1631152?v=4",
			"events_url":"https://api.github.com/users/GStipick/events{/privacy}",
			"html_url":"https://github.com/GStipick",
			"site_admin":false,
			"id":1631152,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE2MzExNTI=",
			"organizations_url":"https://api.github.com/users/GStipick/orgs"
		},
		"node_id":"MDU6SXNzdWUzNjkzMDc1OTM="
	},
	{
		"assignees":[
			
		],
		"created_at":"2018-05-08T13:24:38Z",
		"title":"Socket.io for golang",
		"body":"*Note*: for support questions, please use one of these channels: [stackoverflow](http://stackoverflow.com/questions/tagged/socket.io) or [slack](https://socketio.slack.com)\r\n\r\n### You want to:\r\n\r\n* [ ] report a *bug*\r\n* [x] request a *feature*\r\n\r\n### Current behaviour\r\nhttps://github.com/googollee/go-socket.io/issues/188\r\n\r\n### Steps to reproduce (if the current behaviour is a bug)\r\n\r\n**Note**: the best way to get a quick answer is to provide a failing test case, by forking the following [fiddle](https://github.com/darrachequesne/socket.io-fiddle) for example.\r\n\r\n### Expected behaviour\r\n\r\n\r\n### Setup\r\n- OS:\r\n- browser:\r\n- socket.io version:\r\n\r\n### Other information (e.g. stacktraces, related issues, suggestions how to fix)\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3242/labels{/name}",
		"author_association":"NONE",
		"number":3242,
		"updated_at":"2021-07-18T14:30:49Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3242/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":321184977,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3242/timeline",
		"comments":7,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3242",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3242/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3242",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":21,
			"+1":21,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3242/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/hwalyonglance/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/hwalyonglance/repos",
			"following_url":"https://api.github.com/users/hwalyonglance/following{/other_user}",
			"starred_url":"https://api.github.com/users/hwalyonglance/starred{/owner}{/repo}",
			"login":"hwalyonglance",
			"followers_url":"https://api.github.com/users/hwalyonglance/followers",
			"type":"User",
			"url":"https://api.github.com/users/hwalyonglance",
			"subscriptions_url":"https://api.github.com/users/hwalyonglance/subscriptions",
			"received_events_url":"https://api.github.com/users/hwalyonglance/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/17963169?v=4",
			"events_url":"https://api.github.com/users/hwalyonglance/events{/privacy}",
			"html_url":"https://github.com/hwalyonglance",
			"site_admin":false,
			"id":17963169,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjE3OTYzMTY5",
			"organizations_url":"https://api.github.com/users/hwalyonglance/orgs"
		},
		"node_id":"MDU6SXNzdWUzMjExODQ5Nzc="
	},
	{
		"assignees":[
			
		],
		"created_at":"2018-05-04T11:57:09Z",
		"title":"Disconnect Reason",
		"body":"*Note*: for support questions, please use one of these channels: [stackoverflow](http://stackoverflow.com/questions/tagged/socket.io) or [slack](https://socketio.slack.com)\r\n\r\n### You want to:\r\n\r\n* [] report a *bug*\r\n* [x ] request a *feature*\r\n\r\n### Current behaviour\r\nServer can disconnect a client only without reason\r\n```\r\nio.on('connection', (socket) => {\r\n  setTimeout(() => socket.disconnect(true), 5000);\r\n});\r\n```\r\n\r\n### Steps to reproduce (if the current behaviour is a bug)\r\n\r\n**Note**: the best way to get a quick answer is to provide a failing test case, by forking the following [fiddle](https://github.com/darrachequesne/socket.io-fiddle) for example.\r\n\r\n### Expected behaviour\r\nI'm looking for a way to disconnect a client with some reason (on the server), for example:\r\n- connection session time exceeded\r\n- user-token has become invalid\r\n- or something else\r\n\r\nin the end I would like to have something like this:\r\n\r\n```\r\n//server\r\nio.on('connection', (socket) => {\r\n  setTimeout(() => {\r\n     socket.disconnect(true, 'My super reason why the connection has been disconnected')\r\n  }, 5000);\r\n});\r\n\r\n//client\r\nsocket.on('disconnect', (reason) => {\r\n  // reason === 'My super reason why the connection has been disconnected'\r\n});\r\n```\r\nplease let me know if you are going to add the feature in future, or maybe there are any problems to  implement it.\r\n\r\n\r\n### Setup\r\n- OS: any\r\n- browser: any\r\n- socket.io version: latest\r\n\r\n### Other information (e.g. stacktraces, related issues, suggestions how to fix)\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3237/labels{/name}",
		"author_association":"NONE",
		"number":3237,
		"updated_at":"2021-02-23T06:35:52Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3237/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":320247918,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3237/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3237",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3237/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3237",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":8,
			"+1":8,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3237/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/Valodya/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/Valodya/repos",
			"following_url":"https://api.github.com/users/Valodya/following{/other_user}",
			"starred_url":"https://api.github.com/users/Valodya/starred{/owner}{/repo}",
			"login":"Valodya",
			"followers_url":"https://api.github.com/users/Valodya/followers",
			"type":"User",
			"url":"https://api.github.com/users/Valodya",
			"subscriptions_url":"https://api.github.com/users/Valodya/subscriptions",
			"received_events_url":"https://api.github.com/users/Valodya/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/4648606?v=4",
			"events_url":"https://api.github.com/users/Valodya/events{/privacy}",
			"html_url":"https://github.com/Valodya",
			"site_admin":false,
			"id":4648606,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ2NDg2MDY=",
			"organizations_url":"https://api.github.com/users/Valodya/orgs"
		},
		"node_id":"MDU6SXNzdWUzMjAyNDc5MTg="
	},
	{
		"assignees":[
			
		],
		"created_at":"2018-02-26T13:06:19Z",
		"title":"Is there Socket.io library for Unity 3d with all the possibilities (binary stream)?",
		"body":"Is there Socket.io library for Unity 3d with all the possibilities (binary stream)?\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3183/labels{/name}",
		"author_association":"NONE",
		"number":3183,
		"updated_at":"2018-02-26T13:06:19Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3183/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":300231737,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3183/timeline",
		"comments":0,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3183",
		"labels":[
			
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3183/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3183",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":2,
			"+1":2,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3183/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/warzoku/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/warzoku/repos",
			"following_url":"https://api.github.com/users/warzoku/following{/other_user}",
			"starred_url":"https://api.github.com/users/warzoku/starred{/owner}{/repo}",
			"login":"warzoku",
			"followers_url":"https://api.github.com/users/warzoku/followers",
			"type":"User",
			"url":"https://api.github.com/users/warzoku",
			"subscriptions_url":"https://api.github.com/users/warzoku/subscriptions",
			"received_events_url":"https://api.github.com/users/warzoku/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/13297801?v=4",
			"events_url":"https://api.github.com/users/warzoku/events{/privacy}",
			"html_url":"https://github.com/warzoku",
			"site_admin":false,
			"id":13297801,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjEzMjk3ODAx",
			"organizations_url":"https://api.github.com/users/warzoku/orgs"
		},
		"node_id":"MDU6SXNzdWUzMDAyMzE3Mzc="
	},
	{
		"assignees":[
			
		],
		"created_at":"2018-01-13T17:54:22Z",
		"title":"Support 'drain' event and boolean response in socket.emit() in order to implement proper Node.js style backpressuring",
		"body":"### You want to:\r\n\r\n* [ ] report a *bug*\r\n* [x] request a *feature*\r\n\r\n### Current behaviour\r\n\r\nFrom the documentation and code of socket.io and its dependencies such as engine.io and ws it's not clear, how to implement output intensive server application, that is capable to handle slow clients by considering \"backpressure\" (As described in https://nodejs.org/en/docs/guides/backpressuring-in-streams/ ). And it seems to be impossible.\r\n\r\n### Steps to reproduce (if the current behaviour is a bug)\r\n\r\nIt's not a bug, so, no step to reproduce.\r\n\r\n### Expected behaviour\r\n\r\nI would expect socket.emit() to return bool and socket have 'drain' event, so that I could work with it like this (simplified):\r\n\r\n```\r\nsomeExternalSourceOfEvents.on('frequent_event', function(data) {\r\n   var ok = socket.emit('event', data);\r\n   if (!ok) {\r\n       someExternalSourceOfEvents.pause();\r\n       socket.on('drain', function() {\r\n           someExternalSourceOfEvents.continue();\r\n       });\r\n   }\r\n});\r\n```\r\n\r\n\r\n\r\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/3158/labels{/name}",
		"author_association":"NONE",
		"number":3158,
		"updated_at":"2022-04-01T12:54:40Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/3158/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":288346920,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/3158/timeline",
		"comments":2,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/3158",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/3158/events",
		"html_url":"https://github.com/socketio/socket.io/issues/3158",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":2,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/3158/reactions",
			"laugh":0,
			"heart":2
		},
		"user":{
			"gists_url":"https://api.github.com/users/illarion/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/illarion/repos",
			"following_url":"https://api.github.com/users/illarion/following{/other_user}",
			"starred_url":"https://api.github.com/users/illarion/starred{/owner}{/repo}",
			"login":"illarion",
			"followers_url":"https://api.github.com/users/illarion/followers",
			"type":"User",
			"url":"https://api.github.com/users/illarion",
			"subscriptions_url":"https://api.github.com/users/illarion/subscriptions",
			"received_events_url":"https://api.github.com/users/illarion/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/535541?v=4",
			"events_url":"https://api.github.com/users/illarion/events{/privacy}",
			"html_url":"https://github.com/illarion",
			"site_admin":false,
			"id":535541,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjUzNTU0MQ==",
			"organizations_url":"https://api.github.com/users/illarion/orgs"
		},
		"node_id":"MDU6SXNzdWUyODgzNDY5MjA="
	}
][
	{
		"assignees":[
			
		],
		"created_at":"2015-03-10T14:52:49Z",
		"title":"Missing error handler on `socket`. when using node.js v0.12",
		"body":":˜/test/socket.io$ npm test\n\n> socket.io@1.3.2 test /home/test/socket.io\n> mocha --reporter dot --slow 200ms --bail\n\nchild_process: customFds option is deprecated, use stdio instead.\n\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․Note: warning expected and normal in test.\nMissing error handler on `socket`.\nError: Illegal attachments\n    at decodeString (/home/test/socket.io/node_modules/socket.io-parser/index.js:290:13)\n    at Decoder.add (/home/test/socket.io/node_modules/socket.io-parser/index.js:238:14)\n    at Client.ondata (/home/test/socket.io/lib/client.js:176:18)\n    at Socket.emit (events.js:107:17)\n    at Socket.onPacket (/home/test/socket.io/node_modules/engine.io/lib/socket.js:99:14)\n    at WebSocket.emit (events.js:129:20)\n    at WebSocket.Transport.onPacket (/home/test/socket.io/node_modules/engine.io/lib/transport.js:91:8)\n    at WebSocket.Transport.onData (/home/socket.io/node_modules/engine.io/lib/transport.js:102:8)\n    at WebSocket.onData (/home/socket.io/node_modules/engine.io/lib/transports/websocket.js:75:30)\n    at WebSocket.emit (events.js:110:17)\n    at Receiver.ontext (/home/socket.io/node_modules/engine.io/node_modules/ws/lib/WebSocket.js:798:10)\n    at /home/socket.io/node_modules/engine.io/node_modules/ws/lib/Receiver.js:473:18\n    at /home/test/socket.io/node_modules/engine.io/node_modules/ws/lib/Receiver.js:357:7\n    at /home/test/socket.io/node_modules/engine.io/node_modules/ws/lib/PerMessageDeflate.js:217:5\n    at afterWrite (_stream_writable.js:361:3)\n    at onwrite (_stream_writable.js:352:7)\n    at WritableState.onwrite (_stream_writable.js:105:5)\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/2047/labels{/name}",
		"author_association":"NONE",
		"number":2047,
		"updated_at":"2022-05-12T09:49:19Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/2047/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":60511668,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/2047/timeline",
		"comments":6,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/2047",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"milestone":{
			"creator":{
				"gists_url":"https://api.github.com/users/darrachequesne/gists{/gist_id}",
				"repos_url":"https://api.github.com/users/darrachequesne/repos",
				"following_url":"https://api.github.com/users/darrachequesne/following{/other_user}",
				"starred_url":"https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
				"login":"darrachequesne",
				"followers_url":"https://api.github.com/users/darrachequesne/followers",
				"type":"User",
				"url":"https://api.github.com/users/darrachequesne",
				"subscriptions_url":"https://api.github.com/users/darrachequesne/subscriptions",
				"received_events_url":"https://api.github.com/users/darrachequesne/received_events",
				"avatar_url":"https://avatars.githubusercontent.com/u/13031701?v=4",
				"events_url":"https://api.github.com/users/darrachequesne/events{/privacy}",
				"html_url":"https://github.com/darrachequesne",
				"site_admin":false,
				"id":13031701,
				"gravatar_id":"",
				"node_id":"MDQ6VXNlcjEzMDMxNzAx",
				"organizations_url":"https://api.github.com/users/darrachequesne/orgs"
			},
			"created_at":"2022-05-12T09:49:19Z",
			"title":"5.0.0",
			"closed_issues":0,
			"url":"https://api.github.com/repos/socketio/socket.io/milestones/39",
			"labels_url":"https://api.github.com/repos/socketio/socket.io/milestones/39/labels",
			"number":39,
			"updated_at":"2022-12-08T06:27:50Z",
			"html_url":"https://github.com/socketio/socket.io/milestone/39",
			"id":7972363,
			"state":"open",
			"open_issues":4,
			"node_id":"MI_kwDOAAiDnM4AeaYL"
		},
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/2047/events",
		"html_url":"https://github.com/socketio/socket.io/issues/2047",
		"reactions":{
			"confused":0,
			"-1":0,
			"total_count":0,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/2047/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/smartmouse/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/smartmouse/repos",
			"following_url":"https://api.github.com/users/smartmouse/following{/other_user}",
			"starred_url":"https://api.github.com/users/smartmouse/starred{/owner}{/repo}",
			"login":"smartmouse",
			"followers_url":"https://api.github.com/users/smartmouse/followers",
			"type":"User",
			"url":"https://api.github.com/users/smartmouse",
			"subscriptions_url":"https://api.github.com/users/smartmouse/subscriptions",
			"received_events_url":"https://api.github.com/users/smartmouse/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/4519627?v=4",
			"events_url":"https://api.github.com/users/smartmouse/events{/privacy}",
			"html_url":"https://github.com/smartmouse",
			"site_admin":false,
			"id":4519627,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjQ1MTk2Mjc=",
			"organizations_url":"https://api.github.com/users/smartmouse/orgs"
		},
		"node_id":"MDU6SXNzdWU2MDUxMTY2OA=="
	},
	{
		"assignees":[
			
		],
		"created_at":"2015-02-03T19:27:09Z",
		"title":"Suggest possible wrong Socket.IO URL instead of CORS error",
		"body":"A lot of people seem to be mistaking the error `No 'Access-Control-Allow-Origin' header is present on the requested resource` for lack of CORS support in Socket.IO.\n\nThis seems to be due to usually trying to initialize a socket to the wrong URL. The URL exists and responds, but obviously it doesn't set CORS headers. And even if it did, it wouldn't be where the socket.io server is hosted.\n\nMaybe we could `console.warn` in these situations to warn the developer about a potential URL error.\n",
		"labels_url":"https://api.github.com/repos/socketio/socket.io/issues/1979/labels{/name}",
		"author_association":"CONTRIBUTOR",
		"number":1979,
		"updated_at":"2021-11-24T10:20:35Z",
		"comments_url":"https://api.github.com/repos/socketio/socket.io/issues/1979/comments",
		"repository_url":"https://api.github.com/repos/socketio/socket.io",
		"id":56424161,
		"state":"open",
		"locked":false,
		"timeline_url":"https://api.github.com/repos/socketio/socket.io/issues/1979/timeline",
		"comments":4,
		"url":"https://api.github.com/repos/socketio/socket.io/issues/1979",
		"labels":[
			{
				"default":true,
				"color":"a2eeef",
				"name":"enhancement",
				"description":"New feature or request",
				"id":124367,
				"url":"https://api.github.com/repos/socketio/socket.io/labels/enhancement",
				"node_id":"MDU6TGFiZWwxMjQzNjc="
			}
		],
		"events_url":"https://api.github.com/repos/socketio/socket.io/issues/1979/events",
		"html_url":"https://github.com/socketio/socket.io/issues/1979",
		"reactions":{
			"confused":1,
			"-1":0,
			"total_count":1,
			"+1":0,
			"rocket":0,
			"hooray":0,
			"eyes":0,
			"url":"https://api.github.com/repos/socketio/socket.io/issues/1979/reactions",
			"laugh":0,
			"heart":0
		},
		"user":{
			"gists_url":"https://api.github.com/users/rauchg/gists{/gist_id}",
			"repos_url":"https://api.github.com/users/rauchg/repos",
			"following_url":"https://api.github.com/users/rauchg/following{/other_user}",
			"starred_url":"https://api.github.com/users/rauchg/starred{/owner}{/repo}",
			"login":"rauchg",
			"followers_url":"https://api.github.com/users/rauchg/followers",
			"type":"User",
			"url":"https://api.github.com/users/rauchg",
			"subscriptions_url":"https://api.github.com/users/rauchg/subscriptions",
			"received_events_url":"https://api.github.com/users/rauchg/received_events",
			"avatar_url":"https://avatars.githubusercontent.com/u/13041?v=4",
			"events_url":"https://api.github.com/users/rauchg/events{/privacy}",
			"html_url":"https://github.com/rauchg",
			"site_admin":false,
			"id":13041,
			"gravatar_id":"",
			"node_id":"MDQ6VXNlcjEzMDQx",
			"organizations_url":"https://api.github.com/users/rauchg/orgs"
		},
		"node_id":"MDU6SXNzdWU1NjQyNDE2MQ=="
	}
][
	
]